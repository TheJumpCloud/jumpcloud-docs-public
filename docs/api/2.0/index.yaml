basePath: /api/v2
consumes:
  - application/json
definitions:
  ADE:
    properties:
      defaultDeviceGroupObjectIds:
        description: 'An array of ObjectIDs identifying the default device groups for this specific type (based on the OS family) of automated device enrollment. Currently, only a single DeviceGroupID is supported.'
        items:
          type: string
        type: array
        x-nullable: true
      enableZeroTouchEnrollment:
        description: A toggle to determine if ADE registered devices should go through JumpCloud Zero Touch Enrollment.
        type: boolean
      setupAssistantOptions:
        description: A Setup Option wrapped as an object
        items:
          $ref: '#/definitions/DEPSetupAssistantOption'
        type: array
        x-deprecated: true
      setupOptions:
        description: A list of configured setup options for this enrollment.
        items:
          $ref: '#/definitions/SetupAssistantOption'
        type: array
      welcomeScreen:
        $ref: '#/definitions/DEPWelcomeScreen'
    title: ADE
    type: object
  ADES:
    properties:
      ios:
        $ref: '#/definitions/ADE'
      macos:
        $ref: '#/definitions/ADE'
    title: ADES
    type: object
  ActiveDirectoriesBulkTranslationRulesUpdateRequest:
    properties:
      appliedOn:
        description: 'Operations when this translation rule is applied (CREATE, UPDATE)'
        items:
          $ref: '#/definitions/jumpcloud.idm.AppliedOn'
        type: array
      destination:
        description: Destination field path where translated value will be stored
        type: string
      direction:
        $ref: '#/definitions/jumpcloud.idm.Direction'
      objectId:
        description: The objectId.
        type: string
      source:
        description: Source field path or expression to be translated
        type: string
      sourceType:
        $ref: '#/definitions/jumpcloud.idm.SourceType'
    required:
      - objectId
    type: object
  ActiveDirectoriesTranslationRulesBulkRequest:
    properties:
      deleteTranslationRuleObjectIds:
        items:
          format: byte
          type: string
        type: array
      insertTranslationRules:
        items:
          $ref: '#/definitions/jumpcloud.idm.IdmTranslationRulesInsertRequest'
        type: array
      updateTranslationRules:
        items:
          $ref: '#/definitions/ActiveDirectoriesBulkTranslationRulesUpdateRequest'
        type: array
    type: object
  ActiveDirectoriesTranslationRulesInsertResponse:
    properties:
      translation_rule:
        $ref: '#/definitions/jumpcloud.idm.TranslationRule'
    type: object
  ActiveDirectoriesTranslationRulesListResponse:
    properties:
      rules:
        items:
          $ref: '#/definitions/jumpcloud.idm.TranslationRule'
        type: array
      totalCount:
        description: Total number of translation rules matching the criteria.
        format: int64
        type: integer
    type: object
  ActiveDirectoriesTranslationRulesPreviewRequest:
    description: Request to preview the result of applying a set of translation rules to a user's data.
    properties:
      activeDirectoryId:
        description: The ObjectID of the Active Directory instance. Optional parameter to specify which Active Directory instance to use for the preview.
        format: hex
        type: string
      translationRules:
        description: A list of translation rules to apply for the preview.
        items:
          $ref: '#/definitions/jumpcloud.idm.TranslationRule'
        type: array
      userObjectId:
        description: The unique identifier (Object ID) of the user whose data will be translated.
        format: hex
        type: string
    required:
      - translationRules
      - userObjectId
    type: object
  ActiveDirectoriesTranslationRulesPreviewResponse:
    description: 'The result of a translation rule preview, showing the original and translated user data.'
    properties:
      destinationUser:
        description: 'The user data after the translation rules have been applied. This represents the final state in the destination system (e.g., JumpCloud).'
        type: string
      sourceUser:
        description: 'The original user data from the source system (e.g., Active Directory) before any translation rules were applied.'
        type: string
    type: object
  ActiveDirectoriesTranslationRulesUpdateResponse:
    properties:
      object_id:
        description: Base64-encoded Object ID of the updated translation rule.
        format: byte
        type: string
    type: object
  Address:
    properties:
      country:
        maxLength: 1024
        type: string
      extendedAddress:
        maxLength: 1024
        type: string
      id:
        type: string
      locality:
        maxLength: 1024
        type: string
      poBox:
        maxLength: 1024
        type: string
      postalCode:
        maxLength: 1024
        type: string
      region:
        maxLength: 1024
        type: string
      streetAddress:
        maxLength: 1024
        type: string
      type:
        maxLength: 1024
        type: string
    type: object
  Administrator:
    example:
      email: joe@example.com
      enableMultiFactor: true
      firstname: Joe
      id: 0123456789abcdef01234567
      lastname: Blough
      registered: false
    properties:
      apiKeyAllowed:
        type: boolean
      apiKeyHash:
        additionalProperties: false
        properties:
          createdAt:
            format: date-time
            type: string
          expireAt:
            format: date-time
            type: string
          prefix:
            type: string
        type: object
      apiKeySet:
        type: boolean
      email:
        type: string
      enableMultiFactor:
        type: boolean
      firstname:
        type: string
      id:
        type: string
      lastname:
        type: string
      organizationAccessTotal:
        type: number
      registered:
        type: boolean
      role:
        type: string
      roleName:
        type: string
      suspended:
        type: boolean
    title: Administrator
    type: object
  AdministratorOrganizationLink:
    example:
      administrator: 6230a0c233a6cbea7c470398
      organization: 6230a0d26a4e4bc86c6b36f1
    properties:
      administrator:
        description: The identifier for an administrator
        type: string
      organization:
        description: The identifier for an organization
        type: string
    title: AdministratorOrganizationLink
    type: object
  AdministratorOrganizationLinkReq:
    example:
      organization: 6230a0d26a4e4bc86c6b36f1
    properties:
      organization:
        description: The identifier for an organization to link this administrator to.
        type: string
    title: AdministratorOrganizationLinkReq
    type: object
  AnyValue:
    description: 'Can be any value - string, number, boolean, array or object.'
  AppleMDM:
    properties:
      ades:
        $ref: '#/definitions/ADES'
      allowMobileUserEnrollment:
        description: A toggle to allow mobile device enrollment for an organization.
        type: boolean
      apnsCertExpiry:
        description: The expiration date and time for the APNS Certificate.
        type: string
      apnsPushTopic:
        description: The push topic assigned to this enrollment by Apple after uploading the Signed CSR plist.
        type: string
      appleCertCreatorAppleID:
        description: The Apple ID of the admin who created the Apple signed certificate associated to the Device Manager.
        type: string
      appleCertSerialNumber:
        description: The serial number of the Apple signed certificate associated to the Device Manager.
        type: string
      defaultIosUserEnrollmentDeviceGroupID:
        description: ObjectId uniquely identifying the MDM default iOS user enrollment device group.
        type: string
      defaultSystemGroupID:
        description: ObjectId uniquely identifying the MDM default System Group.
        type: string
        x-deprecated: true
      dep:
        $ref: '#/definitions/DEP'
      depAccessTokenExpiry:
        description: The expiration date and time for the DEP Access Token. This aligns with the DEP Server Token State.
        type: string
      depServerTokenState:
        description: 'The state of the dep server token, presence and expiry.'
        enum:
          - unknown
          - missing
          - valid
          - expired
        type: string
      id:
        description: 'ObjectId uniquely identifying an MDM Enrollment,'
        type: string
      name:
        description: A friendly name to identify this enrollment.  Not required to be unique.
        maxLength: 255
        type: string
      organization:
        description: The identifier for an organization
        type: string
      serviceDiscoveryEnabled:
        description: A flag to know whether service discovery is enabled or not for the Device Manager.
        type: boolean
    required:
      - id
    title: AppleMDM
    type: object
  ApplicationAssociationRequest:
    properties:
      id:
        description: The ObjectID of Organization being added or removed as an association.
        type: string
      op:
        description: How to modify the Association.
        enum:
          - add
          - remove
        type: string
    required:
      - id
      - op
    title: ApplicationAssociationRequest
    type: object
  AuthnPolicy:
    description: This represents an authentication policy.  See the details of each field for valid values and restrictions.
    properties:
      conditions:
        description: |-
          Conditions may be added to an authentication policy using the following conditional language:

          ```
          <conditions> ::= <expression>
          <expression> ::= <deviceEncrypted> | <deviceManaged> | <ipAddressIn> |
                           <locationIn> | <notExpression> | <allExpression> |
                           <anyExpression>
          <deviceEncrypted> ::= { "deviceEncrypted": <boolean> }
          <deviceManaged> ::= { "deviceManaged": <boolean> }
          <ipAddressIn> ::= { "ipAddressIn": [ <objectId>, ... ] }
          <locationIn> ::= { "locationIn": {
                               "countries": [
                                 <iso_3166_country_code>, ...
                               ]
                             }
                           }
          <notExpression> ::= { "not": <expression> }
          <allExpression> ::= { "all": [ <expression>, ... ] }
          <anyExpression> ::= { "any": [ <expression>, ... ] }
          ```

          For example, to add a condition that applies to IP addresses in a given list, the following condition can be added:

          ```
          {"ipAddressIn": [ <ip_list_object_id> ]}
          ```

          If you would rather exclude IP addresses in the given lists, the following condition could be added:

          ```
          {
            "not": {
              "ipAddressIn": [ <ip_list_object_id_1>, <ip_list_object_id_2> ]
            }
          }
          ```

          You may also include more than one condition and choose whether "all" or "any" of them must be met for the policy to apply:

          ```
          {
            "all": [
              {
                "ipAddressIn": [ <ip_list_object_id>, ... ]
              },
              {
                "deviceManaged": true
              },
              {
                "locationIn": {
                  countries: [ <iso_3166_country_code>, ... ]
                }
              }
            ]
          }
          ```
        type: object
      description:
        type: string
      disabled:
        type: boolean
      effect:
        $ref: '#/definitions/AuthnPolicyEffect'
      id:
        readOnly: true
        type: string
      name:
        type: string
      targets:
        $ref: '#/definitions/AuthnPolicyTargets'
      type:
        $ref: '#/definitions/AuthnPolicyType'
    title: AuthnPolicy
    type: object
  AuthnPolicyCustomErrorMessage:
    description: Custom error message for an authentication policy.
    properties:
      enabled:
        description: Indicates whether the custom error message is enabled or not.
        type: boolean
      message:
        description: The custom error message to be displayed when the policy is applied.
        type: string
      primary_help:
        $ref: '#/definitions/AuthnPolicyHelpLink'
      secondary_help:
        $ref: '#/definitions/AuthnPolicyHelpLink'
    required:
      - message
      - enabled
    title: AuthnPolicyCustomErrorMessage
    type: object
  AuthnPolicyEffect:
    properties:
      action:
        enum:
          - allow
          - deny
          - unknown
        type: string
      custom_error_message:
        $ref: '#/definitions/AuthnPolicyCustomErrorMessage'
      obligations:
        $ref: '#/definitions/AuthnPolicyObligations'
    required:
      - action
    title: AuthnPolicyEffect
    type: object
    x-examples:
      example-allow:
        action: allow
      example-allow-with-mfa:
        action: allow
        obligations:
          mfa:
            required: true
      example-deny:
        action: deny
  AuthnPolicyHelpLink:
    description: Help link for an authentication policy.
    properties:
      text:
        description: The text to be displayed for the help link.
        type: string
      url:
        description: The URL to be opened when the help link is clicked.
        type: string
    title: AuthnPolicyHelpLink
    type: object
  AuthnPolicyObligations:
    properties:
      mfa:
        properties:
          required:
            type: boolean
        type: object
      mfaFactors:
        items:
          properties:
            type:
              enum:
                - DURT
                - WEBAUTHN
                - PUSH
                - DUO
                - TOTP
              type: string
          type: object
        type: array
      userVerification:
        properties:
          requirement:
            enum:
              - none
              - optional
              - required
            type: string
        type: object
    title: AuthnPolicyObligations
    type: object
  AuthnPolicyResourceTarget:
    properties:
      id:
        description: 'Object ID of the resource target. If undefined, then all resources of the given type are targeted.'
        type: string
      type:
        enum:
          - admin_portal
          - user_portal
          - application
          - ldap
        type: string
    required:
      - type
    title: AuthnPolicyResourceTarget
    type: object
  AuthnPolicyTargets:
    properties:
      resources:
        items:
          $ref: '#/definitions/AuthnPolicyResourceTarget'
        type: array
      userAttributes:
        $ref: '#/definitions/AuthnPolicyUserAttributeTarget'
      userGroups:
        $ref: '#/definitions/AuthnPolicyUserGroupTarget'
      users:
        $ref: '#/definitions/AuthnPolicyUserTarget'
    title: AuthnPolicyTargets
    type: object
  AuthnPolicyType:
    default: user_portal
    enum:
      - user_portal
      - application
      - ldap
      - admin_portal
    title: AuthnPolicyType
    type: string
  AuthnPolicyUserAttributeFilter:
    properties:
      field:
        description: The only field that is currently supported is ldap_binding_user
        type: string
      operator:
        enum:
          - EQ
        type: string
      value:
        $ref: '#/definitions/AnyValue'
    title: AuthnPolicyUserAttributeFilter
    type: object
  AuthnPolicyUserAttributeTarget:
    description: User attribute targets are currently only supported for LDAP policies.
    properties:
      exclusions:
        items:
          $ref: '#/definitions/AuthnPolicyUserAttributeFilter'
        type: array
      inclusions:
        items:
          $ref: '#/definitions/AuthnPolicyUserAttributeFilter'
        type: array
    title: AuthnPolicyUserAttributeTarget
    type: object
  AuthnPolicyUserGroupTarget:
    properties:
      exclusions:
        items:
          type: string
        type: array
      inclusions:
        items:
          type: string
        type: array
    title: AuthnPolicyUserGroupTarget
    type: object
  AuthnPolicyUserTarget:
    properties:
      inclusions:
        items:
          type: string
        type: array
    title: AuthnPolicyUserTarget
    type: object
  AutotaskCompany:
    description: Autotask company details
    properties:
      id:
        description: The autotask company identifier.
        type: string
      name:
        description: The autotask company name.
        type: string
    required:
      - id
      - name
    title: AutotaskCompany
    type: object
  AutotaskCompanyResp:
    description: Response for retrieving Autotask companies
    properties:
      records:
        items:
          $ref: '#/definitions/AutotaskCompany'
        type: array
      totalCount:
        type: integer
    required:
      - totalCount
      - records
    title: AutotaskCompanyResp
    type: object
  AutotaskCompanyTypeResp:
    description: Response for retrieving Autotask company types
    properties:
      records:
        items:
          $ref: '#/definitions/BillingIntegrationCompanyType'
        type: array
      totalCount:
        type: integer
    required:
      - totalCount
      - records
    type: object
  AutotaskContract:
    description: Autotask contract details
    properties:
      companyId:
        description: The Autotask company identifier linked to contract.
        type: string
      id:
        description: The contract identifier.
        type: string
      name:
        description: The contract name.
        type: string
    required:
      - id
      - name
      - companyId
    title: AutotaskContract
    type: object
  AutotaskContractField:
    description: Autotask contract field details
    properties:
      name:
        description: The contract field name.
        type: string
      values:
        items:
          properties:
            label:
              type: string
            value:
              type: string
          type: object
        type: array
    required:
      - name
      - values
    title: AutotaskContractField
    type: object
  AutotaskIntegration:
    description: Autotask integration configuration details
    properties:
      id:
        description: The identifier for this Autotask integration.
        type: string
      isMspAuthConfigured:
        description: Has the msp-api been configured with auth data yet
        type: boolean
      username:
        description: The username for connecting to Autotask.
        type: string
    required:
      - id
      - username
    title: Get Autotask integration GET object
    type: object
  AutotaskIntegrationPatchReq:
    description: Request for updating a Autotask integration
    properties:
      secret:
        description: The secret for connecting to Autotask.
        type: string
      username:
        description: The username for connecting to Autotask.
        type: string
    title: Create Autotask Integration PATCH object
    type: object
  AutotaskIntegrationReq:
    description: Request for creating a Autotask integration
    properties:
      secret:
        description: The secret for connecting to Autotask.
        type: string
      username:
        description: The username for connecting to Autotask.
        type: string
    required:
      - username
      - secret
    title: Create Autotask Integration POST object
    type: object
  AutotaskMappingRequest:
    description: Request object for creating Autotask mappings
    minItems: 1
    properties:
      data:
        items:
          properties:
            company:
              $ref: '#/definitions/AutotaskMappingRequestCompany'
            contract:
              $ref: '#/definitions/AutotaskMappingRequestContract'
            delete:
              type: boolean
            organization:
              $ref: '#/definitions/AutotaskMappingRequestOrganization'
            service:
              $ref: '#/definitions/AutotaskMappingRequestService'
          required:
            - organization
            - company
          type: object
        type: array
    title: AutotaskMappingRequest
    type: object
  AutotaskMappingRequestCompany:
    properties:
      id:
        type: string
      name:
        type: string
    required:
      - id
      - name
    type: object
  AutotaskMappingRequestContract:
    properties:
      id:
        type:
          - string
          - 'null'
      name:
        type:
          - string
          - 'null'
    type: object
  AutotaskMappingRequestOrganization:
    properties:
      id:
        minLength: 1
        type: string
      name:
        type: string
    required:
      - id
      - name
    type: object
  AutotaskMappingRequestService:
    properties:
      id:
        type:
          - string
          - 'null'
      name:
        type:
          - string
          - 'null'
      nonBillableUsers:
        type:
          - integer
          - 'null'
    type: object
  AutotaskMappingResponse:
    description: Autotask mapping GET response
    properties:
      company:
        $ref: '#/definitions/AutotaskMappingResponseCompany'
      contract:
        $ref: '#/definitions/AutotaskMappingResponseContract'
      lastSyncDateTime:
        type: string
      lastSyncStatus:
        type: string
      organization:
        $ref: '#/definitions/AutotaskMappingResponseOrganization'
      service:
        $ref: '#/definitions/AutotaskMappingResponseService'
    title: AutotaskMappingResponse
    type: object
  AutotaskMappingResponseCompany:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  AutotaskMappingResponseContract:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  AutotaskMappingResponseOrganization:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  AutotaskMappingResponseService:
    properties:
      id:
        type: string
      name:
        type: string
      nonBillableUsers:
        type: integer
    type: object
  AutotaskService:
    description: Autotask contract service details
    properties:
      contractId:
        description: The autotask contract identifier linked to this contract service.
        type: string
      id:
        description: The contract service identifier.
        type: string
      name:
        description: The autotask service name linked to this contract service.
        type: string
    required:
      - id
      - name
      - contractId
    title: AutotaskService
    type: object
  AutotaskSettings:
    description: Autotask integration settings
    properties:
      automaticTicketing:
        description: Determine whether Autotask uses automatic ticketing
        type: boolean
      companyTypeIds:
        description: The array of Autotask companyType IDs applicable to the Provider.
        items:
          type: integer
        type: array
    title: Get Autotask integration settings GET object
    type: object
  AutotaskSettingsPatchReq:
    description: Request for updating a Autotask integration's settings
    properties:
      automaticTicketing:
        description: Determine whether Autotask uses automatic ticketing
        type: boolean
      companyTypeIds:
        description: The array of Autotask companyType IDs applicable to the Provider.
        items:
          type: integer
        maxItems: 150
        type: array
    title: Update Autotask Integration's Settings PATCH object
    type: object
    x-examples:
      example-1:
        automaticTicketing: true
        companyTypeIds:
          - 0
          - 1
  AutotaskTicketingAlertConfiguration:
    description: 'An AutotaskTicketingAlertConfiguration object requires a queueId if the destination is queue. If the destination is resource, resource.id and resource.role.id are required.'
    properties:
      category:
        type: string
      description:
        type: string
      destination:
        enum:
          - queue
          - resource
        type: string
      displayName:
        type: string
      dueDays:
        type: integer
      id:
        type: integer
      priority:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
      queue:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
      resource:
        properties:
          id:
            type: integer
          name:
            type: string
          role:
            properties:
              id:
                type: integer
              name:
                type: string
            type: object
        type: object
      shouldCreateTickets:
        type: boolean
      source:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
      status:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
    type: object
  AutotaskTicketingAlertConfigurationList:
    properties:
      records:
        items:
          allOf:
            - properties:
                alertId:
                  type: string
              type: object
            - $ref: '#/definitions/AutotaskTicketingAlertConfiguration'
        type: array
    required:
      - records
    type: object
  AutotaskTicketingAlertConfigurationOption:
    properties:
      name:
        type: string
      values:
        items:
          properties:
            label:
              type: string
            value:
              type: integer
          type: object
        type: array
    type: object
  AutotaskTicketingAlertConfigurationOptions:
    properties:
      options:
        items:
          $ref: '#/definitions/AutotaskTicketingAlertConfigurationOption'
        type: array
      resources:
        items:
          $ref: '#/definitions/AutotaskTicketingAlertConfigurationResource'
        type: array
    type: object
  AutotaskTicketingAlertConfigurationRequest:
    description: 'An AutotaskTicketingAlertConfigurationRequest object requires a queueId if the destination is queue. If the destination is resource, resource.id and resource.role.id are required.'
    properties:
      destination:
        enum:
          - queue
          - resource
        type: string
      dueDays:
        type: integer
      priority:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
      queue:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
      resource:
        properties:
          id:
            type: integer
          name:
            type: string
          role:
            properties:
              id:
                type: integer
              name:
                type: string
            type: object
        type: object
      shouldCreateTickets:
        type: boolean
      source:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
      status:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
    required:
      - shouldCreateTickets
      - priority
      - status
      - dueDays
      - destination
    type: object
  AutotaskTicketingAlertConfigurationResource:
    properties:
      id:
        type: integer
      name:
        type: string
      roles:
        items:
          properties:
            label:
              type: string
            value:
              type: integer
          type: object
        type: array
    type: object
  BillingIntegrationCompanyType:
    description: Billing Integration company type
    properties:
      id:
        description: The company type identifier.
        type: number
      name:
        description: The company type name.
        type: string
    required:
      - id
      - name
    type: object
  Case:
    description: Details of the case (support/feature request)
    properties:
      caseNumber:
        type: string
      caseSubmissionProductType:
        type: string
      date:
        type: string
      description:
        type: string
      label:
        type: string
      organization:
        type: string
      os:
        type: string
      reporter:
        type: string
      reporterEmail:
        type: string
      status:
        type: string
      subject:
        type: string
    title: Case
    type: object
  CasesMetadataResponse:
    description: Response for retrieving the cases's metdata
    properties:
      results:
        properties:
          caseSubmissionProductTypes:
            items:
              type: string
            type: array
          caseTypes:
            items:
              type: string
            type: array
          os:
            items:
              type: string
            type: array
          preferredResponseTimes:
            items:
              type: string
            type: array
          productServiceGroups:
            items:
              type: string
            type: array
          products:
            items:
              type: string
            type: array
          severities:
            items:
              type: string
            type: array
          statuses:
            items:
              type: string
            type: array
        type: object
    title: CasesMetadataResponse
    type: object
  CasesResponse:
    description: Response for retrieving the cases (support/feature requests)
    properties:
      results:
        items:
          $ref: '#/definitions/Case'
        type: array
      totalCount:
        type: integer
    title: CasesResponse
    type: object
  ConfiguredPolicyTemplate:
    properties:
      id:
        type: string
      name:
        type: string
      policyTemplateId:
        type: string
      values:
        items:
          $ref: '#/definitions/ConfiguredPolicyTemplateValue'
        type: array
  ConfiguredPolicyTemplateValue:
    example:
      id: 63e6722746d3949ea9c073cc
      name: setallowDeviceNameModification
      value: {}
    properties:
      configFieldId:
        description: The ObjectId of the corresponding Policy Template configuration field.
        type: string
      name:
        type: string
      value:
        description: The value of this Configured Policy Template Value
  ConnectWiseMappingRequest:
    description: Request object for creating ConnectWise mappings
    minItems: 1
    properties:
      data:
        items:
          properties:
            addition:
              properties:
                id:
                  type:
                    - string
                    - 'null'
                name:
                  type:
                    - string
                    - 'null'
              type: object
            agreement:
              properties:
                id:
                  type:
                    - string
                    - 'null'
                name:
                  type:
                    - string
                    - 'null'
              type: object
            company:
              properties:
                id:
                  type: string
                name:
                  type: string
              required:
                - id
                - name
              type: object
            delete:
              type: boolean
            organization:
              properties:
                id:
                  minLength: 1
                  type: string
                name:
                  type: string
              required:
                - id
                - name
              type: object
          required:
            - organization
            - company
          type: object
        type: array
    type: object
    x-examples:
      Create\Edit Existing Mapping example:
        - addition:
            id: string
            name: string
          agreement:
            id: string
            name: string
          company:
            id: string
            name: string
          organization:
            id: newOrganizationId
            name: string
        - addition:
            id: string
            name: string
          agreement:
            id: string
            name: string
          company:
            id: string
            name: string
          organization:
            id: existingOrganizationId
            name: string
      Delete Mapping:
        data:
          - delete: true
            organization:
              id: orgId-1
              name: string
          - delete: true
            organization:
              id: orgId-2
              name: string
          - delete: true
            organization:
              id: orgId-3
              name: string
  ConnectWiseMappingResponse:
    description: ConnectWise mapping GET response
    properties:
      addition:
        properties:
          id:
            type: string
          name:
            type: string
        type: object
      agreement:
        properties:
          id:
            type: string
          name:
            type: string
        type: object
      company:
        properties:
          id:
            type: string
          name:
            type: string
        type: object
      lastSyncDateTime:
        type: string
      lastSyncStatus:
        type: string
      organization:
        properties:
          id:
            type: string
          name:
            type: string
        type: object
    title: ConnectWiseMappingResponse
    type: object
  ConnectWiseSettings:
    description: ConnectWise integration settings
    properties:
      automaticTicketing:
        description: Determine whether ConnectWise uses automatic ticketing
        type: boolean
      companyTypeIds:
        description: The array of ConnectWise companyType IDs applicable to the Provider.
        items:
          type: integer
        type: array
    title: Get ConnectWise integration settings GET object
    type: object
  ConnectWiseSettingsPatchReq:
    description: Request for updating a ConnectWise integration's settings
    properties:
      automaticTicketing:
        description: Determine whether ConnectWise uses automatic ticketing
        type: boolean
      companyTypeIds:
        description: The array of ConnectWise companyType IDs applicable to the Provider.
        items:
          type: integer
        maxItems: 150
        type: array
    title: Update ConnectWise Integration's Settings PATCH object
    type: object
    x-examples:
      example-1:
        automaticTicketing: true
        companyTypeIds:
          - 0
          - 1
  ConnectWiseTicketingAlertConfiguration:
    properties:
      category:
        type: string
      description:
        type: string
      displayName:
        type: string
      dueDays:
        type: integer
      id:
        type: integer
      priority:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
      shouldCreateTickets:
        type: boolean
      source:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
    required:
      - shouldCreateTickets
    type: object
  ConnectWiseTicketingAlertConfigurationList:
    properties:
      records:
        items:
          allOf:
            - properties:
                alertId:
                  type: string
              type: object
            - $ref: '#/definitions/ConnectWiseTicketingAlertConfiguration'
        type: array
    required:
      - records
    type: object
  ConnectWiseTicketingAlertConfigurationOption:
    properties:
      name:
        type: string
      values:
        items:
          properties:
            label:
              type: string
            value:
              type: integer
          type: object
        type: array
    type: object
  ConnectWiseTicketingAlertConfigurationOptions:
    properties:
      records:
        items:
          $ref: '#/definitions/ConnectWiseTicketingAlertConfigurationOption'
        type: array
    required:
      - records
    type: object
  ConnectWiseTicketingAlertConfigurationRequest:
    properties:
      dueDays:
        type: integer
      priority:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
      shouldCreateTickets:
        type: boolean
      source:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
    required:
      - shouldCreateTickets
    type: object
  ConnectwiseAddition:
    description: Connectwise addition details
    properties:
      id:
        description: The addition identifier.
        type: string
      name:
        description: The addition name.
        type: string
    required:
      - id
      - name
    type: object
  ConnectwiseAgreement:
    description: Connectwise agreement details
    properties:
      companyId:
        description: The ConnectWise company identifier linked to agreement.
        type: string
      id:
        description: The agreement identifier.
        type: string
      name:
        description: The agreement name.
        type: string
    required:
      - id
      - name
      - companyId
    type: object
  ConnectwiseCompany:
    description: Connectwise company details
    properties:
      id:
        description: The company identifier.
        type: string
      name:
        description: The company name.
        type: string
    required:
      - id
      - name
    type: object
  ConnectwiseCompanyResp:
    description: Response for retrieving ConnectWise companies
    properties:
      records:
        items:
          $ref: '#/definitions/ConnectwiseCompany'
        type: array
      totalCount:
        type: integer
    required:
      - totalCount
      - records
    type: object
  ConnectwiseCompanyTypeResp:
    description: Response for retrieving ConnectWise company types
    properties:
      records:
        items:
          $ref: '#/definitions/BillingIntegrationCompanyType'
        type: array
      totalCount:
        type: integer
    required:
      - totalCount
      - records
    type: object
  ConnectwiseIntegration:
    description: ConnectWise integration configuration details
    properties:
      companyId:
        description: The ConnectWise company identifier.
        type: string
      id:
        description: The identifier for this ConnectWise integration.
        type: string
      isMspAuthConfigured:
        description: Has the msp-api been configured with auth data yet
        type: boolean
      url:
        description: The base url for connecting to ConnectWise.
        type: string
    required:
      - id
      - url
      - companyId
    title: Get ConnectWise integration GET object
    type: object
  ConnectwiseIntegrationPatchReq:
    description: Request for updating a ConnectWise integration
    properties:
      companyId:
        description: The ConnectWise company identifier.
        type: string
      privateKey:
        description: The ConnectWise private key for authentication
        type: string
      publicKey:
        description: The ConnectWise public key for authentication.
        type: string
      url:
        description: The base url for connecting to ConnectWise.
        type: string
    title: Create ConnectWise Integration PATCH object
    type: object
  ConnectwiseIntegrationReq:
    description: Request for creating a ConnectWise integration
    properties:
      companyId:
        description: The ConnectWise company identifier.
        type: string
      privateKey:
        description: The ConnectWise private key for authentication
        type: string
      publicKey:
        description: The ConnectWise public key for authentication.
        type: string
      url:
        description: The base url for connecting to ConnectWise.
        type: string
    required:
      - url
      - companyId
      - publicKey
      - privateKey
    title: Create ConnectWise Integration POST object
    type: object
  CreateOrganization:
    example:
      maxSystemUsers: 10
      name: Acme Inc
    properties:
      maxSystemUsers:
        description: The maximum number of users allowed in this organization. Requires organizations.billing scope to modify.
        type: integer
      name:
        type: string
    title: CreateOrganization
    type: object
  CustomEmail:
    description: Custom email content created by the admin user to personalize emails sent to their system users.
    properties:
      body:
        minLength: 0
        type: string
      button:
        minLength: 0
        type: string
      header:
        minLength: 0
        type: string
      id:
        readOnly: true
        type: string
      nextStepContactInfo:
        minLength: 0
        type: string
      subject:
        minLength: 0
        type: string
      title:
        minLength: 0
        type: string
      type:
        $ref: '#/definitions/CustomEmailType'
    required:
      - type
      - subject
    title: CustomEmail
    type: object
  CustomEmailTemplate:
    properties:
      description:
        type: string
      displayName:
        type: string
      fields:
        items:
          $ref: '#/definitions/CustomEmailTemplateField'
        type: array
      messageType:
        type: string
      type:
        $ref: '#/definitions/CustomEmailType'
    title: CustomEmailTemplate
    type: object
  CustomEmailTemplateField:
    properties:
      defaultValue:
        type: string
      displayName:
        type: string
      field:
        type: string
      multiline:
        type: boolean
    title: CustomEmailTemplateField
    type: object
  CustomEmailType:
    enum:
      - activate_gapps_user
      - activate_o365_user
      - lockout_notice_user
      - password_expiration
      - password_expiration_warning
      - password_reset_confirmation
      - user_change_password
      - activate_user_custom
    type: string
  DEP:
    properties:
      enableZeroTouchEnrollment:
        description: A toggle to determine if DEP registered devices should go through JumpCloud Zero Touch Enrollment.
        type: boolean
      setupAssistantOptions:
        items:
          $ref: '#/definitions/DEPSetupAssistantOption'
        type: array
      welcomeScreen:
        $ref: '#/definitions/DEPWelcomeScreen'
    title: DEP
    type: object
    x-deprecated: true
  DEPSetupAssistantOption:
    properties:
      option:
        $ref: '#/definitions/SetupAssistantOption'
    title: DEP Setup Assistant Option
    type: object
  DEPWelcomeScreen:
    properties:
      button:
        description: Text to display on the button on the DEP Welcome Screen.
        maxLength: 64
        type: string
      paragraph:
        description: A message to display on the DEP Welcome Screen.
        maxLength: 1024
        type: string
      title:
        description: The title to display on the DEP Welcome Screen.
        maxLength: 255
        type: string
    title: DEPWelcomeScreen
    type: object
    x-examples:
      defaults:
        button: continue
        paragraph: 'In just a few steps, you will be working securely from your Mac.'
        title: Welcome
  Directory:
    description: ''
    properties:
      defaultDomain:
        description: 'The default domain object if exists, contains id and name of the domain.'
        properties:
          domain:
            type: string
          id:
            type: string
        type: object
      id:
        description: The ObjectID of the directory.
        type: string
      name:
        description: The name of the directory.
        type: string
      oAuthStatus:
        description: the expiry and error status of the bearer token
        type: object
      type:
        description: The type of directory.
        enum:
          - active_directory
          - g_suite
          - ldap_server
          - office_365
          - workday
        type: string
    required:
      - id
      - name
      - type
    title: Directory
    type: object
  DuoAccount:
    properties:
      id:
        description: object ID
        type: string
      name:
        description: Duo application name.
        type: string
    required:
      - id
    title: DuoAccount
    type: object
  DuoApplication:
    properties:
      apiHost:
        type: string
      id:
        type: string
      integrationKey:
        type: string
      name:
        type: string
    required:
      - id
      - name
      - apiHost
      - integrationKey
    title: DuoApplication
    type: object
  DuoApplicationReq:
    properties:
      apiHost:
        type: string
      integrationKey:
        type: string
      name:
        type: string
      secretKey:
        type: string
    required:
      - name
      - apiHost
      - integrationKey
      - secretKey
    title: DuoApplicationReq
    type: object
  DuoApplicationUpdateReq:
    properties:
      apiHost:
        type: string
      integrationKey:
        type: string
      name:
        type: string
      secretKey:
        type: string
    required:
      - name
      - apiHost
      - integrationKey
    title: DuoApplicationUpdateReq
    type: object
  Error:
    description: ''
    properties:
      code:
        description: HTTP status code
        format: int32
        type: integer
      message:
        description: Error message
        type: string
      status:
        description: HTTP status description
        type: string
    title: Error
    type: object
    x-examples: {}
  ErrorDetails:
    allOf:
      - $ref: '#/definitions/Error'
      - properties:
          details:
            description: 'Describes a list of objects with more detailed information of the given error. Each detail schema is according to one of the messages defined in Google''s API: https://github.com/googleapis/googleapis/blob/master/google/rpc/error_details.proto'
            items:
              additionalProperties: true
              description: Object according to Google's API.
              type: object
            type: array
        type: object
  FeatureTrialData:
    description: Feature usage data for a feature
    properties:
      endDate:
        type: string
      startDate:
        type: string
    title: FeatureTrials
    type: object
  GSuiteBuiltinTranslation:
    description: |
      Built-in translations for G Suite export:
      * `user_home_addresses` - Translate all JumpCloud user addresses of type `home` to G Suite Directory user addresses of type `home`
      * `user_work_addresses` - Translate all JumpCloud user addresses of type `work` to G Suite Directory user addresses of type `work`
      * `user_other_addresses` - Translate all JumpCloud user addresses of type `other` to G Suite Directory user addresses of type `other`
      * `user_home_phone_numbers` - Translate all JumpCloud user phoneNumbers of type `home` to G Suite Directory user phones of type `home`
      * `user_mobile_phone_numbers` - Translate all JumpCloud user phoneNumbers of type `mobile` to G Suite Directory user phones of type `mobile`
      * `user_other_phone_numbers` - Translate all JumpCloud user phoneNumbers of type `other` to G Suite Directory user phones of type `other`
      * `user_work_phone_numbers` - Translate all JumpCloud user phoneNumbers of type `work` to G Suite Directory user phones of type `work`
      * `user_work_fax_phone_numbers` - Translate all JumpCloud user phoneNumbers of type `work_fax` to G Suite Directory user phones of type `work_fax`
      * `user_work_mobile_phone_numbers` - Translate all JumpCloud user phoneNumbers of type `work_mobile` to G Suite Directory user phones of type `work_mobile`
      * `user_manager` - Translate JumpCloud user `manager` to G Suite Directory user `relations-manager`
      * `user_primary_organization_cost_center` - Translate JumpCloud user  `costCenter` to G Suite Directory user `costCenter` for `primary` organization
      * `user_primary_organization_department` - Translate JumpCloud user  `department` to G Suite Directory user `department` for `primary` organization
      * `user_primary_organization_description` - Translate JumpCloud user  `employeeType` to G Suite Directory user `description` for `primary` organization
      * `user_primary_organization_employee_id` - Translate JumpCloud user  `employeeIdentifier` to G Suite Directory user `externalIds` element of type `organization`
      * `user_primary_organization_title` - Translate JumpCloud user  `jobTitle` to G Suite Directory user `title` for `primary` organization
      * `user_alternate_email` - Translate JumpCloud user  `alternateEmail` to G Suite Directory user `emails`
      * `user_status` - Translate JumpCloud user `status` to G Suite Directory user `status`
      * `user_password` - Translate JumpCloud user `password` to G Suite Directory user `password`
    enum:
      - user_home_addresses
      - user_work_addresses
      - user_other_addresses
      - user_home_phone_numbers
      - user_mobile_phone_numbers
      - user_other_phone_numbers
      - user_work_phone_numbers
      - user_work_fax_phone_numbers
      - user_work_mobile_phone_numbers
      - user_manager
      - user_alternate_email
      - user_primary_organization_cost_center
      - user_primary_organization_department
      - user_primary_organization_description
      - user_primary_organization_employee_id
      - user_primary_organization_title
      - user_status
      - user_password
    title: G Suite BuiltIn Translation
    type: string
  GSuiteDirectionTranslation:
    default: export
    description: |
      Direction identify if an attribute is going to be exported or imported from GSuite
      * `Import`- The data will be imported from GSuite into the user modal
      * `Export`- The data will be exported from the user modal to GSuite
    enum:
      - export
      - import
    title: G Suite Direction translation
    type: string
  GSuiteTranslationRule:
    properties:
      builtIn:
        $ref: '#/definitions/GSuiteBuiltinTranslation'
      direction:
        $ref: '#/definitions/GSuiteDirectionTranslation'
      id:
        description: ObjectId uniquely identifying a Translation Rule.
        type: string
    title: G Suite Translation Rule
    type: object
  GSuiteTranslationRuleRequest:
    example:
      builtIn: user_home_addresses
      direction: export
    properties:
      builtIn:
        $ref: '#/definitions/GSuiteBuiltinTranslation'
      direction:
        $ref: '#/definitions/GSuiteDirectionTranslation'
    title: G Suite Translation Rule Request
    type: object
  GraphAttribute-LdapGroups:
    description: List of LDAP groups to provision when this JumpCloud group is bound to an LDAP instance.
    properties:
      ldapGroups:
        items:
          $ref: '#/definitions/LdapGroup'
        type: array
    title: GraphAttribute (LdapGroups)
    type: object
  GraphAttribute-PosixGroups:
    description: List of POSIX groups to provision when this JumpCloud group is bound to a supported resource.
    properties:
      posixGroups:
        items:
          properties:
            id:
              type: integer
            name:
              type: string
          required:
            - id
            - name
          type: object
        type: array
    title: GraphAttribute (PosixGroups)
    type: object
  GraphAttribute-Radius:
    description: RADIUS reply attributes are returned in the Access-Accept messages sent to endpoints that authenticate with JumpCloud RADIUS.
    properties:
      radius:
        properties:
          reply:
            items:
              properties:
                name:
                  type: string
                value:
                  type: string
              required:
                - name
                - value
              type: object
            type: array
        type:
          - object
          - 'null'
    title: GraphAttribute (Radius)
    type: object
  GraphAttribute-SambaEnabled:
    description: Enabling Samba support allows for LDAP users to authenticate to endpoints that require Samba attributes within the LDAP directory
    properties:
      sambaEnabled:
        type: boolean
    title: GraphAttribute (SambaEnabled)
    type: object
  GraphAttribute-Sudo:
    description: Setting user access controls in order to grant administrator permissions
    properties:
      sudo:
        properties:
          enabled:
            description: Enables sudo
            type: boolean
          withoutPassword:
            description: Enable sudo without password (requires 'enabled' to be true)
            type: boolean
        required:
          - enabled
          - withoutPassword
        type:
          - object
          - 'null'
    title: GraphAttribute (Sudo)
    type: object
  GraphAttributes:
    additionalProperties: true
    description: The graph attributes.
    title: GraphAttributes
    type: object
  GraphConnection:
    description: Represents an edge between two graph objects. From can be omitted if it is clear from context.
    properties:
      attributes:
        $ref: '#/definitions/GraphAttributes'
      from:
        $ref: '#/definitions/GraphObject'
      to:
        $ref: '#/definitions/GraphObject'
    required:
      - to
    title: GraphConnection
    type: object
  GraphObject:
    properties:
      attributes:
        $ref: '#/definitions/GraphAttributes'
      id:
        description: The ObjectID of the graph object.
        type: string
      type:
        description: The type of graph object.
        type: string
    required:
      - type
      - id
    title: GraphObject
    type: object
  GraphObjectWithPaths:
    properties:
      compiledAttributes:
        $ref: '#/definitions/GraphAttributes'
      id:
        description: Object ID of this graph object.
        type: string
      paths:
        description: A path through the graph between two graph objects.
        items:
          items:
            $ref: '#/definitions/GraphConnection'
          type: array
        type: array
      type:
        $ref: '#/definitions/GraphType'
    required:
      - type
      - id
      - paths
    title: GraphObjectWithPaths
    type: object
  GraphOperation:
    properties:
      id:
        description: The ObjectID of graph object being added or removed as an association.
        type: string
      op:
        description: How to modify the graph connection.
        enum:
          - add
          - remove
          - update
        type: string
    required:
      - id
      - op
    title: GraphOperation
    type: object
  GraphOperation-ActiveDirectory:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "active_directory" can be associated to.
            enum:
              - user
              - user_group
            type: string
        required:
          - type
    title: GraphOperation (ActiveDirectory)
    type: object
  GraphOperation-Application:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "application" can be associated to.
            enum:
              - user
              - user_group
            type: string
        required:
          - type
    title: GraphOperation (Application)
    type: object
  GraphOperation-Command:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "command" can be associated to.
            enum:
              - system
              - system_group
            type: string
        required:
          - type
    title: GraphOperation (Command)
    type: object
  GraphOperation-GSuite:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "g_suite" can be associated to.
            enum:
              - user
              - user_group
            type: string
        required:
          - type
    title: GraphOperation (GSuite)
    type: object
  GraphOperation-IDPRoutingPolicy:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which an "idp_routing_policy" can be associated to.
            enum:
              - user
              - user_group
            type: string
        required:
          - type
    title: GraphOperation (IDPRoutingPolicy)
    type: object
  GraphOperation-LdapServer:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "ldap_server" can be associated to.
            enum:
              - user
              - user_group
            type: string
        required:
          - type
    title: GraphOperation (LdapServer)
    type: object
  GraphOperation-Office365:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "office_365" can be associated to.
            enum:
              - user
              - user_group
            type: string
        required:
          - type
    title: GraphOperation (Office365)
    type: object
  GraphOperation-PasswordManagerItem:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which an "password_manager_item" can be associated to.
            enum:
              - user
              - user_group
            type: string
        required:
          - type
    title: GraphOperation (PasswordManagerItem)
    type: object
  GraphOperation-Policy:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "policy" can be associated to.
            enum:
              - system
              - system_group
            type: string
        required:
          - type
    title: GraphOperation (Policy)
    type: object
  GraphOperation-PolicyGroup:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "policy_group" can be associated to.
            enum:
              - system
              - system_group
            type: string
        required:
          - type
    title: GraphOperation (PolicyGroup)
    type: object
  GraphOperation-PolicyGroup-Member:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: The member type.
            enum:
              - policy
            type: string
        required:
          - type
    title: GraphOperation (PolicyGroup-Member)
    type: object
  GraphOperation-RadiusServer:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "radius_server" can be associated to.
            enum:
              - user
              - user_group
            type: string
        required:
          - type
    title: GraphOperation (RadiusServer)
    type: object
  GraphOperation-Rule:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "rule" can be associated to.
            enum:
              - system
              - system_group
            type: string
        required:
          - type
    title: GraphOperation (Rule)
    type: object
  GraphOperation-SoftwareApp:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "software_app" can be associated to.
            enum:
              - system
              - system_group
            type: string
        required:
          - type
    title: GraphOperation (SoftwareApp)
    type: object
  GraphOperation-System:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            allOf:
              - $ref: '#/definitions/GraphAttributes'
              - $ref: '#/definitions/GraphAttribute-Sudo'
          type:
            description: Targets which a "system" can be associated to.
            enum:
              - command
              - policy
              - policy_group
              - user
              - user_group
            type: string
        required:
          - type
    title: GraphOperation (System)
    type: object
  GraphOperation-SystemGroup:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "system_group" can be associated to.
            enum:
              - command
              - policy
              - policy_group
              - user
              - user_group
            type: string
        required:
          - type
    title: GraphOperation (SystemGroup)
    type: object
  GraphOperation-SystemGroup-Member:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: The member type.
            enum:
              - system
            type: string
        required:
          - type
    title: GraphOperation (SystemGroup-Member)
    type: object
  GraphOperation-User:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            allOf:
              - $ref: '#/definitions/GraphAttributes'
              - $ref: '#/definitions/GraphAttribute-Sudo'
          type:
            description: Targets which a "user" can be associated to.
            enum:
              - active_directory
              - application
              - g_suite
              - idp_routing_policy
              - ldap_server
              - office_365
              - password_manager_item
              - radius_server
              - system
              - system_group
            type: string
        required:
          - type
    title: GraphOperation (User)
    type: object
  GraphOperation-UserGroup:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: Targets which a "user_group" can be associated to.
            enum:
              - active_directory
              - application
              - g_suite
              - idp_routing_policy
              - ldap_server
              - office_365
              - password_manager_item
              - radius_server
              - system
              - system_group
            type: string
        required:
          - type
    title: GraphOperation (UserGroup)
    type: object
  GraphOperation-UserGroup-Member:
    allOf:
      - $ref: '#/definitions/GraphOperation'
      - properties:
          attributes:
            $ref: '#/definitions/GraphAttributes'
          type:
            description: The member type.
            enum:
              - user
            type: string
        required:
          - type
    title: GraphOperation (UserGroup-Member)
    type: object
  GraphType:
    description: A graph object type.
    enum:
      - active_directory
      - application
      - command
      - g_suite
      - idp_routing_policy
      - ldap_server
      - office_365
      - policy
      - policy_group
      - radius_server
      - password_manager_item
      - system
      - system_group
      - user
      - user_group
    title: GraphType
    type: string
  Group:
    properties:
      attributes:
        $ref: '#/definitions/GraphAttributes'
      description:
        description: Description of a Group
        type: string
      email:
        description: E-mail address associated with a Group
        type: string
      id:
        description: ObjectId uniquely identifying a Group.
        type: string
      name:
        description: Display name of a Group.
        type: string
      type:
        $ref: '#/definitions/GroupType'
    title: Group
    type: object
  GroupAttributes-UserGroup:
    allOf:
      - $ref: '#/definitions/GraphAttributes'
      - $ref: '#/definitions/GraphAttribute-Sudo'
      - $ref: '#/definitions/GraphAttribute-LdapGroups'
      - $ref: '#/definitions/GraphAttribute-PosixGroups'
      - $ref: '#/definitions/GraphAttribute-Radius'
      - $ref: '#/definitions/GraphAttribute-SambaEnabled'
    description: The graph attributes for a UserGroup.
    title: GroupAttributes (UserGroup)
    type:
      - object
      - 'null'
  GroupMembershipMethodType:
    description: |-
      The type of membership method for this group. Valid values include NOTSET, STATIC, DYNAMIC_REVIEW_REQUIRED, and DYNAMIC_AUTOMATED.

      Note DYNAMIC_AUTOMATED and DYNAMIC_REVIEW_REQUIRED group rules will supersede any group enrollment for [group-associated MDM-enrolled devices](https://jumpcloud.com/support/change-a-default-device-group-for-apple-devices).

      Use caution when creating dynamic device groups with MDM-enrolled devices to avoid creating conflicting rule sets.
    enum:
      - NOTSET
      - STATIC
      - DYNAMIC_REVIEW_REQUIRED
      - DYNAMIC_AUTOMATED
    title: GroupMembershipMethodType
    type: string
  GroupType:
    description: The group type.
    enum:
      - policy_group
      - system_group
      - user_group
    title: GroupType
    type: string
  IPList:
    properties:
      description:
        type: string
      id:
        type: string
      ips:
        items:
          type: string
        type: array
      name:
        type: string
    title: IPList
    type: object
  IPListRequest:
    properties:
      description:
        type: string
      ips:
        items:
          type: string
        type: array
      name:
        type: string
    title: IPListRequest
    type: object
  ImportOperation:
    description: The operation to be executed on import
    enum:
      - users.create
      - users.update
    title: ImportOperation
    type: string
  ImportUsersRequest:
    properties:
      allowUserReactivation:
        default: true
        description: A boolean value to allow the reactivation of suspended users
        type: boolean
      operations:
        default:
          - users.create
          - users.update
        description: Operations to be performed on the user list returned from the application
        items:
          $ref: '#/definitions/ImportOperation'
        type: array
      queryString:
        default: ''
        description: |-
          Query string to filter and sort the user list returned from the application.  The supported filtering and sorting varies by application.  If no value is sent, all users are returned.
          **Example:** "location=Chicago&department=IT"Query string used to retrieve users from service
        type: string
    title: ImportUsersRequest
    type: object
  InstallActionType:
    enum:
      - DOWNLOAD_ONLY
      - INSTALL_LATER
      - INSTALL_ASAP
      - INSTALL_FORCE_RESTART
    type: string
  Integration:
    description: An integration.
    properties:
      integrationId:
        description: Unique identifier for this integration
        type: string
      type:
        $ref: '#/definitions/IntegrationType'
    title: Integration
    type: object
  IntegrationSyncError:
    description: Integration sync error details
    properties:
      errorType:
        type: string
      message:
        type: string
      orgId:
        type: string
      timestamp:
        type: string
    required:
      - orgId
      - timestamp
      - errorType
      - message
    type: object
  IntegrationSyncErrorResp:
    description: Response for retrieving integrations sync errors
    properties:
      records:
        items:
          $ref: '#/definitions/IntegrationSyncError'
        type: array
      totalCount:
        type: integer
    required:
      - records
      - totalCount
    type: object
  IntegrationType:
    description: The type of integration.
    enum:
      - autotask
      - connectwise
      - syncro
    title: IntegrationType
    type: string
  IntegrationsResponse:
    description: Response for retrieving integrations.
    properties:
      records:
        items:
          $ref: '#/definitions/Integration'
        type: array
      totalCount:
        type: integer
    title: IntegrationsResponse
    type: object
  LdapGroup:
    description: An LDAP group object.
    properties:
      name:
        type: string
    title: Ldap Group
    type: object
  LdapServerAction:
    enum:
      - disable
      - remove
    title: LDAP Server Action
    type: string
  MemberQuery:
    allOf:
      - $ref: '#/definitions/Query'
      - properties:
          filters:
            items: {}
            type: array
        title: MemberQuery
        type: object
        x-internal: false
    description: Query using a sequence of field filters.
    x-examples:
      example-1:
        filters:
          - field: string
            operator: eq
            value: string
        queryType: MemberQuery
  MemberSuggestion:
    properties:
      object:
        $ref: '#/definitions/GraphObject'
      op:
        description: How to modify group membership.
        enum:
          - add
          - remove
        type: string
  MemberSuggestionsPostResult:
    properties:
      suggestions_found:
        items:
          type: string
        type: array
      suggestions_not_found:
        items:
          type: string
        type: array
  OSRestriction:
    description: Contains OS properties to restrict the application of policies to devices based on the device's OS
    example:
      with-apple-restrictions:
        appleRestrictions:
          requiresSupervision: false
          supportedEnrollmentTypes:
            - automated
            - device
            - user
        deprecatedVersion: '16.2'
        earliestVersion: '14.1'
        osName: iPadOS
    properties:
      appleRestrictions:
        description: 'The Apple specific restricitons for this policy, if there are any'
        properties:
          requiresSupervision:
            description: Boolean representing if the policy requires the Apple devices to be MDM supervised
            type: boolean
          supportedEnrollmentTypes:
            description: The supported Apple enrollment types for this policy
            items:
              enum:
                - automated
                - device
                - user
              type: string
            type: array
        type: object
      deprecatedVersion:
        description: The version of the OS in which the policy was deprecated
        type: string
      earliestVersion:
        description: The earliest version of the OS in which the policy can be applied
        type: string
      isMdmRequired:
        description: Boolean representing if the policy requires the device to be MDM enrolled
        type: boolean
      osName:
        description: The name of the OS in which this restriction applies
        type: string
      supportedEnrollmentTypes:
        description: This field is deprecated and will be ignored. Use appleRestrictions.supportedEnrollmentTypes instead
        items:
          enum:
            - automated
            - device
            - user
          type: string
        type: array
        x-deprecated: true
    type: object
  Office365BuiltinTranslation:
    description: |-
      Built-in translations for Office 365 (Microsoft Graph) export:
      * `user_alternate_email` - Translate `alternateEmail` field of JumpCloud user to `otherMails` field of Microsoft Graph `user`
      * `user_business_phones` - Translate `number` field of first JumpCloud user `phoneNumber` of type `work` to `businessPhones` field of Microsoft Graph `user`
      * `user_city` - Translate `locality` field of JumpCloud user address of type `work` to `city` field of Microsoft Graph user
      * `user_country` - Translate `country` field of JumpCloud user address of type `work` to `country` field of Microsoft Graph `user`
      * `user_department` - Translate `department` field of JumpCloud user to `department` field of Microsoft Graph `user`
      * `user_job_title` - Translate `jobTitle` field of JumpCloud user to `jobTitle` field of Microsoft Graph `user`
      * `user_manager` - Translate `manager` field of JumpCloud user to `manager` field of Microsoft Graph `user`
      * `user_mobile_phone` - Translate `number` field of first JumpCloud user `phoneNumber` of type `mobile` to `mobilePhone` field of Microsoft Graph `user`
      * `user_office_location` - Translate `location` field of JumpCloud user to `officeLocation` field of Microsoft Graph `user`
      * `user_postal_code` - Translate `postalCode` field of JumpCloud user address of type `work` to `postalCode` field of Microsoft Graph `user`
      * `user_principal_name_from_alternate_email` - Translate user `alternateEmail` field of Jumpcloud user to `userPrincipalName` field of Microsoft Graph `user`
      * `user_state` - Translate `region` field of JumpCloud user address of type `work` to `state` field of Microsoft Graph `user`
      * `user_street_address` - Translate `streetAddress` field of JumpCloud user address of type `work` to `streetAddress` field of Microsoft Graph user
    enum:
      - user_alternate_email
      - user_business_phones
      - user_city
      - user_country
      - user_department
      - user_job_title
      - user_manager
      - user_mobile_phone
      - user_office_location
      - user_postal_code
      - user_principal_name_from_alternate_email
      - user_state
      - user_street_address
    title: Office 365 BuiltIn Translation
    type: string
  Office365DirectionTranslation:
    default: export
    description: |
      Direction identify if a attribute is going to be exported or imported from Office365
      * `Export`- The data will exported from the user modal to Office365
    enum:
      - export
    title: Office 365 Direction translation
    type: string
  Office365TranslationRule:
    properties:
      builtIn:
        $ref: '#/definitions/Office365BuiltinTranslation'
      direction:
        $ref: '#/definitions/Office365DirectionTranslation'
      id:
        description: ObjectId uniquely identifying a Translation Rule.
        type: string
    title: Office 365 Translation Rule
    type: object
  Office365TranslationRuleRequest:
    example:
      builtIn: user_department
      direction: export
    properties:
      builtIn:
        $ref: '#/definitions/Office365BuiltinTranslation'
      direction:
        $ref: '#/definitions/Office365DirectionTranslation'
    title: Office 365 Translation Rule Request
    type: object
  Organization:
    example:
      id: 624d9eae6849cf3b3f93dc56
      name: Acme Inc
    properties:
      id:
        type: string
      maxSystemUsers:
        description: The maximum number of users allowed in this organization. Requires organizations.billing scope to modify.
        type: integer
      name:
        type: string
    title: Organization
    type: object
  PhoneNumber:
    properties:
      id:
        type: string
      number:
        maxLength: 1024
        type: string
      type:
        maxLength: 1024
        type: string
    type: object
  Policy:
    description: An instance of a policy template.
    properties:
      id:
        description: ObjectId uniquely identifying a Policy.
        type: string
      name:
        description: The description for this specific Policy.
        type: string
      template:
        $ref: '#/definitions/PolicyTemplate'
    title: Policy
    type: object
  PolicyCreateRequest:
    description: A request to create an instance of a policy template.
    properties:
      name:
        description: The description for this specific Policy.
        type: string
      notes:
        description: The notes for this specific Policy.
        type: string
      template:
        properties:
          id:
            description: ObjectId uniquely identifying a Policy instance.
            type: string
        required:
          - id
        type: object
      values:
        items:
          $ref: '#/definitions/PolicyValue'
        type: array
    required:
      - name
      - template
    title: PolicyCreateRequest
    type: object
  PolicyGroup:
    properties:
      attributes:
        $ref: '#/definitions/GraphAttributes'
      description:
        description: Description of a Policy Group
        type: string
      email:
        description: E-mail address associated with a Policy Group
        type: string
      id:
        description: ObjectId uniquely identifying a Policy Group.
        type: string
      name:
        description: Display name of a Policy Group.
        type: string
      type:
        description: The type of the group; always 'policy' for a Policy Group.
        enum:
          - policy_group
        type: string
    title: PolicyGroup
    type: object
  PolicyGroupData:
    properties:
      name:
        description: Display name of a Policy Group.
        type: string
    required:
      - name
    title: PolicyGroupData
    type: object
  PolicyGroupTemplate:
    properties:
      description:
        type: string
      id:
        type: string
      members:
        items:
          $ref: '#/definitions/PolicyGroupTemplateMember'
        type: array
      name:
        type: string
    title: PolicyGroupTemplate
    type: object
  PolicyGroupTemplateMember:
    properties:
      id:
        type: string
      name:
        type: string
      policyTemplateId:
        type: string
    title: PolicyGroupTemplateMember
    type: object
  PolicyGroupTemplateMembers:
    properties:
      results:
        items:
          $ref: '#/definitions/PolicyGroupTemplateMember'
        type: array
      totalCount:
        type: integer
    title: PolicyGroupTemplateMembers
    type: object
  PolicyGroupTemplates:
    properties:
      results:
        items:
          $ref: '#/definitions/PolicyGroupTemplate'
        type: array
      totalCount:
        type: integer
    title: PolicyGroupTemplates
    type: object
  PolicyResult:
    properties:
      detail:
        description: Details pertaining to the policy result.
        type: string
      endedAt:
        description: The end of the policy application.
        format: date-time
        type: string
      exitStatus:
        description: The 32-bit unsigned exit status from the applying the policy.
        format: uint32
        type: integer
      id:
        description: ObjectId uniquely identifying a Policy Result.
        type: string
      policyID:
        description: ObjectId uniquely identifying the parent Policy.
        type: string
      startedAt:
        description: The start of the policy application.
        format: date-time
        type: string
      state:
        description: 'Enumeration describing the state of the policy. Success, failed, or pending.'
        type: string
      stdErr:
        description: The STDERR output from applying the policy.
        type: string
      stdOut:
        description: The STDOUT output from applying the policy.
        type: string
      success:
        description: True if the policy was successfully applied; false otherwise.
        type: boolean
      systemID:
        description: ObjectId uniquely identifying the parent System.
        type: string
    title: PolicyResult
    type: object
  PolicyTemplate:
    description: The shallow information about a Policy Template.
    properties:
      activation:
        description: Requirements before the policy can be activated.
        type: string
      alert:
        description: Text to describe any risk associated with this policy.
        type: string
      behavior:
        description: Specifics about the behavior of the policy.
        type: string
      deliveryTypes:
        description: The supported delivery mechanisms for this policy template.
        items:
          default: agent
          enum:
            - agent
            - mdm
          type: string
        type: array
      description:
        description: The default description for the Policy.
        type: string
      displayName:
        description: The default display name for the Policy.
        type: string
      id:
        description: ObjectId uniquely identifying a Policy Template.
        type: string
      name:
        description: The unique name for the Policy Template.
        type: string
      osMetaFamily:
        enum:
          - linux
          - darwin
          - windows
          - ios
          - universal
          - android
        type: string
      osRestrictions:
        items:
          $ref: '#/definitions/OSRestriction'
        type: array
      reference:
        description: URL to visit for further information.
        type: string
      state:
        default: ''
        description: String describing the release status of the policy template.
        type: string
    title: PolicyTemplate
    type: object
    x-examples:
      example-1:
        activation: string
        alert: string
        behavior: string
        deliveryTypes:
          - agent
        description: string
        displayName: string
        name: string
        osMetaFamily: linux
        osRestrictions:
          - deprecatedVersion: string
            earliestVersion: string
            osName: string
            supportedEnrollmentTypes:
              - automated
        reference: string
        state: ''
  PolicyTemplateConfigField:
    properties:
      defaultValue:
        description: The default value for this field.
        type: string
      displayOptions:
        description: The options that correspond to the display_type.
        type: object
      displayType:
        description: The default rendering for this field.
        enum:
          - checkbox
          - date
          - email
          - file
          - number
          - select
          - text
          - textarea
          - singlelistbox
          - doublelistbox
          - table
          - segmentedbutton
          - radio
          - copywell
          - timeinput
          - datepickerrange
          - multilist
          - paginationlist
          - searchandselect
          - datetimepicker
          - numberinline
        type: string
      id:
        description: ObjectId uniquely identifying a Policy Template Configuration Field
        type: string
      label:
        description: The default label for this field.
        type: string
      name:
        description: A unique name identifying this config field.
        type: string
      position:
        description: The default position to render this field.
        type: number
      readOnly:
        description: If an admin is allowed to modify this field.
        type: boolean
      required:
        description: If this field is required for this field.
        type: boolean
      sensitive:
        description: Defines if the policy template config field is sensitive or not.
        type: boolean
      tooltip:
        properties:
          template:
            type: string
          variables:
            properties:
              icon:
                type: string
              message:
                type: string
            type: object
        type: object
      validators:
        description: Descriptors to perform extended assertions on the supplied config field value.
        type: object
    required:
      - id
      - name
    title: PolicyTemplateConfigField
    type: object
  PolicyTemplateWithDetails:
    description: The shallow information about a Policy Template.
    properties:
      activation:
        description: Requirements before the policy can be activated.
        type: string
      behavior:
        description: Specifics about the behavior of the policy.
        type: string
      configFields:
        description: An unordered list of all the fields that can be configured for this Policy Template.
        items:
          $ref: '#/definitions/PolicyTemplateConfigField'
        type: array
      description:
        description: The default description for the Policy.
        type: string
      displayName:
        description: The default display name for the Policy.
        type: string
      id:
        description: ObjectId uniquely identifying a Policy Template.
        type: string
      name:
        description: The unique name for the Policy Template.
        type: string
      osMetaFamily:
        enum:
          - linux
          - darwin
          - windows
          - ios
          - universal
          - android
        type: string
      osRestrictions:
        items:
          $ref: '#/definitions/OSRestriction'
        type: array
    title: PolicyTemplateWithDetails
    type: object
  PolicyUpdateRequest:
    description: A request to update an instance of a policy template.
    properties:
      name:
        description: The description for this specific Policy.
        type: string
      notes:
        description: The notes for this specific Policy.
        type: string
      values:
        items:
          $ref: '#/definitions/PolicyValue'
        type: array
    required:
      - name
    title: PolicyRequest
    type: object
  PolicyValue:
    properties:
      configFieldID:
        description: The ObjectId of the corresponding Policy Template configuration field.
        type: string
      sensitive:
        description: Defines if the value is sensitive or not.
        type: boolean
      value:
        description: The value for the configuration field for this Policy instance.
        items: {}
        type: string
    title: PolicyValue
    type: object
  PolicyWithDetails:
    description: An instance of a policy template.
    properties:
      configFields:
        items:
          $ref: '#/definitions/PolicyTemplateConfigField'
        type: array
      id:
        description: ObjectId uniquely identifying a Policy.
        type: string
      name:
        description: The description for this specific Policy.
        type: string
      notes:
        description: The notes for this specific Policy.
        type: string
      template:
        $ref: '#/definitions/PolicyTemplate'
      values:
        items:
          $ref: '#/definitions/PolicyValue'
        type: array
    title: PolicyWithDetails
    type: object
  Provider:
    example:
      disallowOrgCreation: true
      id: 5c3536e9e0a6840001872799
    properties:
      disallowOrgCreation:
        type: boolean
      id:
        type: string
      settings:
        properties:
          requireAdminMFA:
            type: boolean
        title: ProviderSettings
        type: object
      type:
        enum:
          - MSP
          - OU
        type: string
  ProviderAdminReq:
    example:
      bindNoOrgs: false
      email: joe@example.com
      enableMultiFactor: true
      firstname: Joe
      lastname: Blough
      role: 5c3536e9e0a6840001872799
      roleName: Administrator
    properties:
      apiKeyAllowed:
        type: boolean
      apiKeyHash:
        additionalProperties: false
        properties:
          createdAt:
            format: date-time
            type: string
          expireAt:
            format: date-time
            type: string
          prefix:
            type: string
        type: object
      bindNoOrgs:
        default: false
        type: boolean
      email:
        type: string
      enableMultiFactor:
        type: boolean
      firstname:
        type: string
      lastname:
        type: string
      role:
        type: string
      roleName:
        type: string
    required:
      - email
    title: ProviderAdminReq
    type: object
  ProviderInvoice:
    description: Details of a an invoice
    example:
      amountBilled: '200.0'
      amountPaid: '10.9'
      amountRemaining: '189.1'
      currency: USD
      dueDate: '2021-08-07'
      id: '234324'
      status: Partially Paid
    properties:
      amountBilled:
        type: string
      amountPaid:
        type: string
      amountRemaining:
        type: string
      currency:
        type: string
      dueDate:
        type: string
      id:
        type: string
      status:
        type: string
    title: ProviderInvoice
    type: object
  ProviderInvoiceResponse:
    description: Response for retrieve provider invoices
    properties:
      records:
        items:
          $ref: '#/definitions/ProviderInvoice'
        type: array
      totalCount:
        type: integer
    title: ProviderInvoiceResponse
    type: object
  ProviderSettingsPut:
    additionalProperties: false
    properties:
      requireAdminMFA:
        type: boolean
    title: ProviderSettings
    type: object
  PushEndpointResponse:
    description: A push endpoint response from the auth service.
    properties:
      device:
        properties:
          appVersion:
            type: string
          make:
            type: string
          model:
            type: string
          os:
            type: string
          osVersion:
            type: string
          uvEnabled:
            type: boolean
        type: object
      enrollmentDate:
        format: date-time
        type: string
      id:
        type: string
      lastUsedDate:
        format: date-time
        type: string
      name:
        type: string
      state:
        type: string
    title: PushEndpointResponse
    type: object
  Query:
    description: Basic query.
    discriminator: queryType
    properties:
      queryType:
        enum:
          - Filter
          - FilterQuery
          - Search
        type: string
    required:
      - queryType
    title: Query
    type: object
    x-examples:
      example-1:
        queryType: FilterQuery
  QueuedCommandList:
    description: List of queued commands
    properties:
      results:
        items:
          properties:
            command:
              description: 'The ID of the command, from savedAgentCommands.'
              type: string
            id:
              description: The workflowInstanceId.
              type: string
            pendingCount:
              description: The number of devices that still haven't received the directive.
              type: integer
            system:
              description: The ID of the device the command is bound to.
              type: string
          type: object
        type: array
      totalCount:
        description: The total number of queued command results.
        type: integer
    title: QueuedCommandList
    type: object
  Role:
    properties:
      createdBy:
        description: ID of the user who created this role
        type: string
      description:
        description: Description of the role and its purpose
        type: string
      id:
        description: ID of the role
        type: string
      isCustom:
        description: Indicates if this is a custom role (true) or a system role (false)
        type: boolean
      lastUpdatedBy:
        description: ID of the user who last updated this role
        type: string
      name:
        description: Name of the role
        type: string
      organizationIds:
        description: List of organization IDs this role is associated with.
        items:
          type: string
        type: array
      providerId:
        description: ID of the provider associated with this role.
        type: string
      scopes:
        description: List of permission scopes associated with this role.
        items:
          type: string
        type: array
    required:
      - name
      - scopes
    title: Role
    type: object
  RoleCreate:
    properties:
      description:
        description: Description of the role and its purpose
        type: string
      name:
        description: Name of the role
        type: string
      organizationIds:
        description: List of organization IDs to associate with this role
        items:
          type: string
        type: array
      providerId:
        description: ID of the provider to associate with this role
        type: string
      scopes:
        description: List of permission scopes to assign to this role
        items:
          type: string
        type: array
    required:
      - name
      - scopes
    title: RoleCreate
    type: object
  RoleList:
    properties:
      results:
        description: List of roles
        items:
          $ref: '#/definitions/Role'
        type: array
      totalCount:
        description: Total number of roles available.
        format: uint64
        type: integer
    title: RoleList
    type: object
  RoleUpdate:
    properties:
      description:
        description: Description of the role and its purpose
        type: string
      name:
        description: Updated name of the role
        type: string
      organizationIds:
        description: List of organization IDs to associate with this role
        items:
          type: string
        type: array
      providerId:
        description: ID of the provider to associate with this role
        type: string
      scopes:
        description: Updated list of permission scopes for this role
        items:
          type: string
        type: array
    required:
      - name
      - scopes
    title: RoleUpdate
    type: object
  ScheduleOSUpdate:
    properties:
      install_action:
        $ref: '#/definitions/InstallActionType'
      max_user_deferrals:
        format: int32
        type: integer
      product_key:
        type: string
    required:
      - install_action
      - product_key
    type: object
  Scope:
    example:
      description: Manage system resources and configurations
      displayToUsers: true
      key: systems
      label: Systems
      permissions:
        edit:
          - systems
        readonly:
          - systems.readonly
    properties:
      description:
        description: Description of what this scope controls
        type: string
      displayToUsers:
        description: Whether this scope should be displayed to users
        type: boolean
      key:
        description: Unique key for the scope
        type: string
      label:
        description: Human-readable label for the scope
        type: string
      permissionType:
        description: The type of permission structure for UI rendering.
        enum:
          - granular
          - access_level
          - actions
        type: string
      permissions:
        additionalProperties:
          items:
            type: string
          type: array
        description: Available permission levels for this scope
        type: object
      permissionsV2:
        additionalProperties: true
        description: Available permission levels for this scope
        items:
          type: object
        type: array
      subgroupLabel:
        description: A common label for a group of related scopes.
        type: string
    type: object
  ScopeGroup:
    example:
      createdAt: '2023-07-23T12:00:00.000Z'
      displayToUsers: true
      groupDescription: Manage users
      groupKey: user-management
      groupName: User Management
      id: 507f1f77bcf86cd799439011
      scopes:
        - description: Manage user resources
          displayToUsers: true
          key: users
          label: User Management
          permissions:
            edit:
              - users
            readonly:
              - users.readonly
        - description: Unlock user accounts.
          displayToUsers: true
          key: users.unlock
          label: Unlock user accounts
          permissionType: actions
          permissionsV2:
            - key: allow
              values:
                - users.unlock
          subgroupLabel: User Support
      updatedAt: '2023-07-23T12:00:00.000Z'
    properties:
      createdAt:
        description: When the scope group was created
        format: date-time
        type: string
      displayToUsers:
        description: Whether this scope group should be displayed to users
        type: boolean
      fullAccessScopes:
        description: List of scopes that grant full access to the group.
        items:
          type: string
        type: array
      groupDescription:
        description: Description of the scope group's purpose
        type: string
      groupKey:
        description: 'A unique, URL-friendly key for the scope group.'
        type: string
      groupName:
        description: Name of the scope group
        type: string
      id:
        description: Unique identifier for the scope group
        type: string
      scopes:
        description: List of scopes within this group
        items:
          $ref: '#/definitions/Scope'
        type: array
      updatedAt:
        description: When the scope group was last updated
        format: date-time
        type: string
    type: object
  SetupAssistantOption:
    description: |
      Options to skip screens during MacOS and iOS setup:
      * `accessibility` - Skips the Accessibility pane, only if the Mac is connected to Ethernet and the cloud config is downloaded.
      * `actionButton` - Skips the Action Button configuration pane.
      * `appearance` - Skips the Choose Your Look screen.
      * `appleID` - Skips Apple ID setup.
      * `biometric` - Skips biometric setup.
      *  `cameraButton` - Skips the Camera Button configuration pane.
      * `diagnostics` - Skips the App Analytics pane.
      * `displayTone` - Skips display tone setup.
      * `enableLockdownMode` - Skips the Lockdown Mode pane.
      * `fileVault` - Skips FileVault setup assistant screen.
      * `icloudDiagnostics` - Skips iCloud analytics screen.
      * `icloudStorage` - Skips iCloud documents and desktop screen.
      * `intelligence` - Skips the Intelligence pane.
      * `location` - Skips location services setup.
      * `payment` - Skips Apple Pay setup.
      * `privacy` - Skips the Privacy setup.
      * `restore` - Skips restoring from backup.
      * `screenTime` - Skips screen time setup.
      * `siri` - Skips Siri setup.
      * `termsOfAddress` - Skips the Terms of Address pane.
      * `tos` - Skips terms and conditions.
      * `appStore` - Skips the App Store pane.
      * `deviceToDeviceMigration` - Skips Device to Device Migration pane.
      * `displayZoom` - Skips zoom setup.
      * `homeButton` - Skips the Meet the New Home Button screen on iPhone 7, iPhone 7 Plus, iPhone 8, iPhone 8 Plus and iPhone SE.
      * `imessageAndFacetime` - Skips the iMessage and FaceTime screen in iOS.
      * `messagingActivationUsingPhoneNumber` - Skips the iMessage pane.
      * `moveFromAndroid` - If the Restore pane is not skipped, removes the Move from Android option in the Restore pane on iOS.O
      * `passcode` - Hides and disables the passcode pane.
      * `restoreComplete` - Skips the Restore Completed pane.
      * `safety` - Skips the Safety pane.
      * `setupCellular` - Skips the add cellular plan pane.
      * `softwareUpdate` - Skips the mandatory software update screen in iOS.
      * `unlockWithWatch` - Skips Unlock Your Mac with your Apple Watch pane.
      * `updateComplete` - Skips the Software Update Complete pane.
      * `wallpaper` - Skips the Wallpaper setup.
      * `watchMigration` - Skips the screen for watch migration.
      * `welcome` - Skips the Get Started pane.
      * `additionalPrivacySettings` - Skips the Additional Privacy Settings pane.
      * `multitasking` - Skips the Multitasking pane.
      * `osShowcase` - Skips the OS Showcase pane.
      * `webContentFiltering` - Skips the Web Content Filtering pane.
      * `safetyAndHandling` - Skips the Safety and Handling pane.
    enum:
      - accessibility
      - actionButton
      - appearance
      - appleID
      - biometric
      - cameraButton
      - diagnostics
      - displayTone
      - enableLockdownMode
      - fileVault
      - icloudDiagnostics
      - icloudStorage
      - intelligence
      - location
      - payment
      - privacy
      - restore
      - safety
      - screenTime
      - siri
      - tos
      - termsOfAddress
      - appStore
      - displayZoom
      - deviceToDeviceMigration
      - homeButton
      - imessageAndFacetime
      - messagingActivationUsingPhoneNumber
      - moveFromAndroid
      - passcode
      - restoreComplete
      - setupCellular
      - softwareUpdate
      - unlockWithWatch
      - updateComplete
      - wallpaper
      - watchMigration
      - welcome
      - additionalPrivacySettings
      - multitasking
      - osShowcase
      - webContentFiltering
      - safetyAndHandling
    title: Setup Assistant Option
    type: string
  SoftwareAppsRetryInstallationRequest:
    properties:
      system_ids:
        description: An array of system IDs to retry the software application installation.
        items:
          type: string
        type: array
    title: SoftwareAppsRetryInstallationRequest
    type: object
  SuggestionCounts:
    properties:
      add:
        type: integer
      remove:
        type: integer
      total:
        type: integer
    readOnly: true
    type: object
  SyncroBillingMappingConfigurationOption:
    description: The representation of a Syncro billing mapping dependency with its name (e.g. schedule) and actual values (e.g. individual schedules)
    properties:
      name:
        description: The option name
        type: string
      values:
        description: The actual option's values
        items:
          $ref: '#/definitions/SyncroBillingMappingConfigurationOptionValue'
        type: array
    type: object
  SyncroBillingMappingConfigurationOptionValue:
    description: The shape of a Syncro billing mapping dependency with its human readable description (label) and value stored in the backend (value) and children (lines)
    properties:
      label:
        type: string
      lines:
        items:
          $ref: '#/definitions/SyncroBillingMappingConfigurationOptionValueLine'
        type: array
      value:
        type: integer
    type: object
  SyncroBillingMappingConfigurationOptionValueLine:
    description: The shape of a Syncro billing mapping schedule's line
    properties:
      label:
        type: string
      value:
        type: integer
    type: object
  SyncroBillingMappingConfigurationOptionsResp:
    description: Response for retrieving Syncro billing mapping configuration options
    properties:
      options:
        items:
          $ref: '#/definitions/SyncroBillingMappingConfigurationOption'
        type: array
    required:
      - options
    type: object
  SyncroCompany:
    description: Syncro company details
    properties:
      id:
        description: The company identifier.
        type: string
      name:
        description: The company name.
        type: string
    required:
      - id
      - name
    type: object
  SyncroCompanyResp:
    description: Response for retrieving Syncro companies
    properties:
      records:
        items:
          $ref: '#/definitions/SyncroCompany'
        type: array
      totalCount:
        type: integer
    required:
      - totalCount
      - records
    type: object
  SyncroIntegration:
    description: Syncro integration configuration details
    properties:
      id:
        description: The identifier for this Syncro integration.
        type: string
      isMspAuthConfigured:
        description: Has the msp-api been configured with auth data yet
        type: boolean
      subdomain:
        description: The subdomain for the URL to connect to Syncro.
        type: string
    required:
      - id
      - subdomain
    title: Get Syncro integration GET object
    type: object
  SyncroIntegrationPatchReq:
    description: Request for updating a Syncro integration
    properties:
      apiToken:
        description: The Syncro API token for authentication
        type: string
      subdomain:
        description: The subdomain for the URL to connect to Syncro.
        type: string
    title: Create Syncro Integration PATCH object
    type: object
  SyncroIntegrationReq:
    description: Request for creating a Syncro integration
    properties:
      apiToken:
        description: The Syncro API token for authentication
        type: string
      subdomain:
        description: The subdomain for the URL to connect to Syncro.
        type: string
    required:
      - subdomain
      - apiToken
    title: Create Syncro Integration POST object
    type: object
  SyncroMappingRequest:
    description: Request object for creating Syncro mappings
    minItems: 1
    properties:
      data:
        items:
          properties:
            billingConfigurations:
              description: Syncro billing mapping details
              properties:
                fields:
                  properties:
                    line_item_id:
                      properties:
                        kind:
                          type: string
                        numberValue:
                          type: number
                      type: object
                    line_item_name:
                      properties:
                        kind:
                          type: string
                        stringValue:
                          type: string
                      type: object
                    schedule_id:
                      properties:
                        kind:
                          type: string
                        numberValue:
                          type: number
                      type: object
                    schedule_name:
                      properties:
                        kind:
                          type: string
                        stringValue:
                          type: string
                      type: object
                  type: object
              type: object
            company:
              properties:
                id:
                  type: string
                name:
                  type: string
              required:
                - id
                - name
              type: object
            delete:
              type: boolean
            organization:
              properties:
                id:
                  minLength: 1
                  type: string
                name:
                  type: string
              required:
                - id
                - name
              type: object
          required:
            - organization
            - company
          type: object
        type: array
    type: object
    x-examples:
      Create\Edit Billing Mapping:
        - billingConfigurations:
            fields:
              line_item_id:
                kind: numberValue
                numberValue: 12
              line_item_name:
                kind: stringValue
                stringValue: SyncroLineItemName
              schedule_id:
                kind: numberValue
                numberValue: 99
              schedule_name:
                kind: stringValue
                stringValue: SyncroScheduleName
          company:
            id: syncro-company-id
            name: SyncroCompanyName
          organization:
            id: newOrganizationId
            name: OrganizationName
      Create\Edit Existing Company Mapping:
        - company:
            id: syncro-company-id
            name: SyncroCompanyName
          organization:
            id: newOrganizationId
            name: OrganizationName
      Delete Company Mapping:
        data:
          - delete: true
            organization:
              id: orgId-1
              name: OrgId1Name
          - delete: true
            organization:
              id: orgId-2
              name: OrgId2Name
          - delete: true
            organization:
              id: orgId-3
              name: OrgId3Name
  SyncroMappingResponse:
    description: Syncro mapping GET response
    properties:
      company:
        properties:
          id:
            type: string
          name:
            type: string
        type: object
      organization:
        properties:
          id:
            type: string
          name:
            type: string
        type: object
    title: SyncroMappingResponse
    type: object
  SyncroSettings:
    description: Syncro integration settings
    properties:
      automaticTicketing:
        description: Determine whether Syncro uses automatic ticketing
        type: boolean
    title: Get Syncro integration settings GET object
    type: object
  SyncroSettingsPatchReq:
    description: Request for updating a Syncro integration's settings
    properties:
      automaticTicketing:
        description: Determine whether Syncro uses automatic ticketing
        type: boolean
    title: Update Syncro Integration's Settings PATCH object
    type: object
    x-examples:
      example-1:
        automaticTicketing: true
  SyncroTicketingAlertConfiguration:
    description: A SyncroTicketingAlertConfiguration object
    properties:
      category:
        type: string
      description:
        type: string
      displayName:
        type: string
      dueDays:
        type: integer
      id:
        type: integer
      priority:
        type: string
      problemType:
        type: string
      shouldCreateTickets:
        type: boolean
      status:
        type: string
      userId:
        type: integer
      username:
        type: string
    type: object
  SyncroTicketingAlertConfigurationList:
    properties:
      records:
        items:
          allOf:
            - properties:
                alertId:
                  type: string
              type: object
            - $ref: '#/definitions/SyncroTicketingAlertConfiguration'
        type: array
    required:
      - records
    type: object
  SyncroTicketingAlertConfigurationOption:
    properties:
      name:
        type: string
      values:
        items:
          properties:
            label:
              type: string
            value:
              type: integer
          type: object
        type: array
    type: object
  SyncroTicketingAlertConfigurationOptions:
    properties:
      records:
        items:
          $ref: '#/definitions/SyncroTicketingAlertConfigurationOption'
        type: array
    required:
      - records
    type: object
  SyncroTicketingAlertConfigurationRequest:
    description: A SyncroTicketingAlertConfigurationRequest to update Syncro ticketing configuration.
    properties:
      dueDays:
        type: integer
      priority:
        type: string
      problemType:
        type: string
      shouldCreateTickets:
        type: boolean
      status:
        type: string
      userId:
        type: number
      username:
        type: string
    required:
      - shouldCreateTickets
      - problemType
    type: object
  SystemGroup:
    properties:
      attributes:
        $ref: '#/definitions/GraphAttributes'
      description:
        description: Description of a System Group
        type: string
      email:
        description: E-mail address associated with a System Group
        type: string
      id:
        description: ObjectId uniquely identifying a System Group.
        type: string
      memberQuery:
        $ref: '#/definitions/MemberQuery'
      memberQueryExemptions:
        description: Array of GraphObjects exempted from the query
        items:
          $ref: '#/definitions/GraphObject'
        type: array
      memberSuggestionsNotify:
        description: True if notification emails are to be sent for membership suggestions.
        type: boolean
      membershipMethod:
        $ref: '#/definitions/GroupMembershipMethodType'
      name:
        description: Display name of a System Group.
        type: string
      type:
        description: The type of the group; always 'system' for a System Group.
        enum:
          - system_group
        type: string
    title: SystemGroup
    type: object
  SystemGroupPost:
    properties:
      attributes:
        $ref: '#/definitions/GraphAttributes'
      description:
        description: Description of a System Group
        type: string
      email:
        description: Email address of a System Group
        type: string
      memberQuery:
        $ref: '#/definitions/MemberQuery'
      memberQueryExemptions:
        description: Array of GraphObjects exempted from the query
        items:
          $ref: '#/definitions/GraphObject'
        type: array
      memberSuggestionsNotify:
        description: True if notification emails are to be sent for membership suggestions.
        type: boolean
      membershipMethod:
        $ref: '#/definitions/GroupMembershipMethodType'
      name:
        description: Display name of a System Group.
        type: string
    required:
      - name
    title: SystemGroupPost
    type: object
  SystemGroupPut:
    properties:
      attributes:
        $ref: '#/definitions/GraphAttributes'
      description:
        description: Description of a System Group
        type: string
      email:
        description: Email address of a System Group
        type: string
      memberQuery:
        $ref: '#/definitions/MemberQuery'
      memberQueryExemptions:
        description: Array of GraphObjects exempted from the query
        items:
          $ref: '#/definitions/GraphObject'
        type: array
      memberSuggestionsNotify:
        description: True if notification emails are to be sent for membership suggestions.
        type: boolean
      membershipMethod:
        $ref: '#/definitions/GroupMembershipMethodType'
      name:
        description: Display name of a System Group.
        type: string
    required:
      - name
    title: SystemGroupPut
    type: object
  TicketingIntegrationAlert:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  TicketingIntegrationAlertsResp:
    properties:
      records:
        items:
          $ref: '#/definitions/TicketingIntegrationAlert'
        type: array
    required:
      - records
    type: object
  User:
    properties:
      addresses:
        items:
          $ref: '#/definitions/Address'
        type: array
      alternateEmail:
        type: string
      company:
        maxLength: 1024
        type: string
      costCenter:
        maxLength: 1024
        type: string
      department:
        maxLength: 1024
        type: string
      email:
        maxLength: 1024
        type: string
      employeeIdentifier:
        description: Must be unique per user.
        maxLength: 256
        type: string
      employeeType:
        maxLength: 1024
        type: string
      firstname:
        maxLength: 1024
        type: string
      jobTitle:
        maxLength: 1024
        type: string
      lastname:
        maxLength: 1024
        type: string
      location:
        maxLength: 1024
        type: string
      phoneNumbers:
        items:
          $ref: '#/definitions/PhoneNumber'
        type: array
    title: User
    type: object
  UserGroup:
    properties:
      attributes:
        $ref: '#/definitions/GroupAttributes-UserGroup'
      description:
        description: Description of a User Group
        type: string
      email:
        description: Email address of a User Group
        type: string
      id:
        description: ObjectId uniquely identifying a User Group.
        type: string
      memberQuery:
        $ref: '#/definitions/MemberQuery'
      memberQueryExemptions:
        description: Array of GraphObjects exempted from the query
        items:
          $ref: '#/definitions/GraphObject'
        type: array
      memberSuggestionsNotify:
        description: True if notification emails are to be sent for membership suggestions.
        type: boolean
      membershipMethod:
        $ref: '#/definitions/GroupMembershipMethodType'
      name:
        description: Display name of a User Group.
        type: string
      suggestionCounts:
        $ref: '#/definitions/SuggestionCounts'
      type:
        description: The type of the group.
        enum:
          - user_group
        type: string
    title: UserGroup
    type: object
  UserGroupPost:
    properties:
      attributes:
        $ref: '#/definitions/GroupAttributes-UserGroup'
      description:
        description: Description of a User Group
        type: string
      email:
        description: Email address of a User Group
        type: string
      memberQuery:
        $ref: '#/definitions/MemberQuery'
      memberQueryExemptions:
        description: Array of GraphObjects exempted from the query
        items:
          $ref: '#/definitions/GraphObject'
        type: array
      memberSuggestionsNotify:
        description: True if notification emails are to be sent for membership suggestions.
        type: boolean
      membershipMethod:
        $ref: '#/definitions/GroupMembershipMethodType'
      name:
        description: Display name of a User Group.
        type: string
    required:
      - name
    title: UserGroupPost
    type: object
  UserGroupPut:
    properties:
      attributes:
        $ref: '#/definitions/GroupAttributes-UserGroup'
      description:
        description: Description of a User Group
        type: string
      email:
        description: Email address of a User Group
        type: string
      memberQuery:
        $ref: '#/definitions/MemberQuery'
      memberQueryExemptions:
        description: Array of GraphObjects exempted from the query
        items:
          $ref: '#/definitions/GraphObject'
        type: array
      memberSuggestionsNotify:
        description: True if notification emails are to be sent for membership suggestions.
        type: boolean
      membershipMethod:
        $ref: '#/definitions/GroupMembershipMethodType'
      name:
        description: Display name of a User Group.
        type: string
    required:
      - name
    title: UserGroupPut
    type: object
  active-directory:
    properties:
      delegationState:
        description: Delegation state of the Active Directory instance
        enum:
          - ENABLED
          - PENDING
          - DISABLED
        type: string
      domain:
        description: Domain name for this Active Directory instance.
        type: string
      groupsEnabled:
        type: boolean
      id:
        description: ObjectID of this Active Directory instance.
        readOnly: true
        type: string
      primaryAgent:
        description: ObjectID of the primary sync agent of domain.
        readOnly: true
        type: string
      primaryImportAgent:
        description: ObjectID of the primary import agent of domain.
        readOnly: true
        type: string
      useCase:
        enum:
          - UNSET
          - TWOWAYSYNC
          - JCASAUTHORITY
          - ADASAUTHORITY
        type: string
    title: Active Directory
    type: object
  active-directory-agent:
    properties:
      agentType:
        enum:
          - SYNC
          - IMPORT
        type: string
    title: Active Directory Agent
    type: object
  active-directory-agent-get:
    properties:
      connectKey:
        description: The connect key to use when installing the Agent on a Domain Controller.
        type: string
      contactAt:
        type: string
      hostname:
        type: string
      id:
        description: ObjectID of this Active Directory Agent.
        type: string
      source_ip:
        type: string
      state:
        enum:
          - unsealed
          - active
          - inactive
        type: string
      version:
        type: string
    required:
      - id
    title: Active Directory Agent Get
    type: object
  active-directory-agent-list:
    properties:
      contactAt:
        type: string
      hostname:
        type: string
      id:
        description: ObjectID of this Active Directory Agent.
        type: string
      source_ip:
        type: string
      state:
        enum:
          - unsealed
          - active
          - inactive
        type: string
      version:
        type: string
    title: Active Directory Agent List
    type: object
  apple-mdm-device:
    properties:
      createdAt:
        type: string
      depRegistered:
        type: boolean
      deviceInformation:
        $ref: '#/definitions/apple-mdm-device-info'
      enrolled:
        type: boolean
      hasActivationLockBypassCodes:
        type: boolean
      id:
        type: string
      mdmOsFamily:
        type: string
      modelFamily:
        type: string
      osVersion:
        type: string
      securityInfo:
        $ref: '#/definitions/apple-mdm-device-security-info'
      serialNumber:
        type: string
      udid:
        type: string
    title: Apple MDM Device
    type: object
    x-tags:
      - Apple MDM
  apple-mdm-device-info:
    description: Apple MDM device information
    properties:
      activationLockAllowedWhileSupervised:
        type: boolean
      availableDeviceCapacity:
        type: number
      deviceCapacity:
        type: number
      deviceName:
        type: string
      iccid:
        type: string
      imei:
        type: string
      isSupervised:
        type: boolean
      modelMarketingName:
        type: string
      modelName:
        type: string
      modelNumber:
        type: string
      osBuildVersion:
        type: string
      osExtraVersion:
        type: string
      osMarketingName:
        type: string
      osSupplementalBuildVersion:
        type: string
      secondIccid:
        type: string
      secondImei:
        type: string
      secondSubscriberCarrierNetwork:
        type: string
      sofwareUpdateId:
        type: string
      subscriberCarrierNetwork:
        type: string
      wifiMac:
        type: string
    title: Apple MDM Device Info
    type: object
    x-tags:
      - Apple MDM
  apple-mdm-device-security-info:
    description: Apple MDM device security information
    properties:
      enrolledViaDep:
        type: boolean
      filevaultEnabled:
        type: boolean
      isActivationLockManageable:
        type: boolean
      isUserEnrollment:
        type: boolean
      passcodeCompliant:
        type: boolean
      passcodePresent:
        type: boolean
      userApprovedEnrollment:
        type: boolean
    title: Apple MDM Device Security Info
    type: object
    x-tags:
      - Apple MDM
  apple-mdm-patch:
    properties:
      ades:
        $ref: '#/definitions/ADES'
      allowMobileUserEnrollment:
        description: A toggle to allow mobile device enrollment for an organization.
        type: boolean
      appleCertCreatorAppleID:
        description: The Apple ID of the admin who created the Apple signed certificate.
        type: string
      appleSignedCert:
        description: A signed certificate obtained from Apple after providing Apple with the plist file provided on POST.
        type: string
      defaultIosUserEnrollmentDeviceGroupID:
        description: ObjectId uniquely identifying the MDM default iOS user enrollment device group.
        type: string
      defaultSystemGroupID:
        description: ObjectId uniquely identifying the MDM default System Group.
        type: string
      dep:
        $ref: '#/definitions/DEP'
      encryptedDepServerToken:
        description: The S/MIME encoded DEP Server Token returned by Apple Business Manager when creating an MDM instance.
        type: string
      name:
        description: A new name for the Apple MDM configuration.
        maxLength: 255
        type: string
    title: Apple MDM Patch
    type: object
  apple-mdm-public-key-cert:
    title: Apple MDM Public Key Certificate
    type: string
  apple-mdm-signed-csr-plist:
    title: Apple MDM Signed CSR PList
    type: string
  application:
    properties:
      _id:
        type: string
      associatedOrganizationsCount:
        type: integer
      catalogItem:
        type: string
      color:
        type: string
      description:
        maxLength: 256
        type: string
      displayLabel:
        type: string
      displayName:
        type: string
      logo:
        properties:
          color:
            enum:
              - ''
              - '#202D38'
              - '#005466'
              - '#3E8696'
              - '#006CAC'
              - '#0617AC'
              - '#7C6ADA'
              - '#D5779D'
              - '#9E2F00'
              - '#FFB000'
              - '#58C469'
              - '#57C49F'
              - '#FF6C03'
            type: string
          url:
            type: string
        type: object
      name:
        type: string
      parentApp:
        type: string
      provision:
        properties:
          _id:
            type: string
          beta:
            type: boolean
          type:
            type: string
        type: object
      sso:
        $ref: '#/definitions/sso'
      status:
        enum:
          - ''
          - end_of_life
          - end_of_support
          - beta
        type: string
    title: Application
    type: object
  auth-info:
    properties:
      expiry:
        type: string
      isValid:
        type: boolean
      message:
        type: string
    title: Auth Info
    type: object
  auth-input:
    properties:
      basic:
        properties:
          password:
            type: string
          username:
            type: string
        type: object
      oauth:
        properties:
          code:
            type: string
        type: object
    title: Auth Input
    type: object
  auth-input-object:
    example:
      auth:
        basic:
          password: mollit cillum
          username: veniam dolore
        oauth:
          code: minim ad ea dolor
    properties:
      auth:
        $ref: '#/definitions/auth-input'
    title: Auth Input Object
    type: object
  bulk-scheduled-statechange-create:
    description: Model to support bulk scheduling of a state change for one or more users
    properties:
      activation_email_override:
        description: Send the activation or welcome email to the specified email address upon activation. Can only be used with a single user_id and scheduled activation. This field will be ignored if `send_activation_emails` is explicitly set to false.
        type: string
      send_activation_emails:
        description: Set to true to send activation or welcome email(s) to each user_id upon activation. Set to false to suppress emails. Can only be used with scheduled activation(s).
        type: boolean
      start_date:
        description: Date and time that scheduled action should occur
        format: date-time
        type: string
      state:
        description: The state to move the user(s) to
        enum:
          - ACTIVATED
          - SUSPENDED
        type: string
      user_ids:
        description: Array of system user ids to schedule for a state change
        items:
          type: string
        type: array
    required:
      - user_ids
      - state
      - start_date
    title: Bulk Schedule User State Change Create
    type: object
    x-examples:
      example-1:
        start_date: '2020-01-01T02:00:00'
        state: SUSPENDED
        user_ids:
          - 666f6f2d6261722d71757578
          - 0123456789ab0123456789ab
          - 666f6f2d6261722d71757555
      example-2:
        send_activation_emails: true
        start_date: '2020-01-01T02:00:00'
        state: ACTIVATED
        user_ids:
          - 666f6f2d6261722d71757578
          - 0123456789ab0123456789ab
          - 666f6f2d6261722d71757555
      example-3:
        activation_email_override: alternate-activation-email@email.com
        start_date: '2020-01-01T02:00:00'
        state: ACTIVATED
        user_ids:
          - 666f6f2d6261722d71757578
  bulk-user-create:
    description: 'See [V1 system user creation](https://docs.jumpcloud.com/api/1.0/index.html#operation/systemusers_post) for full list of attributes.'
    properties:
      attributes:
        description: Map of additional attributes.
        items:
          type: object
        type: array
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      username:
        type: string
    title: Bulk User Create
    type: object
  bulk-user-expire:
    properties:
      attributes:
        description: Map of additional attributes.
        items:
          type: object
        type: array
      id:
        description: Object ID of the systemuser to expire
        type: string
      organization:
        description: The identifier for an organization to link this systemuser to
        type: string
    title: Bulk User Expire
    type: object
  bulk-user-unlock:
    properties:
      attributes:
        description: Map of additional attributes.
        items:
          type: object
        type: array
      id:
        description: Object ID of the systemuser to unlock
        type: string
      organization:
        description: The identifier for an organization to link this systemuser
        type: string
    title: Bulk User Unlock
    type: object
  bulk-user-update:
    description: 'See [V1 system user update](https://docs.jumpcloud.com/api/1.0/index.html#operation/systemusers_put) for full list of attributes.'
    properties:
      attributes:
        description: Map of additional attributes.
        items:
          type: object
        type: array
      email:
        type: string
      firstname:
        type: string
      id:
        description: Object ID of the user being updated
        type: string
      lastname:
        type: string
      organization:
        description: Organization object id of the user
        type: string
      username:
        type: string
    title: Bulk User Update
    type: object
  commandsGraphObjectWithPaths:
    properties:
      command:
        type: string
      commandType:
        type: string
      compiledAttributes:
        $ref: '#/definitions/GraphAttributes'
      id:
        description: Object ID of this graph object.
        type: string
      launchType:
        type: string
      name:
        type: string
      organization:
        type: string
      paths:
        description: A path through the graph between two graph objects.
        items:
          items:
            $ref: '#/definitions/GraphConnection'
          type: array
        type: array
      schedule:
        type: string
      scheduleRepeatType:
        type: string
      timeToLiveSeconds:
        type: integer
      timeout:
        type: string
      type:
        $ref: '#/definitions/GraphType'
    required:
      - type
      - id
      - paths
    title: commandsGraphObjectWithPaths
    type: object
  defaultDomain:
    properties:
      domain:
        readOnly: true
        type: string
      id:
        type: string
    type: object
  devices.AggregatedPolicyCount:
    properties:
      duplicate:
        description: the count of duplicate policies.
        format: int64
        type: integer
      failed:
        description: the count of failing policies.
        format: int64
        type: integer
      pending:
        description: the count of pending policies.
        format: int64
        type: integer
      success:
        description: the count of successful policies.
        format: int64
        type: integer
      total:
        description: the count of all the policies attached to the system.
        format: int64
        type: integer
      unsupportedOs:
        description: the count of policies for which os is unsupported.
        format: int64
        type: integer
    title: Responses
    type: object
  devices.AggregatedPolicyResultResponse:
    properties:
      failedPolicies:
        items:
          type: string
        type: array
      pendingPolicies:
        items:
          type: string
        type: array
      policyCountData:
        $ref: '#/definitions/devices.AggregatedPolicyCount'
    type: object
  devices.AppCatalogInstallableItem:
    properties:
      architectures:
        items:
          type: string
        type: array
      installerType:
        type: string
      objectId:
        format: byte
        type: string
      operatingSystem:
        type: string
      softwareApp:
        $ref: '#/definitions/devices.SoftwareApp'
      version:
        type: string
    type: object
  devices.AppCatalogItem:
    properties:
      iconUrl:
        type: string
      installableItems:
        items:
          $ref: '#/definitions/devices.AppCatalogInstallableItem'
        type: array
      name:
        type: string
      objectId:
        format: byte
        type: string
      version:
        type: string
    type: object
  devices.Filters:
    properties:
      field:
        type: string
      values:
        items:
          type: string
        type: array
    type: object
  devices.GetDefaultPasswordSyncSettingsResponse:
    properties:
      enabled:
        type: boolean
    type: object
  devices.GetSignInWithJumpCloudSettingsResponse:
    properties:
      organizationObjectId:
        format: byte
        type: string
      settings:
        items:
          $ref: '#/definitions/devices.SignInWithJumpCloudSetting'
        type: array
    type: object
  devices.GetSsaoDevicesSettingsResponse:
    properties:
      organizationObjectId:
        format: byte
        type: string
      settings:
        items:
          $ref: '#/definitions/devices.SsaoDevicesSettings'
        type: array
    type: object
  devices.MetadataFile:
    properties:
      mimeType:
        type: string
      sha256sum:
        type: string
      size:
        format: int64
        type: integer
    type: object
  devices.MetadataIPA:
    properties:
      assetKind:
        type: string
      bundleIdentifier:
        type: string
      bundleVersion:
        type: string
      packageKind:
        type: string
      sha256sum:
        type: string
      subtitle:
        type: string
      title:
        type: string
    type: object
  devices.MetadataMSI:
    properties:
      manufacturer:
        type: string
      productCode:
        type: string
      productName:
        type: string
      productVersion:
        type: string
      sha256sum:
        type: string
      upgradeCode:
        type: string
    type: object
  devices.MetadataMSIPublic:
    properties:
      manufacturer:
        type: string
      productCode:
        type: string
      productName:
        type: string
      productVersion:
        type: string
      sha256sum:
        type: string
      upgradeCode:
        type: string
    type: object
  devices.MetadataPKG:
    properties:
      assetKind:
        type: string
      bundleIdentifier:
        type: string
      bundleVersion:
        type: string
      packageKind:
        type: string
      sha256sum:
        type: string
      subtitle:
        type: string
      title:
        type: string
    type: object
  devices.ObjectStorageItem:
    properties:
      objectId:
        format: byte
        type: string
      references:
        items:
          $ref: '#/definitions/devices.ObjectStorageReferrer'
        type: array
      versions:
        items:
          $ref: '#/definitions/devices.ObjectStorageVersion'
        type: array
    type: object
  devices.ObjectStorageItemPublic:
    properties:
      objectId:
        format: hex
        type: string
      versions:
        items:
          $ref: '#/definitions/devices.ObjectStorageVersionPublic'
        type: array
    type: object
  devices.ObjectStorageMetadata:
    properties:
      metadataFile:
        $ref: '#/definitions/devices.MetadataFile'
      metadataIpa:
        $ref: '#/definitions/devices.MetadataIPA'
      metadataMsi:
        $ref: '#/definitions/devices.MetadataMSI'
      metadataPkg:
        $ref: '#/definitions/devices.MetadataPKG'
    type: object
  devices.ObjectStorageMetadataPublic:
    properties:
      metadataFile:
        $ref: '#/definitions/devices.MetadataFile'
      metadataIpa:
        $ref: '#/definitions/devices.MetadataIPA'
      metadataMsi:
        $ref: '#/definitions/devices.MetadataMSIPublic'
      metadataPkg:
        $ref: '#/definitions/devices.MetadataPKG'
    type: object
  devices.ObjectStorageReferrer:
    description: |-
      When the status of an object changes we need to know how to contact external objects that refer to us.
      Since a oneof field cannot be repeated we are wrapping it with the ObjectStorageReferrer.
    properties:
      trackObject:
        $ref: '#/definitions/devices.TrackObject'
    type: object
  devices.ObjectStorageStatusResponse:
    properties:
      spaceTotal:
        format: int64
        type: integer
      spaceUsed:
        format: int64
        type: integer
    type: object
  devices.ObjectStorageVersion:
    description: The Version is the details of actual blob stored by the underlying storage subsystem.
    properties:
      createdAt:
        format: date-time
        type: string
      metadata:
        $ref: '#/definitions/devices.ObjectStorageMetadata'
      name:
        type: string
      objectId:
        format: byte
        type: string
      rejectedReason:
        type: string
      sha256sum:
        type: string
      size:
        format: int64
        type: integer
      status:
        $ref: '#/definitions/devices.ObjectStorageVersion.Status'
      storagePath:
        type: string
      updatedAt:
        format: date-time
        type: string
      version:
        format: int64
        type: integer
    type: object
  devices.ObjectStorageVersion.Status:
    default: UNKNOWN
    enum:
      - UNKNOWN
      - PENDING
      - VALIDATING
      - AVAILABLE
      - REJECTED
    type: string
  devices.ObjectStorageVersionPublic:
    properties:
      createdAt:
        format: date-time
        type: string
      metadata:
        $ref: '#/definitions/devices.ObjectStorageMetadataPublic'
      name:
        type: string
      objectId:
        format: hex
        type: string
      rejectedReason:
        type: string
      sha256sum:
        type: string
      size:
        format: int64
        type: integer
      status:
        $ref: '#/definitions/devices.ObjectStorageVersionPublic.Status'
      storagePath:
        type: string
      updatedAt:
        format: date-time
        type: string
      version:
        format: int64
        type: integer
    type: object
  devices.ObjectStorageVersionPublic.Status:
    default: UNKNOWN
    enum:
      - UNKNOWN
      - PENDING
      - VALIDATING
      - AVAILABLE
      - REJECTED
    type: string
  devices.SavedView:
    properties:
      columns:
        items:
          type: string
        title: '["col1", "col2", "col3"]'
        type: array
      filters:
        items:
          $ref: '#/definitions/devices.Filters'
        title: '[ {''field'': ''field1'', ''values'': [''val1'' , ''val2''] }, { ... } ]'
        type: array
      isDefault:
        type: boolean
      name:
        type: string
      objectId:
        format: byte
        type: string
      shared:
        type: boolean
      sortConfig:
        type: string
      userObjectId:
        format: byte
        type: string
    type: object
  devices.SavedViewCreateRequest:
    properties:
      columns:
        items:
          type: string
        type: array
      filters:
        items:
          $ref: '#/definitions/devices.Filters'
        type: array
      isDefault:
        type: boolean
      name:
        type: string
      objectId:
        format: byte
        type: string
      shared:
        type: boolean
      sortConfig:
        type: string
      userObjectId:
        format: byte
        type: string
    type: object
  devices.SetDefaultPasswordSyncSettingsRequest:
    properties:
      enabled:
        type: boolean
      organizationObjectId:
        format: byte
        type: string
    type: object
  devices.SetSignInWithJumpCloudSettingsRequest:
    properties:
      organizationObjectId:
        format: byte
        type: string
      settings:
        items:
          $ref: '#/definitions/devices.SignInWithJumpCloudSetting'
        type: array
    type: object
  devices.SetSsaoDevicesSettingsRequest:
    properties:
      organizationObjectId:
        format: byte
        type: string
      settings:
        items:
          $ref: '#/definitions/devices.SsaoDevicesSettings'
        type: array
    type: object
  devices.SignInWithJumpCloudSetting:
    properties:
      defaultPermission:
        $ref: '#/definitions/devices.SignInWithJumpCloudSetting.Permission'
      enabled:
        type: boolean
      osFamily:
        $ref: '#/definitions/devices.SignInWithJumpCloudSetting.OSFamily'
    type: object
  devices.SignInWithJumpCloudSetting.OSFamily:
    default: UNKNOWN
    enum:
      - UNKNOWN
      - WINDOWS
      - MACOS
    type: string
  devices.SignInWithJumpCloudSetting.Permission:
    default: STANDARD
    enum:
      - STANDARD
      - ADMIN
    type: string
  devices.SoftwareApp:
    properties:
      createdAt:
        format: date-time
        type: string
        x-nullable: true
      displayName:
        type: string
      objectId:
        format: byte
        type: string
      settings:
        items:
          $ref: '#/definitions/devices.SoftwareApp.Setting'
        type: array
      updatedAt:
        format: date-time
        type: string
        x-nullable: true
    type: object
  devices.SoftwareApp.Setting:
    properties:
      allowUpdateDelay:
        type: boolean
      appCatalogInstallableObjectId:
        format: byte
        type: string
      appFileName:
        type: string
      appleVpp:
        $ref: '#/definitions/devices.SoftwareAppAppleVpp'
      architectures:
        items:
          type: string
        type: array
      assetKind:
        type: string
      assetSha256Size:
        format: int64
        type: integer
      assetSha256Strings:
        items:
          type: string
        type: array
      autoUpdate:
        type: boolean
      bundleId:
        type: string
      commandLineArguments:
        type: string
      createdAt:
        format: date-time
        type: string
        x-nullable: true
      description:
        type: string
      desiredState:
        $ref: '#/definitions/devices.SoftwareAppDesiredState'
      downloadUrl:
        type: string
      enterpriseObjectId:
        format: byte
        type: string
      format:
        $ref: '#/definitions/devices.SoftwareApp.Setting.Format'
      googleAndroid:
        $ref: '#/definitions/devices.SoftwareAppGoogleAndroid'
      iconUrl:
        type: string
      location:
        type: string
      locationObjectId:
        format: byte
        type: string
      microsoftStore:
        $ref: '#/definitions/devices.SoftwareAppMicrosoftStore'
      packageId:
        type: string
      packageKind:
        type: string
      packageManager:
        $ref: '#/definitions/devices.SoftwareAppPackageManager'
      packageSubtitle:
        type: string
      packageVersion:
        type: string
      packageVersionUpdatedAt:
        format: date-time
        type: string
        x-nullable: true
      scope:
        $ref: '#/definitions/devices.SoftwareApp.Setting.Scope'
      shortVersion:
        type: string
      storedPackage:
        $ref: '#/definitions/devices.ObjectStorageItem'
      storedPackageObjectId:
        format: byte
        type: string
      teamId:
        type: string
      updateTool:
        type: string
      updateToolArguments:
        type: string
      updatedAt:
        format: date-time
        type: string
        x-nullable: true
      versionlessDownloadUrl:
        type: boolean
    type: object
  devices.SoftwareApp.Setting.Format:
    default: PKG
    enum:
      - PKG
      - APP_IN_DMG
      - PKG_IN_DMG
      - IPA
    type: string
  devices.SoftwareApp.Setting.Scope:
    default: SYSTEM
    enum:
      - SYSTEM
      - USER
    type: string
  devices.SoftwareAppAppleVpp:
    properties:
      appConfiguration:
        title: Not adding an instrumentation annotation since this could potentially contain sensitive info
        type: string
      assignedLicenses:
        format: int64
        type: string
      availableLicenses:
        format: int64
        type: string
      details:
        type: string
      isConfigEnabled:
        type: boolean
      supportedDeviceFamilies:
        items:
          $ref: '#/definitions/devices.SoftwareAppAppleVpp.DeviceFamily'
        type: array
      totalLicenses:
        format: int64
        type: string
    type: object
  devices.SoftwareAppAppleVpp.DeviceFamily:
    default: MAC
    enum:
      - MAC
      - IPAD
      - IPHONE
      - IPOD
    type: string
  devices.SoftwareAppAutoUpdateMode:
    default: AUTO_UPDATE_MODE_UNSPECIFIED
    enum:
      - AUTO_UPDATE_MODE_UNSPECIFIED
      - AUTO_UPDATE_DEFAULT
      - AUTO_UPDATE_POSTPONED
      - AUTO_UPDATE_HIGH_PRIORITY
    type: string
  devices.SoftwareAppDesiredState:
    default: INSTALL
    enum:
      - INSTALL
      - UNINSTALL
    type: string
  devices.SoftwareAppGoogleAndroid:
    properties:
      androidFeatures:
        items:
          type: string
        type: array
      appPricing:
        type: string
      appVersion:
        type: string
      author:
        type: string
      autoUpdateMode:
        $ref: '#/definitions/devices.SoftwareAppAutoUpdateMode'
      category:
        type: string
      contentRating:
        type: string
      displayMode:
        type: string
      distributionChannel:
        type: string
      fullDescription:
        type: string
      iconUrl:
        type: string
      installType:
        $ref: '#/definitions/devices.SoftwareAppInstallType'
      managedConfigurationTemplateId:
        type: string
      managedProperties:
        type: boolean
      minSdkVersion:
        format: int64
        type: string
      name:
        type: string
      permissionGrants:
        items:
          $ref: '#/definitions/devices.SoftwareAppPermissionGrant'
        type: array
      playStoreUrl:
        type: string
      runtimePermission:
        $ref: '#/definitions/devices.SoftwareAppRuntimePermission'
      startUrl:
        type: string
      type:
        $ref: '#/definitions/devices.SoftwareAppType'
      updateTime:
        type: string
      versionCode:
        format: int64
        type: string
    type: object
  devices.SoftwareAppInstallType:
    default: INSTALL_TYPE_UNSPECIFIED
    enum:
      - INSTALL_TYPE_UNSPECIFIED
      - PREINSTALLED
      - FORCE_INSTALLED
      - BLOCKED
      - AVAILABLE
      - REQUIRED_FOR_SETUP
      - KIOSK
    type: string
  devices.SoftwareAppMicrosoftStore:
    properties:
      doNotUpdate:
        type: boolean
      nonRemovable:
        type: boolean
      packageFamilyName:
        type: string
    type: object
  devices.SoftwareAppPackageManager:
    default: UNKNOWN
    enum:
      - UNKNOWN
      - CHOCOLATEY
      - APPLE_VPP
      - APPLE_CUSTOM
      - GOOGLE_ANDROID
      - WINDOWS_MDM
      - MICROSOFT_STORE
      - WINGET
      - MAC_OS_APP_CATALOG
    type: string
  devices.SoftwareAppPermissionGrant:
    properties:
      id:
        type: string
      policy:
        $ref: '#/definitions/devices.SoftwareAppRuntimePermission'
    type: object
  devices.SoftwareAppRuntimePermission:
    default: PERMISSION_POLICY_UNSPECIFIED
    enum:
      - PERMISSION_POLICY_UNSPECIFIED
      - PROMPT
      - GRANT
      - DENY
    type: string
  devices.SoftwareAppType:
    default: APP_TYPE_UNSPECIFIED
    enum:
      - APP_TYPE_UNSPECIFIED
      - PUBLIC
      - PRIVATE
      - WEBAPP
    type: string
  devices.SsaoDevicesSettings:
    properties:
      defaultPermission:
        $ref: '#/definitions/devices.SsaoDevicesSettings.Permission'
      enabled:
        type: boolean
      osFamily:
        $ref: '#/definitions/devices.SsaoDevicesSettings.OSFamily'
      passwordSyncEnabled:
        type: boolean
    type: object
  devices.SsaoDevicesSettings.OSFamily:
    default: UNKNOWN
    enum:
      - UNKNOWN
      - WINDOWS
      - MACOS
    type: string
  devices.SsaoDevicesSettings.Permission:
    default: STANDARD
    enum:
      - STANDARD
      - ADMIN
    type: string
  devices.TrackObject:
    description: TrackObject is a slimmed down version of a jumpcloud.directory.GraphObject.
    properties:
      objectId:
        format: byte
        type: string
      type:
        $ref: '#/definitions/directory.Type'
    type: object
  directory.Type:
    default: UNKNOWN
    description: |2-
       - UNKNOWN: Unknown represents a type of directory object from the database the code
      doesn't recognize; in general it should never ever happen.
       - USER: Groups should be even, non-groups odd for the code to correct traverse; if
      necessary reserve a space where we do not support a group for that type
      yet.
    enum:
      - UNKNOWN
      - USER
      - USER_GROUP
      - SYSTEM
      - SYSTEM_GROUP
      - RADIUS_SERVER
      - RADIUS_SERVER_GROUP
      - APPLICATION
      - APPLICATION_GROUP
      - COMMAND
      - COMMAND_GROUP
      - G_SUITE
      - G_SUITE_GROUP
      - OFFICE_365
      - OFFICE_365_GROUP
      - LDAP_SERVER
      - LDAP_SERVER_GROUP
      - PASSWORD_MANAGER_ITEM
      - PASSWORD_MANAGER_ITEM_GROUP
      - POLICY
      - POLICY_GROUP
      - ACTIVE_DIRECTORY
      - ACTIVE_DIRECTORY_GROUP
      - WORKDAY
      - WORKDAY_GROUP
      - SCIM_CLIENT
      - SCIM_CLIENT_GROUP
      - SOFTWARE_APP
      - SOFTWARE_APP_GROUP
      - IDP_ROUTING_POLICY
      - IDP_ROUTING_POLICY_GROUP
      - RULE
      - RULE_GROUP
    type: string
  feature:
    description: A feature represents JumpCloud functionality.
    properties:
      name:
        description: The unique identifier for this feature.
        enum:
          - cloudDirectory
          - cloudInsights
          - deviceManagement
          - directoryInsightsPremium
          - deviceMonitoringAlerting
          - federatedDeviceIdentity
          - implementationQuickstart
          - jcManagedDeviceIdentity
          - jumpcloudGo
          - jumpcloudProtect
          - ldap
          - mdm
          - mfa
          - osPatchManagement
          - passwordManagement
          - premiumSupport
          - primePass
          - radius
          - remoteAccess
          - saasMgmt
          - assetMgmt
          - softwareManagement
          - sso
          - systemInsights
          - userLifecycle
          - zeroTrust
        type: string
    type: object
  google.protobuf.Any:
    additionalProperties: {}
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

      Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

      Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".


      JSON

      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
    properties:
      '@type':
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          * If no scheme is provided, `https` is assumed.
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
        type: string
    type: object
  google.rpc.Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for
      different programming environments, including REST APIs and RPC APIs. It is
      used by [gRPC](https://github.com/grpc). Each `Status` message contains
      three pieces of data: error code, error message, and error details.

      You can find out more about this error model and how to work with it in the
      [API Design Guide](https://cloud.google.com/apis/design/errors).
    properties:
      code:
        description: |-
          The status code, which should be an enum value of
          [google.rpc.Code][google.rpc.Code].
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          $ref: '#/definitions/google.protobuf.Any'
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          [google.rpc.Status.details][google.rpc.Status.details] field, or localized
          by the client.
        type: string
    type: object
  gsuite:
    properties:
      defaultDomain:
        $ref: '#/definitions/defaultDomain'
      groupsEnabled:
        type: boolean
      id:
        readOnly: true
        type: string
      importFilter:
        type: string
      name:
        type: string
      userLockoutAction:
        enum:
          - suspend
          - maintain
        type: string
      userPasswordExpirationAction:
        enum:
          - suspend
          - maintain
          - remove_access
        type: string
    title: GSuite
    type: object
  importUser:
    properties:
      addresses:
        items:
          $ref: '#/definitions/importUserAddress'
        type: array
      alternateEmail:
        type: string
      company:
        type: string
      costCenter:
        type: string
      department:
        type: string
      displayname:
        type: string
      email:
        type: string
      employeeIdentifier:
        type: string
      employeeType:
        type: string
      firstname:
        type: string
      id:
        type: string
      jobTitle:
        type: string
      lastname:
        type: string
      location:
        type: string
      manager:
        type: string
      middlename:
        type: string
      phoneNumbers:
        items:
          $ref: '#/definitions/importUserPhoneNumber'
        type: array
      username:
        type: string
    title: Import User
    type: object
  importUserAddress:
    properties:
      country:
        type: string
      locality:
        type: string
      postalCode:
        type: string
      region:
        type: string
      streetAddress:
        type: string
      type:
        type: string
    title: Import User Address
    type: object
  importUserPhoneNumber:
    properties:
      type:
        type: string
      value:
        type: string
    title: Import User Address
    type: object
  importUsersResponse:
    properties:
      total_count:
        type: number
      users:
        items:
          $ref: '#/definitions/importUser'
        type: array
    title: Import Users Response
    type: object
  job-id:
    properties:
      jobId:
        type: string
    title: Job ID
    type: object
    x-examples:
      example-1:
        jobId: string
  job-workresult:
    properties:
      createdAt:
        type: string
      id:
        type: string
      meta:
        type: object
      persistedFields:
        type: object
      status:
        type: string
      statusMsg:
        type: string
      updatedAt:
        type: string
    title: Job WorkResult
    type: object
  jumpcloud.alerts.Alert:
    description: Alert holds the details of an alert.
    properties:
      acknowledgedAt:
        description: acknowledged_at is the time when alert was acknowledged.
        format: date-time
        type: string
      category:
        $ref: '#/definitions/jumpcloud.alerts.AlertCategory'
      createdAt:
        description: created_at is the creation time of the first occurrence (as specified by the alert occurrence generator).
        format: date-time
        type: string
      description:
        type: string
      firstOccurredAt:
        description: first_occurred_at is the time of the first occurrence of the alert.
        format: date-time
        type: string
      frequency:
        format: int64
        type: integer
      lastOccurredAt:
        description: last_occurred_at is the time of the last occurrence of the alert.
        format: date-time
        type: string
      lastOccurrenceContext:
        description: context holds the context of of last alert occurrence.
        readOnly: true
        type: object
      objectId:
        description: id holds the unique identifier of an alert.
        format: byte
        type: string
      occurrencesCount:
        description: occurrences_count is the number of occurrences of the alert.
        format: uint64
        type: integer
      organizationObjectId:
        format: byte
        readOnly: true
        type: string
      referenceId:
        type: string
      remark:
        description: A remark added to the alert while updating.
        type: string
      resolvedAt:
        description: resolved_at is the time when alert was resolved.
        format: date-time
        type: string
      severity:
        $ref: '#/definitions/jumpcloud.alerts.AlertSeverity'
      sourceId:
        type: string
      sourceName:
        readOnly: true
        type: string
      sourceType:
        $ref: '#/definitions/jumpcloud.alerts.AlertSourceType'
      status:
        $ref: '#/definitions/jumpcloud.alerts.AlertStatus'
      title:
        type: string
      updatedAt:
        description: updated_at is the time when alert was updated.
        format: date-time
        type: string
    type: object
  jumpcloud.alerts.AlertCategory:
    default: ALERT_CATEGORY_UNSPECIFIED
    description: AlertCategory specifies the category of an alert.
    enum:
      - ALERT_CATEGORY_UNSPECIFIED
      - ALERT_CATEGORY_DIRECTORY
      - ALERT_CATEGORY_SYSTEM
      - ALERT_CATEGORY_ADMIN
      - ALERT_CATEGORY_ACCESS
      - ALERT_CATEGORY_GENERAL
      - ALERT_CATEGORY_CUSTOM
    type: string
  jumpcloud.alerts.AlertOccurrence:
    description: AlertOccurrence holds the occurrence details of an alert.
    properties:
      alertObjectId:
        description: The Alert under which this occurrence is held.
        format: byte
        type: string
      context:
        description: context holds the context data as specified by the generator of the alert.
        type: object
      createdAt:
        description: created_at is the timestamp from the initiator of the occurrence.
        format: date-time
        type: string
      occurredAt:
        description: occurred_at is the timestamp from the initiator of the occurrence.
        format: date-time
        type: string
      updatedAt:
        description: updated_at is the timestamp when occurrence is updated.
        format: date-time
        type: string
    type: object
  jumpcloud.alerts.AlertSeverity:
    default: ALERT_SEVERITY_UNSPECIFIED
    description: AlertSeverity specifies the severity of an alert.
    enum:
      - ALERT_SEVERITY_UNSPECIFIED
      - ALERT_SEVERITY_LOW
      - ALERT_SEVERITY_MEDIUM
      - ALERT_SEVERITY_HIGH
    type: string
  jumpcloud.alerts.AlertSourceType:
    default: ALERT_SOURCE_TYPE_UNSPECIFIED
    description: AlertSourceType specifies the type of the source that generated the alert.
    enum:
      - ALERT_SOURCE_TYPE_UNSPECIFIED
      - ALERT_SOURCE_TYPE_USER
      - ALERT_SOURCE_TYPE_ADMIN
      - ALERT_SOURCE_TYPE_DEVICE
      - ALERT_SOURCE_TYPE_USER_GROUP
      - ALERT_SOURCE_TYPE_DEVICES
      - ALERT_SOURCE_TYPE_ACCESS_REQUEST
      - ALERT_SOURCE_TYPE_SAAS_APPLICATION
    type: string
  jumpcloud.alerts.AlertStatus:
    default: ALERT_STATUS_UNSPECIFIED
    description: AlertStatus specifies status of an alert.
    enum:
      - ALERT_STATUS_UNSPECIFIED
      - ALERT_STATUS_OPEN
      - ALERT_STATUS_ACKNOWLEDGED
      - ALERT_STATUS_RESOLVED
      - ALERT_STATUS_AUTO_RESOLVED
      - ALERT_STATUS_DELETED
    type: string
  jumpcloud.alerts.BulkDeleteRequest:
    description: BulkDeleteRequest is used to perform bulk delete operations on alerts.
    properties:
      excludeIds:
        items:
          format: byte
          type: string
        title: List of alert IDs to exclude from the operation
        type: array
      filter:
        $ref: '#/definitions/jumpcloud.alerts.FilterCriteria'
    type: object
  jumpcloud.alerts.BulkDeleteResponse:
    description: BulkDeleteResponse is the response message to BulkDeleteRequest.
    properties:
      affectedCount:
        format: uint64
        title: Number of alerts affected by the operation
        type: integer
    type: object
  jumpcloud.alerts.BulkUpdateRequest:
    description: BulkUpdateRequest is used to perform bulk update operations on alerts.
    properties:
      excludeIds:
        items:
          format: byte
          type: string
        title: List of alert IDs to exclude from the operation
        type: array
      filter:
        $ref: '#/definitions/jumpcloud.alerts.FilterCriteria'
      remark:
        title: A remark associated with the bulk update operation
        type: string
      updateField:
        $ref: '#/definitions/jumpcloud.alerts.UpdateField'
    type: object
  jumpcloud.alerts.BulkUpdateResponse:
    description: BulkUpdateResponse is the response message to BulkUpdateRequest.
    properties:
      affectedCount:
        format: uint64
        title: Number of alerts affected by the operation
        type: integer
    type: object
  jumpcloud.alerts.DeleteAlertResponse:
    description: DeleteAlertResponse is the response message to DeleteAlertRequest.
    type: object
  jumpcloud.alerts.FilterCriteria:
    properties:
      category:
        items:
          $ref: '#/definitions/jumpcloud.alerts.AlertCategory'
        type: array
      existingCondition:
        type: string
      lastOccurredAtAfter:
        type: string
      lastOccurredAtBefore:
        type: string
      severity:
        items:
          $ref: '#/definitions/jumpcloud.alerts.AlertSeverity'
        type: array
      sourceId:
        items:
          type: string
        type: array
      sourceType:
        items:
          $ref: '#/definitions/jumpcloud.alerts.AlertSourceType'
        type: array
      status:
        items:
          $ref: '#/definitions/jumpcloud.alerts.AlertStatus'
        type: array
      title:
        type: string
    title: Filter criteria for selecting alerts
    type: object
  jumpcloud.alerts.GetAlertResponse:
    description: GetAlertResponse is the response message to GetAlertRequest.
    properties:
      alert:
        $ref: '#/definitions/jumpcloud.alerts.Alert'
    type: object
  jumpcloud.alerts.GetAlertStatsResponse:
    properties:
      context:
        type: object
      totalCount:
        format: uint64
        type: integer
    type: object
  jumpcloud.alerts.ListAlertOccurrencesResponse:
    description: ListAlertOccurrencesResponse is the response message for ListAlertOccurrencesRequest.
    properties:
      alertOccurrences:
        items:
          $ref: '#/definitions/jumpcloud.alerts.AlertOccurrence'
        type: array
      count:
        format: uint64
        type: integer
    type: object
  jumpcloud.alerts.ListAlertsResponse:
    description: ListAlertsResponse is the response to ListAlertsRequest.
    properties:
      alerts:
        items:
          $ref: '#/definitions/jumpcloud.alerts.Alert'
        type: array
      count:
        format: uint64
        type: integer
    type: object
  jumpcloud.alerts.UpdateAlertStatusResponse:
    description: UpdateAlertStatusResponse is the response message to UpdateAlertStatusRequest.
    properties:
      alert:
        $ref: '#/definitions/jumpcloud.alerts.Alert'
    type: object
  jumpcloud.alerts.UpdateField:
    properties:
      status:
        $ref: '#/definitions/jumpcloud.alerts.AlertStatus'
    title: UpdateField contains the fields that can be updated in bulk operations
    type: object
  jumpcloud.apple_mdm.CommandResponse:
    type: object
  jumpcloud.apple_mdm.DisableLostMode:
    type: object
  jumpcloud.apple_mdm.EnableLostMode:
    properties:
      footnote:
        type: string
      message:
        type: string
      phoneNumber:
        type: string
    type: object
  jumpcloud.apple_mdm.EnrollmentProfilesGetAdueConfigResponse:
    properties:
      jsonConfig:
        type: string
    type: object
  jumpcloud.apple_mdm.EnrollmentProfilesGetRedirectResponse:
    properties:
      redirectUrl:
        type: string
    type: object
  jumpcloud.auth.PushVerification:
    properties:
      confirmationCode:
        type: string
      expiresAt:
        format: date-time
        type: string
      failureStatus:
        $ref: '#/definitions/google.rpc.Status'
      id:
        type: string
      initiatedAt:
        format: date-time
        type: string
      pushEndpointId:
        format: byte
        type: string
      status:
        $ref: '#/definitions/jumpcloud.auth.PushVerification.Status'
      userObjectId:
        format: byte
        type: string
    type: object
  jumpcloud.auth.PushVerification.Status:
    default: SENT
    enum:
      - SENT
      - ACCEPTED
      - EXPIRED
      - DENIED
      - ERRORED
    type: string
  jumpcloud.gapps.CreateScheduledResponse:
    properties:
      scheduledJobId:
        description: ObjectID of the created Scheduled Job
        format: hex
        type: string
    type: object
  jumpcloud.gapps.Domain:
    properties:
      accountObjectId:
        description: Unique identifier of the GSuite.
        format: byte
        type: string
      default:
        description: Suggests if the domain is default
        type: boolean
      domain:
        description: name of the domain
        type: string
      objectId:
        description: Unique identifier of the Domain.
        format: byte
        type: string
    type: object
  jumpcloud.gapps.DomainListResponse:
    properties:
      domains:
        items:
          $ref: '#/definitions/jumpcloud.gapps.Domain'
        type: array
      totalCount:
        format: int64
        type: integer
    type: object
  jumpcloud.gapps.DomainResponse:
    properties:
      domain:
        $ref: '#/definitions/jumpcloud.gapps.Domain'
    type: object
  jumpcloud.gapps.ListScheduledResponse:
    properties:
      schedules:
        items:
          $ref: '#/definitions/jumpcloud.gapps.ScheduledImport'
        type: array
    type: object
  jumpcloud.gapps.ScheduledImport:
    properties:
      scheduledJobId:
        description: ObjectID of the Scheduled Job
        format: hex
        type: string
      sendEmail:
        title: SendEmail is a flag to opt-in for an email with results of a scheduled import job
        type: boolean
    type: object
  jumpcloud.gapps.UpdateScheduledResponse:
    properties:
      scheduledJob:
        $ref: '#/definitions/jumpcloud.gapps.ScheduledImport'
    type: object
  jumpcloud.google_emm.AllowPersonalUsage:
    default: PERSONAL_USAGE_ALLOWED
    enum:
      - PERSONAL_USAGE_ALLOWED
      - PERSONAL_USAGE_DISALLOWED
      - PERSONAL_USAGE_DISALLOWED_USERLESS
    title: |-
      Controls whether personal usage is allowed on a device provisioned
      Refer https://developers.google.com/android/management/reference/rest/v1/enterprises.enrollmentTokens
    type: string
  jumpcloud.google_emm.CommandResponse:
    type: object
  jumpcloud.google_emm.CommonCriteriaModeInfo:
    properties:
      commonCriteriaModeStatus:
        type: string
    type: object
  jumpcloud.google_emm.ConnectionStatus:
    properties:
      enterpriseId:
        format: byte
        type: string
      isConnected:
        type: boolean
      organizationObjectId:
        format: byte
        type: string
    type: object
  jumpcloud.google_emm.CreateEnterpriseRequest:
    properties:
      enrollmentToken:
        title: not logging because it contains sensitive information
        type: string
      signupUrlName:
        title: not logging because it contains sensitive information
        type: string
    type: object
  jumpcloud.google_emm.CreateWebTokenRequest:
    properties:
      enterpriseObjectId:
        format: byte
        type: string
      iframeFeature:
        $ref: '#/definitions/jumpcloud.google_emm.Feature'
      parentFrameUrl:
        type: string
    type: object
  jumpcloud.google_emm.CreatedWhere:
    default: API
    enum:
      - API
      - ADMIN_PORTAL
      - USER_PORTAL
    title: Identifies where create enrollment token request originated
    type: string
  jumpcloud.google_emm.DeleteEnrollmentTokenResponse:
    properties:
      name:
        type: string
    type: object
  jumpcloud.google_emm.Device:
    properties:
      deviceId:
        format: byte
        type: string
      deviceInformation:
        $ref: '#/definitions/jumpcloud.google_emm.DeviceInformation'
      name:
        type: string
    type: object
  jumpcloud.google_emm.DeviceAndroidPolicy:
    properties:
      policy:
        type: string
    type: object
  jumpcloud.google_emm.DeviceData:
    properties:
      deviceId:
        format: byte
        type: string
      name:
        type: string
    type: object
  jumpcloud.google_emm.DeviceInformation:
    properties:
      deviceStateInfo:
        $ref: '#/definitions/jumpcloud.google_emm.DeviceStateInfo'
      emmEnrollmentInfo:
        $ref: '#/definitions/jumpcloud.google_emm.EMMEnrollmentInfo'
      hardwareInfo:
        $ref: '#/definitions/jumpcloud.google_emm.HardwareInfo'
      memoryInfo:
        $ref: '#/definitions/jumpcloud.google_emm.MemoryInfo'
      networkInfo:
        $ref: '#/definitions/jumpcloud.google_emm.NetworkInfo'
      softwareInfo:
        $ref: '#/definitions/jumpcloud.google_emm.SoftwareInfo'
    type: object
  jumpcloud.google_emm.DeviceSettings:
    properties:
      adbEnabled:
        type: boolean
      developmentSettingsEnabled:
        type: boolean
      encryptionStatus:
        type: string
      isDeviceSecure:
        type: boolean
      isEncrypted:
        type: boolean
      unknownSourcesEnabled:
        type: boolean
      verifyAppsEnabled:
        type: boolean
    type: object
  jumpcloud.google_emm.DeviceStateInfo:
    properties:
      appliedDeviceState:
        type: string
      commonCriteriaModeInfo:
        $ref: '#/definitions/jumpcloud.google_emm.CommonCriteriaModeInfo'
      deviceSettings:
        $ref: '#/definitions/jumpcloud.google_emm.DeviceSettings'
      deviceState:
        type: string
      disabledReason:
        type: string
      lastPolicySyncTime:
        type: string
      lastStatusReportTime:
        type: string
      policyCompliant:
        type: boolean
      securityPosture:
        $ref: '#/definitions/jumpcloud.google_emm.SecurityPosture'
    type: object
  jumpcloud.google_emm.EMMEnrollmentInfo:
    properties:
      appliedPolicyName:
        type: string
      appliedPolicyVersion:
        format: int64
        type: integer
      enrollmentTime:
        type: string
      enrollmentType:
        type: string
      managementMode:
        type: string
      ownership:
        type: string
      policyName:
        type: string
    type: object
  jumpcloud.google_emm.EnrollmentToken:
    properties:
      createdBy:
        type: string
      createdWhere:
        type: string
      displayName:
        type: string
      enrollmentLink:
        type: string
      enrollmentType:
        type: string
      expirationTime:
        type: string
      id:
        type: string
      metadata:
        type: string
      name:
        type: string
      oneTimeOnly:
        type: boolean
      qrCodeImage:
        format: byte
        type: string
      value:
        type: string
    type: object
  jumpcloud.google_emm.EnrollmentType:
    default: WORK_PROFILE
    enum:
      - WORK_PROFILE
      - FULLY_MANAGED
      - DEDICATED
      - BYOD
      - COPE
    title: Identifies how device enrolled
    type: string
  jumpcloud.google_emm.Enterprise:
    properties:
      allowDeviceEnrollment:
        type: boolean
      contactEmail:
        description: not logging because it contains PII non-sensitive information.
        type: string
      createdAt:
        format: date-time
        type: string
      deviceGroupId:
        format: byte
        type: string
      displayName:
        type: string
      googleAuthenticationRequired:
        $ref: '#/definitions/jumpcloud.google_emm.GoogleAuthenticationRequired'
      name:
        type: string
      objectId:
        format: byte
        type: string
      organizationObjectId:
        format: byte
        type: string
    type: object
  jumpcloud.google_emm.Feature:
    default: SOFTWARE_MANAGEMENT
    enum:
      - SOFTWARE_MANAGEMENT
      - ZERO_TOUCH_CUSTOMER_MANAGEMENT
    type: string
  jumpcloud.google_emm.GoogleAuthenticationRequired:
    default: GOOGLE_AUTHENTICATION_REQUIRED_UNSPECIFIED
    enum:
      - GOOGLE_AUTHENTICATION_REQUIRED_UNSPECIFIED
      - NOT_REQUIRED
      - REQUIRED
    type: string
  jumpcloud.google_emm.HardwareInfo:
    properties:
      brand:
        type: string
      deviceBaseBandVersion:
        type: string
      hardware:
        type: string
      manufacturer:
        type: string
      model:
        type: string
      serialNumber:
        type: string
    type: object
  jumpcloud.google_emm.ListDevicesResponse:
    properties:
      count:
        format: int64
        type: integer
      devices:
        items:
          $ref: '#/definitions/jumpcloud.google_emm.DeviceData'
        type: array
    type: object
  jumpcloud.google_emm.ListEnrollmentTokensResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.google_emm.EnrollmentToken'
        type: array
      totalCount:
        format: int64
        type: integer
    type: object
  jumpcloud.google_emm.ListEnterprisesResponse:
    properties:
      count:
        format: int64
        type: integer
      enterprises:
        items:
          $ref: '#/definitions/jumpcloud.google_emm.Enterprise'
        type: array
    type: object
  jumpcloud.google_emm.MemoryInfo:
    properties:
      totalInternalStorage:
        format: int64
        type: integer
      totalRam:
        format: int64
        type: integer
    type: object
  jumpcloud.google_emm.NetworkInfo:
    properties:
      imei:
        description: Not logging as it contains sensitive information.
        type: string
      meid:
        description: Not logging as it contains sensitive information.
        type: string
      telephonyInfo:
        items:
          $ref: '#/definitions/jumpcloud.google_emm.TelephonyInfo'
        type: array
      wifiMacAddress:
        description: Not logging as it contains sensitive information.
        type: string
    type: object
  jumpcloud.google_emm.ProvisioningExtras:
    properties:
      allowOfflineProvisioning:
        type: boolean
      enableSystemApps:
        type: boolean
      keepScreenOn:
        type: boolean
      language:
        type: string
      skipEducationScreens:
        type: boolean
      timeZone:
        type: string
      useMobileNetworkForProvisioning:
        type: boolean
      wifiHiddenNetwork:
        type: boolean
      wifiPassword:
        type: string
      wifiSecurityType:
        $ref: '#/definitions/jumpcloud.google_emm.WifiSecurityType'
      wifiSsid:
        type: string
    type: object
  jumpcloud.google_emm.SecurityPosture:
    properties:
      devicePosture:
        type: string
    type: object
  jumpcloud.google_emm.SignupURL:
    properties:
      name:
        title: not logging because it contains sensitive information
        type: string
      url:
        title: not logging because it contains sensitive information
        type: string
    type: object
  jumpcloud.google_emm.SignupURLRequest:
    type: object
  jumpcloud.google_emm.SoftwareInfo:
    properties:
      androidBuildNumber:
        type: string
      androidBuildTime:
        type: string
      androidDevicePolicyVersionCode:
        format: int64
        type: integer
      androidVersion:
        type: string
      bootloaderVersion:
        type: string
      deviceBuildSignature:
        type: string
      deviceKernelVersion:
        type: string
      primaryLanguageCode:
        type: string
      securityPatchLevel:
        type: string
      systemUpdateInfo:
        $ref: '#/definitions/jumpcloud.google_emm.SystemUpdateInfo'
    type: object
  jumpcloud.google_emm.SystemUpdateInfo:
    properties:
      updateReceivedTime:
        type: string
      updateStatus:
        type: string
    type: object
  jumpcloud.google_emm.TelephonyInfo:
    properties:
      carrierName:
        description: Not logging as it contains sensitive information.
        type: string
      phoneNumber:
        description: Not logging as it contains sensitive information.
        type: string
    type: object
  jumpcloud.google_emm.WebToken:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  jumpcloud.google_emm.WifiSecurityType:
    default: NONE
    enum:
      - NONE
      - WPA
      - WEP
    type: string
  jumpcloud.healthmonitoring.CreateRuleRequest:
    description: CreateRuleRequest is the request message used to create a single rule.
    properties:
      rule:
        $ref: '#/definitions/jumpcloud.healthmonitoring.Rule'
    type: object
  jumpcloud.healthmonitoring.CreateRuleResponse:
    description: CreateRuleResponse is the response message to CreateRuleRequest.
    properties:
      rule:
        $ref: '#/definitions/jumpcloud.healthmonitoring.Rule'
    type: object
  jumpcloud.healthmonitoring.DeleteRuleResponse:
    description: DeleteRulesResponse is the response message to DeleteRulesRequest.
    type: object
  jumpcloud.healthmonitoring.DisplayType:
    default: DISPLAY_TYPE_UNSPECIFIED
    enum:
      - DISPLAY_TYPE_UNSPECIFIED
      - DISPLAY_TYPE_TEXT
      - DISPLAY_TYPE_SELECT
      - DISPLAY_TYPE_TEXTAREA
      - DISPLAY_TYPE_CHECKBOX
      - DISPLAY_TYPE_DATE
      - DISPLAY_TYPE_EMAIL
      - DISPLAY_TYPE_NUMBER
      - DISPLAY_TYPE_RADIO
      - DISPLAY_TYPE_SINGLELISTBOX
      - DISPLAY_TYPE_DOUBLELISTBOX
      - DISPLAY_TYPE_TABLE
      - DISPLAY_TYPE_FILE
      - DISPLAY_TYPE_SEGMENTEDBUTTON
      - DISPLAY_TYPE_COPYWELL
      - DISPLAY_TYPE_TIMEINPUT
      - DISPLAY_TYPE_DATEPICKERRANGE
      - DISPLAY_TYPE_MULTILIST
      - DISPLAY_TYPE_INPUTREADONLY
      - DISPLAY_TYPE_ICONSTATUS
      - DISPLAY_TYPE_ITEMLIST
      - DISPLAY_TYPE_EXISTING_VIOLATIONS
    type: string
  jumpcloud.healthmonitoring.GetRuleResponse:
    description: GetRuleResponse is the response to the GetRuleRequest.
    properties:
      rule:
        $ref: '#/definitions/jumpcloud.healthmonitoring.Rule'
    type: object
  jumpcloud.healthmonitoring.GetRuleTemplateResponse:
    description: GetRuleTemplateResponse is the response to the GetRuleTemplateRequest.
    properties:
      template:
        $ref: '#/definitions/jumpcloud.healthmonitoring.RuleTemplate'
    type: object
  jumpcloud.healthmonitoring.GetRulesStatsResponse:
    description: GetRulesStatsResponse is the response to the Get Rule Stats.
    properties:
      systemInsightsRequiredCount:
        description: number of rules which require system insights to be enabled.
        format: uint64
        type: integer
    type: object
  jumpcloud.healthmonitoring.ListRuleTemplatesResponse:
    description: ListRuleTemplatesResponse holds the list of rules requested via a ListRulesRequest.
    properties:
      count:
        format: uint64
        type: integer
      templates:
        items:
          $ref: '#/definitions/jumpcloud.healthmonitoring.RuleTemplate'
        type: array
    type: object
  jumpcloud.healthmonitoring.ListRulesResponse:
    description: ListRulesResponse holds the list of rules requested via a ListRulesRequest.
    properties:
      count:
        description: count specifies the number of rules returned in the response.
        format: uint64
        type: integer
      rules:
        description: An array of rule objects.
        items:
          $ref: '#/definitions/jumpcloud.healthmonitoring.Rule'
        type: array
    type: object
  jumpcloud.healthmonitoring.LogicalOperator:
    default: LOGICAL_OPERATOR_UNSPECIFIED
    description: |-
      LogicalOperator specifies logical operations.
      Used to combine rule conditions and filters in a logical manner.

       - LOGICAL_OPERATOR_UNSPECIFIED: No operator specified
       - LOGICAL_OPERATOR_AND: Combine operands using AND
       - LOGICAL_OPERATOR_OR: Combine operands using OR
    enum:
      - LOGICAL_OPERATOR_UNSPECIFIED
      - LOGICAL_OPERATOR_AND
      - LOGICAL_OPERATOR_OR
    type: string
  jumpcloud.healthmonitoring.Rule:
    description: Rule represents a rule resource.
    properties:
      category:
        $ref: '#/definitions/jumpcloud.healthmonitoring.RuleCategory'
        readOnly: true
      conditions:
        items:
          $ref: '#/definitions/jumpcloud.healthmonitoring.RuleCondition'
        type: array
      conditionsRelation:
        $ref: '#/definitions/jumpcloud.healthmonitoring.LogicalOperator'
      createdAt:
        format: date-time
        readOnly: true
        type: string
      createdBy:
        readOnly: true
        type: string
      createdByObjectId:
        format: byte
        readOnly: true
        title: specifies the ID of admin who created the rule
        type: string
      description:
        type: string
      detectPreExistingAnamolies:
        description: |2-
            Toggle to specify whether the alert should be produced for
            already existing anomalies when the rule is created
            or
            the rule applies to future violations.
        type: boolean
      eventFilters:
        items:
          $ref: '#/definitions/jumpcloud.healthmonitoring.RuleEventFilter'
        type: array
      eventType:
        description: |2-

            Supported values for event_type are
             policy_result
             command_result
             software_status_update
             user_create
             user_admin_granted
             user_group_admin_grant
             software_add
             software_remove
             device_inactive
             device_metrics_uptime_sample
             device_metrics_disk_usage_sample
             device_metrics_battery_sample.
        type: string
      lastUpdatedAt:
        format: date-time
        readOnly: true
        type: string
      lastUpdatedBy:
        readOnly: true
        type: string
      name:
        type: string
      notificationChannelObjectIds:
        description: |2-
            List of notification channels to which the notification should be sent
            when the rule is violated.
        items:
          format: byte
          type: string
        type: array
      notifyOnAcknowledgement:
        description: |2-
            Toggle to specify whether the notification should be produced for
            the acknowledgement of the alert.
        type: boolean
      notifyOnResolution:
        description: |2-
            Toggle to specify whether the notification should be produced for
            the resolution of the rule.
        type: boolean
      notifyOnViolation:
        description: |2-
            Toggle to specify whether the notification should be produced for
            the violation of the rule.
        type: boolean
      objectId:
        format: byte
        readOnly: true
        type: string
      organizationObjectId:
        format: byte
        readOnly: true
        type: string
      osFamily:
        $ref: '#/definitions/jumpcloud.healthmonitoring.RuleOsFamily'
        readOnly: true
      ruleType:
        $ref: '#/definitions/jumpcloud.healthmonitoring.RuleType'
      severity:
        $ref: '#/definitions/jumpcloud.healthmonitoring.RuleSeverity'
      status:
        $ref: '#/definitions/jumpcloud.healthmonitoring.RuleStatus'
      templateObjectId:
        description: |-
          Identifies the rule template which is used to render the Rule configuration
          parameters via GUI. It is still a required parameter even when GUI is not used
          for configuring the rule.
          Identify the rule type and corresponding
          Rule template to fill this parameter during rule creation / updation
          Templates can be fetched using GET on /api/v2/healthmonitoring/ruletemplates.
          Please use the name field in the response to select
          appropriate rule template object ID to be used for configuring the rule.
        format: byte
        type: string
    type: object
  jumpcloud.healthmonitoring.RuleCategory:
    default: RULE_CATEGORY_UNSPECIFIED
    enum:
      - RULE_CATEGORY_UNSPECIFIED
      - RULE_CATEGORY_DIRECTORY
      - RULE_CATEGORY_SYSTEM
      - RULE_CATEGORY_ADMIN
      - RULE_CATEGORY_ACCESS
      - RULE_CATEGORY_GENERAL
      - RULE_CATEGORY_CUSTOM
    title: |-
      RuleCategory specifies the category for a rule.
      Category specified in the rule decides the category of the produced alert.
      This categorization allows easier filtering and management of alerts."
    type: string
  jumpcloud.healthmonitoring.RuleCondition:
    properties:
      eventType:
        description: event_type specifies the event on which the rule's conditions have to be matched.
        type: string
      filters:
        description: |-
          filters specify how to filter event messages to match the conditions.
            Example:
            The example below is for matching policy_id in a rule with event_type: policy_result.
            Note that each rule has a specific set of filters supported.

              "filters":{
                "resource.policy_id": {
                  "match_type": "=",
                  "value_type": "string",
                  "value":"6661c734af8ad100010a2483",
                  "type":"mandatory",
                  "template_config_id":"664cbeded18e0095a00ba36a"
                }
              }.
              Match the "policy_id" field nested under the "resource" object of the incoming JSON message.
              This is an equal to match (specified in "match_type"),
              with the field type as string (specified in "value_type").
              The value to be matched is specified in "value". Supported values for match_type are
              string fields - "contains", "contains_any", "not_contains", "regex", "match_all"
              integer fields - ">", ">=", "<", "<="
        type: object
      objectId:
        format: byte
        type: string
    title: |-
      RuleCondition holds a single condition bound to a rule.
      Example:
         {
            "conditions" : [
               {
                  "event_type" : "policy_result",
                  "filters" : {
                     "resource.policy_id" : {
                        "match_type" : "=",
                        "template_config_id" : "664cbeded18e0095a00ba36a",
                        "type" : "mandatory",
                        "value" : "6661c734af8ad100010a2483",
                        "value_type" : "string"
                     }
                  }
               }
            ]
         }
         "eventType" specifies the event for which the conditions are applicable.
         "filters" specifies a set of filters using which the condition match has to be checked."
    type: object
  jumpcloud.healthmonitoring.RuleEventFilter:
    description: RuleEventFilter is the message that represents the event filter for a rule.
    properties:
      createdAt:
        format: date-time
        readOnly: true
        type: string
      eventTypes:
        items:
          type: string
        type: array
      objectId:
        format: byte
        readOnly: true
        type: string
      referenceFields:
        items:
          type: string
        type: array
      resolutionCondition:
        type: string
      updatedAt:
        format: date-time
        readOnly: true
        type: string
      violationCondition:
        type: string
    type: object
  jumpcloud.healthmonitoring.RuleOsFamily:
    default: RULE_OS_FAMILY_UNSPECIFIED
    description: |-
      RuleOsFamily specifies the OS family for a rule.
      Currently not being used.

       - RULE_OS_FAMILY_UNSPECIFIED: No OS family specified
       - RULE_OS_FAMILY_ALL: Rule applies to all supported OS families
       - RULE_OS_FAMILY_WINDOWS: Rule applies to windows OS family
       - RULE_OS_FAMILY_DARWIN: Rule applies to darwin OS family
       - RULE_OS_FAMILY_LINUX: Rule applies to linux OS family
    enum:
      - RULE_OS_FAMILY_UNSPECIFIED
      - RULE_OS_FAMILY_ALL
      - RULE_OS_FAMILY_WINDOWS
      - RULE_OS_FAMILY_DARWIN
      - RULE_OS_FAMILY_LINUX
    type: string
  jumpcloud.healthmonitoring.RuleSeverity:
    default: RULE_SEVERITY_UNSPECIFIED
    description: |-
      RuleSeverity specifies the severity of a rule.
      This severity decides the severity of the produced alert.
      This allows the admin to assign different severities to alerts and helps prioritise the resolution.

       - RULE_SEVERITY_UNSPECIFIED: No severity specified.
       - RULE_SEVERITY_LOW: Severity of Low.
       - RULE_SEVERITY_MEDIUM: Severity of Medium.
       - RULE_SEVERITY_HIGH: Severity of High.
    enum:
      - RULE_SEVERITY_UNSPECIFIED
      - RULE_SEVERITY_LOW
      - RULE_SEVERITY_MEDIUM
      - RULE_SEVERITY_HIGH
    type: string
  jumpcloud.healthmonitoring.RuleStatus:
    default: RULE_STATUS_UNSPECIFIED
    description: |-
      RuleStatus specifies the status of a rule.
      The status of the rule which can be either enabled or disabled.
      The rule is processed only in an enabled state.

       - RULE_STATUS_UNSPECIFIED: No status specified
       - RULE_STATUS_ENABLED: rule is enabled
       - RULE_STATUS_DISABLED: rule is disabled
    enum:
      - RULE_STATUS_UNSPECIFIED
      - RULE_STATUS_ENABLED
      - RULE_STATUS_DISABLED
    type: string
  jumpcloud.healthmonitoring.RuleTemplate:
    description: RuleTemplate represents a rule template object.
    properties:
      category:
        $ref: '#/definitions/jumpcloud.healthmonitoring.RuleCategory'
      configurations:
        items:
          $ref: '#/definitions/jumpcloud.healthmonitoring.RuleTemplateConfiguration'
        type: array
      createdAt:
        format: date-time
        type: string
      description:
        type: string
      frequency:
        format: int64
        type: integer
      name:
        type: string
      objectId:
        format: byte
        type: string
      osFamily:
        $ref: '#/definitions/jumpcloud.healthmonitoring.RuleOsFamily'
      siRequired:
        type: boolean
      status:
        type: string
      systemBindingRequired:
        type: boolean
      type:
        type: string
      unrestricted:
        type: boolean
      updatedAt:
        format: date-time
        type: string
      version:
        type: string
    type: object
  jumpcloud.healthmonitoring.RuleTemplateConfiguration:
    description: RuleTemplateConfiguration holds configuration information associated with rule template.
    properties:
      defaultValue:
        type: object
      displayOptions:
        type: object
      displayType:
        $ref: '#/definitions/jumpcloud.healthmonitoring.DisplayType'
      label:
        type: string
      name:
        type: string
      objectId:
        format: byte
        type: string
      position:
        format: int64
        type: integer
      readOnly:
        type: boolean
      required:
        type: boolean
      tooltip:
        type: object
      validators:
        type: object
    type: object
  jumpcloud.healthmonitoring.RuleType:
    default: RULE_TYPE_UNSPECIFIED
    description: |-
      RuleType specifies the type of rule.

       - RULE_TYPE_UNSPECIFIED: No rule type specified.
       - RULE_TYPE_TEMPLATE_BASED: Rule type is template based.
       - RULE_TYPE_EVENT_FILTER_BASED: Rule type is event filter based.
    enum:
      - RULE_TYPE_UNSPECIFIED
      - RULE_TYPE_TEMPLATE_BASED
      - RULE_TYPE_EVENT_FILTER_BASED
    type: string
  jumpcloud.healthmonitoring.UpdateRuleResponse:
    description: UpdateRuleResponse is the response message to UpdateRuleRequest.
    properties:
      rule:
        $ref: '#/definitions/jumpcloud.healthmonitoring.Rule'
    type: object
  jumpcloud.healthmonitoring.UpdateRuleStatusResponse:
    description: UpdateRuleStatusResponse is the response message to UpdateRuleStatusRequest.
    properties:
      rule:
        $ref: '#/definitions/jumpcloud.healthmonitoring.Rule'
    type: object
  jumpcloud.http.assets.Actor:
    description: Represents who performed an action on an asset
    properties:
      id:
        description: The actor's unique identifier
        example: 507f1f77bcf86cd799439011
        type: string
      name:
        description: The actor's name
        example: John Doe
        type: string
      type:
        description: The type of actor
        enum:
          - ACTOR_TYPE_USER
          - ACTOR_TYPE_SYSTEM
        example: ACTOR_TYPE_USER
        type: string
    required:
      - name
      - type
    type: object
  jumpcloud.http.assets.Asset:
    description: Generic asset representation with field values
    properties:
      fields:
        additionalProperties:
          $ref: '#/definitions/jumpcloud.http.assets.FieldValue'
        description: Asset field values organized by field label
        type: object
      id:
        description: The unique identifier of the asset
        example: 507f1f77bcf86cd799439011
        type: string
      jcSystemId:
        description: The JumpCloud system identifier associated with this asset (for device assets)
        example: 507f1f77bcf86cd799439012
        type: string
    required:
      - id
      - fields
    type: object
  jumpcloud.http.assets.AssetHistoryEvent:
    description: Represents a historical event that occurred on an asset
    properties:
      actionSource:
        description: Source of the action
        enum:
          - ACTION_SOURCE_MANUAL
          - ACTION_SOURCE_SYSTEM
          - ACTION_SOURCE_IMPORT
          - ACTION_SOURCE_API
        example: ACTION_SOURCE_MANUAL
        type: string
      actor:
        $ref: '#/definitions/jumpcloud.http.assets.Actor'
      changedFields:
        items:
          $ref: '#/definitions/jumpcloud.http.assets.FieldChange'
        type: array
      eventType:
        description: The type of history event
        enum:
          - ASSET_HISTORY_EVENT_TYPE_CREATE
          - ASSET_HISTORY_EVENT_TYPE_DELETE
          - ASSET_HISTORY_EVENT_TYPE_UPDATE_FIELDS
          - ASSET_HISTORY_EVENT_TYPE_UPDATE_STATUS
          - ASSET_HISTORY_EVENT_TYPE_UPDATE_LOCATION
          - ASSET_HISTORY_EVENT_TYPE_UPDATE_OWNER
          - ASSET_HISTORY_EVENT_TYPE_UPDATE_AGENT_STATUS
          - ASSET_HISTORY_EVENT_TYPE_UPDATE_MFA_STATUS
          - ASSET_HISTORY_EVENT_TYPE_UPDATE_MDM_STATUS
          - ASSET_HISTORY_EVENT_TYPE_NOTE
        example: ASSET_HISTORY_EVENT_TYPE_NOTE
        type: string
      note:
        description: Note content for note events
        example: Asset transferred to new department
        type: string
      occurredAt:
        description: When the event occurred
        example: '2024-01-15T10:30:00Z'
        format: date-time
        type: string
    required:
      - eventType
      - occurredAt
      - actor
      - actionSource
    type: object
  jumpcloud.http.assets.AssetHistoryResponse:
    description: Response containing paginated asset history events
    properties:
      results:
        description: Array of asset history events
        items:
          $ref: '#/definitions/jumpcloud.http.assets.AssetHistoryEvent'
        type: array
      totalCount:
        description: Total number of history events available (for pagination)
        example: 25
        format: int64
        type: integer
    required:
      - results
      - totalCount
    type: object
  jumpcloud.http.assets.AssetListResponse:
    description: Response containing a paginated list of assets
    properties:
      results:
        description: Array of assets
        items:
          $ref: '#/definitions/jumpcloud.http.assets.Asset'
        type: array
      totalCount:
        description: Total number of assets available (for pagination)
        example: 150
        format: int64
        type: integer
    required:
      - results
      - totalCount
    type: object
  jumpcloud.http.assets.BatchUpdateAccessoryAssetsRequest:
    description: Request payload for batch updating multiple accessory assets with a single field value
    properties:
      assetIds:
        description: Array of accessory asset IDs to update
        example:
          - 507f1f77bcf86cd799439011
          - 507f1f77bcf86cd799439012
        items:
          type: string
        type: array
      fieldValue:
        $ref: '#/definitions/jumpcloud.http.assets.BatchUpdateFieldValue'
    required:
      - assetIds
      - fieldValue
    type: object
  jumpcloud.http.assets.BatchUpdateAccessoryAssetsResponse:
    description: Response containing results of batch accessory asset update operation
    properties:
      notUpdatedAssetCount:
        description: Number of assets that could not be updated
        example: 0
        format: int32
        type: integer
      updatedAssetCount:
        description: Number of assets successfully updated
        example: 5
        format: int32
        type: integer
    required:
      - updatedAssetCount
      - notUpdatedAssetCount
    type: object
  jumpcloud.http.assets.BatchUpdateDeviceAssetsRequest:
    description: Request payload for batch updating multiple device assets with a single field value
    properties:
      assetIds:
        description: Array of device asset IDs to update
        example:
          - 507f1f77bcf86cd799439011
          - 507f1f77bcf86cd799439012
        items:
          type: string
        type: array
      fieldValue:
        $ref: '#/definitions/jumpcloud.http.assets.BatchUpdateFieldValue'
    required:
      - assetIds
      - fieldValue
    type: object
  jumpcloud.http.assets.BatchUpdateDeviceAssetsResponse:
    description: Response containing results of batch device asset update operation
    properties:
      notUpdatedAssetCount:
        description: Number of assets that could not be updated
        example: 0
        format: int32
        type: integer
      updatedAssetCount:
        description: Number of assets successfully updated
        example: 5
        format: int32
        type: integer
    required:
      - updatedAssetCount
      - notUpdatedAssetCount
    type: object
  jumpcloud.http.assets.BatchUpdateFieldValue:
    description: Field value for batch updating assets
    properties:
      label:
        description: The label of the field to update
        example: Status
        type: string
      value:
        $ref: '#/definitions/jumpcloud.http.assets.BatchUpdateReference'
    required:
      - label
      - value
    type: object
  jumpcloud.http.assets.BatchUpdateLocationAssetsRequest:
    description: Request payload for batch updating multiple location assets with a single field value
    properties:
      assetIds:
        description: Array of location asset IDs to update
        example:
          - 507f1f77bcf86cd799439011
          - 507f1f77bcf86cd799439012
        items:
          type: string
        type: array
      fieldValue:
        $ref: '#/definitions/jumpcloud.http.assets.BatchUpdateFieldValue'
    required:
      - assetIds
      - fieldValue
    type: object
  jumpcloud.http.assets.BatchUpdateLocationAssetsResponse:
    description: Response containing results of batch location asset update operation
    properties:
      notUpdatedAssetCount:
        description: Number of assets that could not be updated
        example: 0
        format: int32
        type: integer
      updatedAssetCount:
        description: Number of assets successfully updated
        example: 5
        format: int32
        type: integer
    required:
      - updatedAssetCount
      - notUpdatedAssetCount
    type: object
  jumpcloud.http.assets.BatchUpdateReference:
    description: Reference value for batch update operations
    properties:
      id:
        description: The reference ID
        example: 507f1f77bcf86cd799439013
        type: string
      name:
        description: The reference display name
        example: Active
        type: string
      type:
        description: The type of reference
        enum:
          - user
          - user_group
          - location
          - select
          - device_group
        example: select
        type: string
    required:
      - id
    type: object
  jumpcloud.http.assets.ChangeValue:
    description: Represents a field value in asset history (before/after change)
    properties:
      value:
        description: The actual value
    type: object
  jumpcloud.http.assets.CreateAssetHistoryNoteRequest:
    description: Request payload for creating a note entry in asset history
    properties:
      note:
        description: The content of the note to add to asset history
        example: Asset transferred to new department
        type: string
    required:
      - note
    type: object
  jumpcloud.http.assets.CreateAssetRequest:
    description: Request payload for creating a new asset of any type
    properties:
      fields:
        additionalProperties: true
        description: Asset field values organized by field label
        type: object
    required:
      - fields
    type: object
  jumpcloud.http.assets.DeviceAssetByJCSystemID:
    description: Device asset representation when retrieved by JumpCloud system ID
    properties:
      assetStatus:
        $ref: '#/definitions/jumpcloud.http.assets.Reference'
      deployedDate:
        description: The date the device was deployed
        example: '2024-01-15'
        format: date
        type: string
      id:
        description: The unique identifier of the device asset
        example: 507f1f77bcf86cd799439011
        type: string
      ownershipType:
        $ref: '#/definitions/jumpcloud.http.assets.Reference'
      purchaseCost:
        $ref: '#/definitions/jumpcloud.http.assets.Price'
      warrantyExpiredDate:
        description: The warranty expiration date
        example: '2025-12-31'
        format: date
        type: string
    required:
      - id
    type: object
  jumpcloud.http.assets.FieldChange:
    description: Represents a field that was changed in an asset update event
    properties:
      label:
        description: The field label that changed
        example: Status
        type: string
      newValue:
        $ref: '#/definitions/jumpcloud.http.assets.ChangeValue'
      oldValue:
        $ref: '#/definitions/jumpcloud.http.assets.ChangeValue'
    required:
      - label
    type: object
  jumpcloud.http.assets.FieldValue:
    description: Represents a field value with metadata indicating if it's editable
    properties:
      editable:
        description: Whether this field can be edited by the user
        example: true
        type: boolean
      value:
        description: The field value (type varies based on field configuration)
    required:
      - editable
      - value
    type: object
  jumpcloud.http.assets.Price:
    description: Monetary amount with currency
    properties:
      amount:
        description: The monetary amount
        example: 1299.99
        format: double
        type: number
      currency:
        description: The currency code (ISO 4217)
        example: USD
        type: string
    required:
      - amount
      - currency
    type: object
  jumpcloud.http.assets.Reference:
    description: 'A reference to another entity (user, group, location, etc.)'
    properties:
      id:
        description: The reference ID
        example: 507f1f77bcf86cd799439013
        type: string
      name:
        description: The reference display name
        example: Active
        type: string
      type:
        description: The type of reference
        enum:
          - user
          - user_group
          - location
          - select
          - device_group
        example: select
        type: string
    required:
      - id
      - name
    type: object
  jumpcloud.http.assets.UpdateAssetRequest:
    description: Request payload for updating an existing asset of any type
    properties:
      fields:
        additionalProperties: true
        description: Asset field values organized by field label to update
        type: object
    required:
      - fields
    type: object
  jumpcloud.http.assets.error:
    description: Error response containing details about what went wrong
    properties:
      message:
        description: Human-readable error message describing what went wrong
        type: string
    required:
      - message
    type: object
  jumpcloud.idm.AppliedOn:
    default: CREATE
    description: AppliedOn defines when the attribute mapping is applied.
    enum:
      - CREATE
      - UPDATE
    type: string
  jumpcloud.idm.Direction:
    default: UNSPECIFIED
    description: Direction defines the direction of the attribute mapping.
    enum:
      - UNSPECIFIED
      - EXPORT
      - IMPORT
    type: string
  jumpcloud.idm.IdmTranslationRulesInsertRequest:
    properties:
      appliedOn:
        description: 'Operations when this translation rule is applied (CREATE, UPDATE)'
        items:
          $ref: '#/definitions/jumpcloud.idm.AppliedOn'
        type: array
      destination:
        description: Destination field path where translated value will be stored
        type: string
      direction:
        $ref: '#/definitions/jumpcloud.idm.Direction'
        description: Direction of translation (EXPORT or IMPORT)
      source:
        description: Source field path or expression to be translated
        type: string
      sourceType:
        $ref: '#/definitions/jumpcloud.idm.SourceType'
        description: 'Type of the source expression (PATH, GOLANG_TEMPLATE, or CONSTANT)'
    type: object
  jumpcloud.idm.IdmTranslationRulesUpdateRequest:
    properties:
      appliedOn:
        description: Updated operations when this translation rule is applied
        items:
          $ref: '#/definitions/jumpcloud.idm.AppliedOn'
        type: array
      destination:
        description: Updated destination field path
        type: string
      source:
        description: Updated source field path or expression
        type: string
      sourceType:
        $ref: '#/definitions/jumpcloud.idm.SourceType'
        description: 'Updated source type (PATH, GOLANG_TEMPLATE, or CONSTANT)'
    title: |-
      NOTE: Do not use the same name for an RPC wrapper message and a nested message.
      Previously, both the wrapper and nested messages were named TranslationRulesUpdateRequest.
      This caused dynamic-gateway to misinterpret field mappings.
      As a workaround, the nested message was renamed to IdmTranslationRulesUpdateRequest in IDM,
      instead of changing the RPC wrapper message in SCIM. If dynamic-gateway is fixed, this may be reverted.
      See Slack: https://thejumpcloud.slack.com/archives/C03LAL5MCEL/p1749447300486039
    type: object
  jumpcloud.idm.SourceType:
    default: PATH
    description: SourceType defines the type of the source field in attribute mapping.
    enum:
      - PATH
      - GOLANG_TEMPLATE
      - CONSTANT
      - EXPR
    type: string
  jumpcloud.idm.TranslationRule:
    description: TranslationRule proto message will only be used for responses.
    properties:
      appliedOn:
        description: 'Operations when this translation rule is applied (CREATE, UPDATE)'
        items:
          $ref: '#/definitions/jumpcloud.idm.AppliedOn'
        type: array
      default:
        description: Indicates if this is a default translation rule created by jumpcloud
        type: boolean
      destination:
        description: Destination field path where translated value will be stored
        type: string
      direction:
        $ref: '#/definitions/jumpcloud.idm.Direction'
        description: Direction of translation (EXPORT or IMPORT)
      editable:
        description: Indicates if this translation rule can be modified
        type: boolean
      id:
        description: Unique identifier for the translation rule
        format: byte
        type: string
      required:
        description: Indicates if this translation is required
        type: boolean
      source:
        description: Source field path or expression to be translated
        type: string
      sourceType:
        $ref: '#/definitions/jumpcloud.idm.SourceType'
        description: 'Type of the source expression (PATH, GOLANG_TEMPLATE, or CONSTANT)'
    type: object
  jumpcloud.idm.TranslationRulesBulkResponse:
    properties:
      deletedTranslationRuleObjectIds:
        description: IDs of translation rules deleted
        format: hex
        items:
          format: byte
          type: string
        type: array
      insertedTranslationRules:
        description: The inserted translation rule
        items:
          $ref: '#/definitions/jumpcloud.idm.TranslationRule'
        type: array
    type: object
  jumpcloud.ingresso.CreateAccessRequestsRequest:
    properties:
      additionalAttributes:
        type: object
      applicationIntId:
        type: string
      expiry:
        format: date-time
        type: string
      operationId:
        type: string
      organizationObjectId:
        format: byte
        type: string
      remarks:
        type: string
      requestorId:
        type: string
      resourceId:
        type: string
      resourceType:
        type: string
    type: object
  jumpcloud.ingresso.CreateAccessRequestsResponse:
    properties:
      id:
        type: string
    type: object
  jumpcloud.ingresso.GetAccessRequestResponse:
    properties:
      accessId:
        type: string
      accessState:
        type: string
      additionalAttributes:
        format: byte
        type: string
      applicationIntId:
        type: string
      companyId:
        format: byte
        type: string
      createdBy:
        type: string
      duration:
        format: int32
        type: integer
      expiry:
        type: string
      id:
        format: int32
        type: integer
      jobId:
        format: byte
        type: string
      metadata:
        format: byte
        type: string
      onBehalfOfUserId:
        type: string
      operationId:
        type: string
      remarks:
        type: string
      requestorId:
        type: string
      resourceId:
        type: string
      resourceType:
        type: string
      tempGroupId:
        type: string
      updatedBy:
        type: string
      version:
        format: int32
        type: integer
    type: object
  jumpcloud.ingresso.RevokeAccessRequestsResponse:
    type: object
  jumpcloud.ingresso.UpdateAccessRequestsResponse:
    type: object
  jumpcloud.ingresso.UserApprovalRequestRequest:
    properties:
      id:
        type: string
      organizationObjectId:
        format: byte
        type: string
      remarks:
        type: string
      status:
        type: string
    type: object
  jumpcloud.ingresso.UserApprovalRequestResponse:
    type: object
  jumpcloud.insights.ColumnSettings:
    properties:
      fixed:
        items:
          type: string
        title: Specifies the fixed columns used in report-preview
        type: array
    type: object
  jumpcloud.insights.Configuration:
    properties:
      columnSettings:
        $ref: '#/definitions/jumpcloud.insights.ColumnSettings'
    type: object
  jumpcloud.insights.CreateReportViewRequest:
    properties:
      reportView:
        $ref: '#/definitions/jumpcloud.insights.ReportView'
    type: object
  jumpcloud.insights.ExportReportRequest:
    properties:
      exportType:
        $ref: '#/definitions/jumpcloud.insights.ExportType'
      notifyByEmail:
        type: boolean
      reportName:
        type: string
      searchRequest:
        $ref: '#/definitions/jumpcloud.search.SearchRequest'
    type: object
  jumpcloud.insights.ExportReportResponse:
    properties:
      downloadUrl:
        type: string
      status:
        $ref: '#/definitions/jumpcloud.insights.ExportStatus'
    type: object
  jumpcloud.insights.ExportStatus:
    default: pending
    enum:
      - pending
      - in_progress
      - completed
      - failed
    title: |-
      - PENDING: Specifies that the export is pending
       - IN_PROGRESS: Specifies that the export is processing and report will be sent to user's email
       - COMPLETED: Specifies that the export is completed and report is available for download
       - FAILED: Specifies that the export failed
    type: string
  jumpcloud.insights.ExportType:
    default: csv
    enum:
      - csv
      - json
    type: string
  jumpcloud.insights.ListReportTemplatesResponse:
    properties:
      reportTemplates:
        items:
          $ref: '#/definitions/jumpcloud.insights.ReportTemplate'
        type: array
      totalCount:
        format: int64
        type: integer
    type: object
  jumpcloud.insights.ListReportViewsResponse:
    properties:
      reportViews:
        items:
          $ref: '#/definitions/jumpcloud.insights.ReportView'
        type: array
      totalCount:
        format: int64
        type: integer
    type: object
  jumpcloud.insights.ReportTemplate:
    properties:
      configuration:
        $ref: '#/definitions/jumpcloud.insights.Configuration'
      description:
        type: string
      displayName:
        type: string
      id:
        format: byte
        type: string
      resources:
        items:
          readOnly: true
          type: string
        type: array
      searchRequest:
        $ref: '#/definitions/jumpcloud.search.SearchRequest'
    type: object
  jumpcloud.insights.ReportTemplateResponse:
    properties:
      reportTemplate:
        $ref: '#/definitions/jumpcloud.insights.ReportTemplate'
    type: object
  jumpcloud.insights.ReportView:
    properties:
      configuration:
        $ref: '#/definitions/jumpcloud.insights.Configuration'
      createdAt:
        format: date-time
        readOnly: true
        title: Specifies the time when this report was created
        type: string
      createdBy:
        readOnly: true
        title: Specifies the email of the user who created this report
        type: string
      description:
        type: string
      displayName:
        type: string
      id:
        format: byte
        type: string
      resources:
        items:
          readOnly: true
          type: string
        title: Specifies the list of objects referred by this report
        type: array
      searchRequest:
        $ref: '#/definitions/jumpcloud.search.SearchRequest'
      updatedAt:
        format: date-time
        readOnly: true
        title: Specifies the time when this report was last updated
        type: string
      updatedBy:
        readOnly: true
        title: Specifies the email of the user who updated this report last
        type: string
      updatedBySource:
        $ref: '#/definitions/jumpcloud.insights.Source'
    type: object
  jumpcloud.insights.ReportViewResponse:
    properties:
      reportView:
        $ref: '#/definitions/jumpcloud.insights.ReportView'
    type: object
  jumpcloud.insights.Source:
    default: unspecified
    enum:
      - unspecified
      - api
      - ui
      - ai
    title: Indicates if the report was updated through the API or UI
    type: string
  jumpcloud.microsoft_mdm.DownloadConfigFilesRequest:
    type: object
  jumpcloud.msp.GetDetailsResponse:
    properties:
      assignedLicenses:
        format: int64
        type: integer
      contractType:
        type: string
      hasContract:
        type: boolean
      products:
        items:
          $ref: '#/definitions/jumpcloud.msp.Product'
        type: array
    type: object
  jumpcloud.msp.Product:
    properties:
      capabilities:
        items:
          type: string
        type: array
      includedLicenses:
        format: int64
        type: integer
      name:
        type: string
      purchasedLicenses:
        format: int64
        type: integer
    type: object
  jumpcloud.notifications.Channel:
    description: Channel represents the notification channel.
    properties:
      config:
        $ref: '#/definitions/jumpcloud.notifications.ChannelTypeConfig'
      createdAt:
        format: date-time
        readOnly: true
        type: string
      createdBy:
        format: byte
        readOnly: true
        type: string
      description:
        description: represents the description of the channel.
        type: string
      enabled:
        description: represents the status of the channel.
        type: boolean
      name:
        description: represents the name of the channel.
        type: string
      objectId:
        description: 'Channel represents a medium through which notifications are sent, such as email notifications.'
        format: byte
        readOnly: true
        type: string
      organizationObjectId:
        format: byte
        readOnly: true
        type: string
      type:
        $ref: '#/definitions/jumpcloud.notifications.ChannelType'
      updatedAt:
        format: date-time
        readOnly: true
        type: string
      updatedBy:
        format: byte
        readOnly: true
        type: string
    type: object
  jumpcloud.notifications.ChannelType:
    default: CHANNEL_TYPE_UNSPECIFIED
    description: |-
      ChannelType represents the type of the channel.

       - CHANNEL_TYPE_UNSPECIFIED: CHANNEL_TYPE_UNSPECIFIED represents an invalid channel type.
       - CHANNEL_TYPE_EMAIL: CHANNEL_TYPE_EMAIL represents the email channel type.
       - CHANNEL_TYPE_WEBHOOK: CHANNEL_TYPE_WEBHOOK represents the webhook channel type.
       - CHANNEL_TYPE_SLACK: CHANNEL_TYPE_SLACK represents the slack channel type.
    enum:
      - CHANNEL_TYPE_UNSPECIFIED
      - CHANNEL_TYPE_EMAIL
      - CHANNEL_TYPE_WEBHOOK
      - CHANNEL_TYPE_SLACK
    type: string
  jumpcloud.notifications.ChannelTypeConfig:
    description: ChannelTypeConfig represents the configuration for the channel type.
    properties:
      email:
        $ref: '#/definitions/jumpcloud.notifications.EmailRecipientConfig'
      slack:
        $ref: '#/definitions/jumpcloud.notifications.SlackConfig'
      webhook:
        $ref: '#/definitions/jumpcloud.notifications.WebhookConfig'
    type: object
  jumpcloud.notifications.CreateChannelRequest:
    description: CreateChannelRequest represents the request to create a channel.
    properties:
      channel:
        $ref: '#/definitions/jumpcloud.notifications.Channel'
    type: object
  jumpcloud.notifications.CreateChannelResponse:
    description: CreateChannelResponse represents the response for creating a channel.
    properties:
      channel:
        $ref: '#/definitions/jumpcloud.notifications.Channel'
    type: object
  jumpcloud.notifications.CustomHeaders:
    description: CustomHeaders represents the custom headers for the webhook.
    properties:
      key:
        type: string
      masked:
        type: boolean
      objectId:
        format: byte
        type: string
      value:
        type: string
    type: object
  jumpcloud.notifications.EmailRecipientConfig:
    description: EmailRecipientConfig represents the email recipient.
    properties:
      role:
        items:
          $ref: '#/definitions/jumpcloud.notifications.EmailRecipientConfigRole'
        type: array
      user:
        items:
          $ref: '#/definitions/jumpcloud.notifications.EmailRecipientConfigUser'
        type: array
    type: object
  jumpcloud.notifications.EmailRecipientConfigRole:
    description: EmailRecipientConfigRole represents the details of email recipient config role.
    properties:
      objectId:
        description: represents the role identifier.
        format: byte
        type: string
      roleObjectId:
        description: represents the role object identifier.
        format: byte
        type: string
    type: object
  jumpcloud.notifications.EmailRecipientConfigUser:
    description: EmailRecipientConfigUser represents the details of email recipient config user.
    properties:
      address:
        description: represents the recipient email address.
        type: string
      name:
        description: represents the recipient name.
        type: string
      objectId:
        description: represents the address identifier.
        format: byte
        type: string
    type: object
  jumpcloud.notifications.GetChannelResponse:
    description: GetChannelResponse represents the response for getting a channel.
    properties:
      channel:
        $ref: '#/definitions/jumpcloud.notifications.Channel'
    type: object
  jumpcloud.notifications.ListChannelsResponse:
    description: ListChannelResponse holds the list of channels requested via a ListChannelsRequest.
    properties:
      channels:
        description: represents the list of channels.
        items:
          $ref: '#/definitions/jumpcloud.notifications.Channel'
        type: array
      count:
        description: represents the count of channels.
        format: uint64
        type: integer
    type: object
  jumpcloud.notifications.ListWebhookChannelsResponse:
    description: ListWebhookChannelsResponse holds the list of webhook channels requested via a ListWebhookChannelsRequest.
    properties:
      channels:
        description: represents the list of webhook channels.
        items:
          $ref: '#/definitions/jumpcloud.notifications.WebhookChannel'
        type: array
      count:
        description: represents the count of channels.
        format: uint64
        type: integer
    type: object
  jumpcloud.notifications.MaskedURLPortion:
    description: MaskedURLPortion represents the masked portion of the URL.
    properties:
      key:
        type: string
      objectId:
        format: byte
        type: string
      value:
        type: string
    type: object
  jumpcloud.notifications.PostSaveWebhookRequest:
    description: PostSaveWebhookRequest represents the request to test a webhook after saving.
    properties:
      authPassword:
        type: string
      authToken:
        type: string
      authType:
        $ref: '#/definitions/jumpcloud.notifications.WebhookAuthType'
      authUsername:
        type: string
      customHeaders:
        items:
          $ref: '#/definitions/jumpcloud.notifications.CustomHeaders'
        type: array
      maskedUrlPortion:
        items:
          $ref: '#/definitions/jumpcloud.notifications.MaskedURLPortion'
        type: array
      objectId:
        format: byte
        type: string
      sslVerification:
        type: boolean
      url:
        type: string
      urlMasked:
        type: boolean
    type: object
  jumpcloud.notifications.PreSaveWebhookRequest:
    description: PreSaveWebhookRequest represents the request to test a webhook before saving.
    properties:
      authPassword:
        type: string
      authToken:
        type: string
      authType:
        $ref: '#/definitions/jumpcloud.notifications.WebhookAuthType'
      authUsername:
        type: string
      customHeaders:
        items:
          $ref: '#/definitions/jumpcloud.notifications.CustomHeaders'
        type: array
      sslVerification:
        type: boolean
      url:
        type: string
      urlMasked:
        type: boolean
    type: object
  jumpcloud.notifications.SlackChannelConfig:
    properties:
      objectId:
        format: byte
        type: string
      slackChannelId:
        description: represents the slack channel identifier.
        type: string
      slackTeamId:
        description: represents the slack team identifier.
        type: string
    type: object
  jumpcloud.notifications.SlackConfig:
    description: SlackConfig represents the slack notification config.
    properties:
      slackChannel:
        description: represents the slack channel ID where notifications will be sent.
        items:
          $ref: '#/definitions/jumpcloud.notifications.SlackChannelConfig'
        type: array
    type: object
  jumpcloud.notifications.UpdateChannelResponse:
    description: UpdateChannelResponse represents the response for updating a channel.
    properties:
      channel:
        $ref: '#/definitions/jumpcloud.notifications.Channel'
    type: object
  jumpcloud.notifications.WebhookAuthType:
    default: WEBHOOK_AUTH_TYPE_UNSPECIFIED
    description: |-
      WebhookAuthType represents the authentication type for the webhook.

       - WEBHOOK_AUTH_TYPE_UNSPECIFIED: WEBHOOK_AUTH_TYPE_UNSPECIFIED represents an invalid authentication type.
       - WEBHOOK_AUTH_TYPE_BASIC: WEBHOOK_AUTH_TYPE_BASIC represents basic authentication.
       - WEBHOOK_AUTH_TYPE_BEARER: WEBHOOK_AUTH_TYPE_BEARER represents bearer token authentication.
    enum:
      - WEBHOOK_AUTH_TYPE_UNSPECIFIED
      - WEBHOOK_AUTH_TYPE_BASIC
      - WEBHOOK_AUTH_TYPE_BEARER
    type: string
  jumpcloud.notifications.WebhookChannel:
    description: WebhookChannel represents the webhook channel details needed for listing.
    properties:
      enabled:
        readOnly: true
        type: boolean
      lastResponseStatusCode:
        format: int32
        readOnly: true
        type: integer
      lastResponseTimeStamp:
        format: date-time
        readOnly: true
        type: string
      name:
        readOnly: true
        type: string
      objectId:
        format: byte
        readOnly: true
        type: string
      organizationObjectId:
        format: byte
        readOnly: true
        type: string
      successPercentage:
        format: int32
        readOnly: true
        type: integer
      totalRequests:
        format: int32
        readOnly: true
        type: integer
    type: object
  jumpcloud.notifications.WebhookConfig:
    description: WebhookConfig represents the webhook configuration.
    properties:
      authPassword:
        type: string
      authToken:
        type: string
      authType:
        $ref: '#/definitions/jumpcloud.notifications.WebhookAuthType'
      authUsername:
        type: string
      customHeaders:
        items:
          $ref: '#/definitions/jumpcloud.notifications.CustomHeaders'
        type: array
      maskedUrlPortion:
        items:
          $ref: '#/definitions/jumpcloud.notifications.MaskedURLPortion'
        type: array
      objectId:
        description: represents the webhook identifier.
        format: byte
        type: string
      sslVerification:
        type: boolean
      url:
        description: represents the webhook url.
        type: string
      urlMasked:
        type: boolean
    type: object
  jumpcloud.notifications.WebhookTestRequest:
    properties:
      organizationObjectId:
        format: byte
        type: string
      postSave:
        $ref: '#/definitions/jumpcloud.notifications.PostSaveWebhookRequest'
      preSave:
        $ref: '#/definitions/jumpcloud.notifications.PreSaveWebhookRequest'
    type: object
  jumpcloud.notifications.WebhookTestResponse:
    properties:
      responseMessage:
        type: string
      statusCode:
        format: int32
        type: integer
    type: object
  jumpcloud.password.BatchDeleteRequest:
    properties:
      objectIds:
        items:
          format: byte
          type: string
        type: array
      organizationObjectId:
        format: byte
        type: string
    type: object
  jumpcloud.password.GroupResponse:
    properties:
      groupId:
        format: byte
        type: string
      name:
        type: string
    type: object
  jumpcloud.password.InsertRequest:
    properties:
      groupIds:
        items:
          format: byte
          type: string
        type: array
      organizationObjectId:
        format: byte
        type: string
      policy:
        $ref: '#/definitions/jumpcloud.password.PasswordPolicy'
    type: object
  jumpcloud.password.PasswordPolicy:
    properties:
      allowUnenrolledMFAPasswordReset:
        type: boolean
      allowUsernameSubstring:
        type: boolean
      daysAfterExpirationToSelfRecover:
        format: int32
        type: integer
      daysBeforeExpirationToForceReset:
        format: int32
        type: integer
      default:
        type: boolean
      description:
        type: string
      disallowCommonlyUsedPasswords:
        type: boolean
      disallowSequentialOrRepetitiveChars:
        type: boolean
      effectiveDate:
        format: date-time
        type: string
      enableDaysAfterExpirationToSelfRecover:
        type: boolean
      enableDaysBeforeExpirationToForceReset:
        type: boolean
      enableLockoutTimeInSeconds:
        type: boolean
      enableMaxHistory:
        type: boolean
      enableMaxLoginAttempts:
        type: boolean
      enableMinChangePeriodInDays:
        type: boolean
      enableMinLength:
        type: boolean
      enablePasswordExpirationInDays:
        type: boolean
      enableRecoveryEmail:
        type: boolean
      enableResetLockoutCounter:
        type: boolean
      lockoutTimeInSeconds:
        format: int32
        type: integer
      maxHistory:
        format: int32
        type: integer
      maxLoginAttempts:
        format: int32
        type: integer
      minChangePeriodInDays:
        format: int32
        type: integer
      minLength:
        format: int32
        type: integer
      name:
        type: string
      needsLowercase:
        type: boolean
      needsNumeric:
        type: boolean
      needsSymbolic:
        type: boolean
      needsUppercase:
        type: boolean
      passwordExpirationInDays:
        format: int32
        type: integer
      precedence:
        format: int32
        type: integer
      resetLockoutCounterMinutes:
        format: int32
        type: integer
    type: object
  jumpcloud.password.PolicyPrecedence:
    properties:
      objectId:
        format: byte
        type: string
      precedence:
        format: int32
        type: integer
    type: object
  jumpcloud.password.Response:
    properties:
      cached:
        type: boolean
      groups:
        items:
          $ref: '#/definitions/jumpcloud.password.GroupResponse'
        type: array
      objectId:
        format: byte
        type: string
      policy:
        $ref: '#/definitions/jumpcloud.password.PasswordPolicy'
    type: object
  jumpcloud.pwm.App:
    properties:
      appVersion:
        type: string
      osId:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.AppFolder:
    properties:
      appVersion:
        type: string
      osId:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.AppVersion:
    properties:
      usersCount:
        format: int32
        type: integer
      version:
        type: string
    type: object
  jumpcloud.pwm.Backup:
    properties:
      backupKeyUuid:
        type: string
      createdAt:
        type: string
      encryptionKey:
        title: Base64 encoded
        type: string
      formatVersion:
        type: string
      id:
        type: string
      keyHash:
        type: string
      totalCount:
        format: int32
        type: integer
      updatedAt:
        type: string
      userUuid:
        type: string
    type: object
  jumpcloud.pwm.BackupKey:
    properties:
      active:
        type: boolean
      companyId:
        title: 'TODO(gateway): what do we want to call this in the API?'
        type: string
      createdAt:
        type: string
      createdBy:
        type: string
      id:
        type: string
      name:
        type: string
      publicKey:
        type: string
      updatedAt:
        type: string
    type: object
  jumpcloud.pwm.BackupRestore:
    properties:
      backupUuid:
        type: string
      createdAt:
        type: string
      deviceUuid:
        type: string
      id:
        type: string
      status:
        $ref: '#/definitions/jumpcloud.pwm.Status'
      updatedAt:
        type: string
    type: object
  jumpcloud.pwm.BatchDeleteSharedFoldersRequest:
    properties:
      folderIds:
        items:
          type: string
        type: array
    type: object
  jumpcloud.pwm.CloudBackupRestore:
    properties:
      approved:
        format: int32
        type: integer
      requested:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.Device:
    properties:
      appVersion:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      osName:
        type: string
      publicKey:
        type: string
      updatedAt:
        type: string
      userUuid:
        type: string
    type: object
  jumpcloud.pwm.Folder:
    properties:
      compromisedPasswords:
        format: int32
        type: integer
      createdAt:
        type: string
      description:
        type: string
      itemsInFolder:
        format: int32
        type: integer
      maxLastSync:
        type: string
      name:
        type: string
      oldPasswords:
        format: int32
        type: integer
      passwordsCount:
        format: int32
        type: integer
      passwordsScore:
        format: double
        type: number
      reusedPasswords:
        format: int32
        type: integer
      scoreUpdatedAt:
        type: string
      usersWithAccess:
        format: int32
        type: integer
      uuid:
        type: string
      weakPasswords:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.FolderGroup:
    properties:
      accessLevelId:
        type: string
      accessLevelName:
        type: string
      description:
        type: string
      externalId:
        type: string
      id:
        type: string
      name:
        type: string
      usersCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.FolderInList:
    properties:
      createdAt:
        type: string
      itemsInFolder:
        format: int32
        type: integer
      name:
        type: string
      passwordsCount:
        format: int32
        type: integer
      passwordsScore:
        format: double
        type: number
      scoreUpdatedAt:
        type: string
      usersWithAccess:
        format: int32
        type: integer
      uuid:
        type: string
    type: object
  jumpcloud.pwm.FolderUser:
    properties:
      accessLevelId:
        type: string
      accessLevelName:
        type: string
      apps:
        items:
          $ref: '#/definitions/jumpcloud.pwm.AppFolder'
        type: array
      email:
        type: string
      employeeUuid:
        type: string
      externalId:
        type: string
      id:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/jumpcloud.pwm.Source'
      status:
        type: string
      username:
        type: string
    type: object
  jumpcloud.pwm.FoldersPolicyResponse:
    properties:
      id:
        type: string
      shareFolders:
        $ref: '#/definitions/jumpcloud.pwm.ShareFolders'
      updatedAt:
        type: string
      updatedBy:
        type: string
    type: object
  jumpcloud.pwm.GetAllUsersResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.UserInfo'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.GetAppVersionsListResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.AppVersion'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.GetMetadataResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/jumpcloud.pwm.Items'
        type: array
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.ItemMetadata'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.GetRolesResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.Role'
        type: array
    type: object
  jumpcloud.pwm.GetSharedFolderGroupsResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.FolderGroup'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.GetSharedFolderUsersResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.FolderUser'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.GetSharedFoldersPerUserResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.UsersFolder'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.GetSharedFoldersResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.FolderInList'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.GetUserDetailsByIdResponse:
    properties:
      apps:
        items:
          $ref: '#/definitions/jumpcloud.pwm.App'
        type: array
      cloudBackupRestores:
        $ref: '#/definitions/jumpcloud.pwm.CloudBackupRestore'
      compromisedPasswords:
        format: int32
        type: integer
      createdAt:
        type: string
      email:
        type: string
      employeeUuid:
        type: string
      externalId:
        type: string
      groups:
        items:
          $ref: '#/definitions/jumpcloud.pwm.Group'
        type: array
      id:
        type: string
      itemsCount:
        format: int32
        type: integer
      name:
        type: string
      oldPasswords:
        format: int32
        type: integer
      passwordsCount:
        format: int32
        type: integer
      passwordsScore:
        format: double
        type: number
      reusedPasswords:
        format: int32
        type: integer
      scoreUpdatedAt:
        type: string
      status:
        type: string
      username:
        type: string
      weakPasswords:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.Group:
    properties:
      createdAt:
        type: string
      displayName:
        type: string
      externalId:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
      uuid:
        type: string
    type: object
  jumpcloud.pwm.GroupSource:
    properties:
      externalId:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  jumpcloud.pwm.ItemMetadata:
    properties:
      dateCreated:
        type: string
      dateUpdated:
        type: string
      field1:
        type: string
      field2:
        type: string
      folderUuid:
        type: string
      id:
        type: string
      itemUuid:
        type: string
      nickname:
        type: string
      type:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.Items:
    properties:
      count:
        format: int32
        type: integer
      type:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.ListBackupKeysResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.BackupKey'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.ListBackupRestoresResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.BackupRestore'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.ListBackupsResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.Backup'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.ListDevicesResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.Device'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.ListSelectedGroupsResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.SelectedGroup'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.ListSelectedUsersResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.pwm.SelectedUser'
        type: array
      totalCount:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.MainOverviewResponse:
    properties:
      compromisedPasswords:
        format: int32
        type: integer
      devices:
        items:
          $ref: '#/definitions/jumpcloud.pwm.OverviewDevice'
        type: array
      enrolledGroups:
        format: int32
        type: integer
      oldPasswords:
        format: int32
        type: integer
      passwordsCount:
        format: int32
        type: integer
      passwordsScore:
        format: double
        type: number
      pendingInvites:
        format: int32
        type: integer
      sharedFolders:
        format: int32
        type: integer
      totalUsers:
        format: int32
        type: integer
      weakPasswords:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.OverviewDevice:
    properties:
      count:
        format: int32
        type: integer
      id:
        format: int32
        type: integer
      name:
        type: string
    type: object
  jumpcloud.pwm.PermissionAccess:
    properties:
      accessLevelId:
        type: string
      id:
        type: string
    type: object
  jumpcloud.pwm.PoliciesResponse:
    properties:
      disableExport:
        type: boolean
      id:
        type: string
    type: object
  jumpcloud.pwm.Role:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  jumpcloud.pwm.SelectedGroup:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  jumpcloud.pwm.SelectedUser:
    properties:
      id:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  jumpcloud.pwm.ShareFolders:
    default: UNSPECIFIED
    enum:
      - UNSPECIFIED
      - AllUsers
      - Specific
      - AllExcept
    type: string
  jumpcloud.pwm.SharedFolder:
    properties:
      folderId:
        type: string
    type: object
  jumpcloud.pwm.SharedFolderPermission:
    properties:
      addition:
        items:
          $ref: '#/definitions/jumpcloud.pwm.PermissionAccess'
        type: array
      deletion:
        items:
          type: string
        type: array
      update:
        items:
          $ref: '#/definitions/jumpcloud.pwm.PermissionAccess'
        type: array
    type: object
  jumpcloud.pwm.Source:
    properties:
      direct:
        type: boolean
      groups:
        items:
          $ref: '#/definitions/jumpcloud.pwm.GroupSource'
        type: array
    type: object
  jumpcloud.pwm.Status:
    default: STATUS_UNSPECIFIED
    enum:
      - STATUS_UNSPECIFIED
      - REQUESTED
      - APPROVED
      - REJECTED
      - CANCELLED
      - RESTORED
    type: string
  jumpcloud.pwm.UserInfo:
    properties:
      apps:
        items:
          $ref: '#/definitions/jumpcloud.pwm.App'
        type: array
      cloudBackupRestores:
        $ref: '#/definitions/jumpcloud.pwm.CloudBackupRestore'
      email:
        type: string
      employeeUuid:
        type: string
      externalId:
        type: string
      groups:
        items:
          $ref: '#/definitions/jumpcloud.pwm.Group'
        type: array
      id:
        type: string
      itemsCount:
        format: int32
        type: integer
      name:
        type: string
      oldPasswords:
        format: int32
        type: integer
      passwordsCount:
        format: int32
        type: integer
      passwordsScore:
        format: double
        type: number
      scoreUpdatedAt:
        type: string
      status:
        type: string
      username:
        type: string
      weakPasswords:
        format: int32
        type: integer
    type: object
  jumpcloud.pwm.UsersFolder:
    properties:
      accessLevelId:
        type: string
      accessLevelName:
        type: string
      createdAt:
        type: string
      id:
        type: string
      itemsInFolder:
        format: int32
        type: integer
      name:
        type: string
      passwordsScore:
        format: double
        type: number
      scoreUpdatedAt:
        type: string
      source:
        $ref: '#/definitions/jumpcloud.pwm.Source'
      usersWithAccess:
        format: int32
        type: integer
    type: object
  jumpcloud.search.Function:
    default: function_unknown
    enum:
      - function_unknown
      - count
      - avg
      - max
      - min
      - sum
      - count_unique
    type: string
  jumpcloud.search.MetadataContextEntry:
    description: MetadataContextEntry represents a single key-value pair for additional metadata context.
    properties:
      key:
        title: The context key
        type: string
      value:
        title: The context value
        type: string
    type: object
  jumpcloud.search.PaginationParams:
    description: Parameters for controlling pagination of search results.
    properties:
      offset:
        description: |-
          Zero-based index of the first result to return.
          For example: 0 returns the first page, 100 returns the second page when page_size=100.
        format: int32
        type: integer
      pageSize:
        description: |-
          Number of results to return per page.
          If not specified, uses server default (typically 50-100 items).
        format: int32
        type: integer
    type: object
  jumpcloud.search.SearchPurpose:
    default: unspecified
    enum:
      - unspecified
      - reporting
      - health_monitoring
      - alerting
      - audit
      - troubleshooting
      - user_initiated
      - scheduled
      - export
      - analytics
      - automation
      - data_validation
    title: Define SearchPurpose enum for more structured categorization
    type: string
  jumpcloud.search.SearchRequest:
    properties:
      aggregations:
        items:
          $ref: '#/definitions/jumpcloud.search.SearchRequestAggregation'
        type: array
      cacheToken:
        title: 'Optional: Token for retrieving data from a previously cached result set'
        type: string
        x-nullable: true
      fields:
        $ref: '#/definitions/jumpcloud.search.SearchRequestFields'
      filters:
        items:
          $ref: '#/definitions/jumpcloud.search.SearchRequestFilter'
        type: array
      limit:
        description: |-
          Maximum number of rows (inclusive) to return in the objects.  Note that there is an implicit limit enforced always
          in the external API.
        format: int32
        type: integer
      metadata:
        $ref: '#/definitions/jumpcloud.search.SearchRequestMetadata'
        title: 'Optional: Metadata about the source and context of this search request'
        x-nullable: true
      pagination:
        $ref: '#/definitions/jumpcloud.search.PaginationParams'
        x-nullable: true
      requestCache:
        title: 'Optional: If true, cache the full result set of this query'
        type: boolean
      sort:
        items:
          $ref: '#/definitions/jumpcloud.search.SearchRequestSort'
        type: array
    type: object
  jumpcloud.search.SearchRequestAggregation:
    properties:
      field:
        description: |-
          This is a field on an object.  It should always be in the form of <objectName>.<fieldName>  This will be case
          insensitive, and will be cast to lowercase always.
        items:
          type: string
        type: array
      function:
        $ref: '#/definitions/jumpcloud.search.Function'
      name:
        type: string
    type: object
  jumpcloud.search.SearchRequestFields:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
  jumpcloud.search.SearchRequestFilter:
    description: A filter for a search query.
    properties:
      field:
        description: |-
          This is a field on an object.  It should always be in the form of <objectName>.<fieldName>  This will be case
          insensitive, and will be cast to lowercase always.
        type: string
        x-nullable: true
      filters:
        description: |-
          Only allowed when operation is 'and'/'or'.  This allows for logical groupings of sub-filters provided in this
          field's array.
        items:
          $ref: '#/definitions/jumpcloud.search.SearchRequestFilter'
        type: array
      operation:
        $ref: '#/definitions/jumpcloud.search.SearchRequestFilter.Operation'
      query:
        $ref: '#/definitions/jumpcloud.search.SearchRequest'
        description: Sub-query to be used as the operand for 'in' and 'not_in' operations.
      unit:
        type: string
        x-nullable: true
      value:
        description: |-
          Static value to be compared against. For values that will need to be compared as a datetime object, this should be
          provided as an ISO8601 format string with no offset (UTC). This is made optional so that
          the client can omit this field on AND/OR filters.
    type: object
  jumpcloud.search.SearchRequestFilter.Operation:
    default: operation_unknown
    description: |-
      Filter operation to be applied:
      and - Provides logical 'and' groupings of all elements provided in the `filters` array (all sub-filter criteria
         must be satisfied).
      or - Provides logical 'or' groupings of all elements provided in the `filters` array (any sub-filter criteria can
         be satisfied).
      equals - Compares `field` with `value` for a // match.  Case insensitive.
      not_equals - Compares `field` with `value` for an exact non-match.  Case insensitive.
      greater_than - Checks if `field` is greater numerically than static `value` (non-inclusive).  Works for numbers and
         datetime types.
      less_than - Checks if `field` is less than static `value` (non-inclusive).  Works for numbers and datetime types.
      starts_with - Checks if `field` starts with static `value`.  Case insensitive.  Only works for string types.
      ends_with - Checks if `field` ends with static `value`.  Case insensitive.  Only works for string types.
      contains - Checks if `field` has the static `value` as its substring. Case insensitive. Only works for string types.
      not_contains - Checks if `field` does not have the static `value` as its substring. Case insensitive. Only works for string types.
      in - Checks if `field` is in the static `value` array. Works with strings (case insensitive), numbers, and datetime types.
      not_in - Checks if `field` is not in the static `value` array. Works with strings (case insensitive), numbers, and datetime types.
      greater_than_or_equals - Checks if `field` is greater than or equal to static `value`.  Works for numbers and datetime types.
      less_than_or_equals - Checks if `field` is less than or equal to static `value`.  Works for numbers and datetime types.
      is_null - Checks if `field` is null. Works for all field types. Requires boolean value (true for null, false for not null).
      is_empty - Checks if `field` is null or empty string. Works only for string field types. Requires boolean value (true for empty, false for not empty).
      equals_case_sensitive - Compares `field` with `value` for an exact match.  Case sensitive.  Only works for string types.
      not_equals_case_sensitive - Compares `field` with `value` for an exact non-match.  Case sensitive.  Only works for string types.
      starts_with_case_sensitive - Checks if `field` starts with static `value`.  Case sensitive.  Only works for string types.
      ends_with_case_sensitive - Checks if `field` ends with static `value`.  Case sensitive.  Only works for string types.
      contains_case_sensitive - Checks if `field` has the static `value` as its substring. Case sensitive. Only works for string types.
      not_contains_case_sensitive - Checks if `field` does not have the static `value` as its substring. Case sensitive. Only works for string types.
      in_case_sensitive - Checks if `field` is in the static `value` array. Works with strings (case sensitive), numbers, and datetime types.
      not_in_case_sensitive - Checks if `field` is not in the static `value` array. Works with strings (case sensitive), numbers, and datetime types.
    enum:
      - operation_unknown
      - and
      - or
      - equals
      - not_equals
      - greater_than
      - less_than
      - starts_with
      - ends_with
      - contains
      - not_contains
      - in
      - not_in
      - greater_than_or_equals
      - less_than_or_equals
      - is_null
      - is_empty
      - equals_case_sensitive
      - not_equals_case_sensitive
      - starts_with_case_sensitive
      - ends_with_case_sensitive
      - contains_case_sensitive
      - not_contains_case_sensitive
      - in_case_sensitive
      - not_in_case_sensitive
    type: string
  jumpcloud.search.SearchRequestMetadata:
    description: |-
      Metadata about the search request including source information
      and some other metadata about the calling service.
    properties:
      context:
        items:
          $ref: '#/definitions/jumpcloud.search.MetadataContextEntry'
        title: |-
          Additional context about the request (use for any extra metadata)
          This can contain information such as report type and other contextual values
        type: array
      searchPurpose:
        $ref: '#/definitions/jumpcloud.search.SearchPurpose'
        title: Purpose or category of the search
        x-nullable: true
      source:
        title: 'Source of the request (e.g., "insights-api", "monitoring", "alerts")'
        type: string
        x-nullable: true
    type: object
  jumpcloud.search.SearchRequestSort:
    properties:
      field:
        description: |-
          This is a field on an object.  It should always be in the form of
          <objectName>.<fieldName>  This will be case insensitive, and will be cast to
          lowercase always.
        type: string
      order:
        $ref: '#/definitions/jumpcloud.search.SearchRequestSort.Order'
    type: object
  jumpcloud.search.SearchRequestSort.Order:
    default: asc
    enum:
      - asc
      - desc
    title: Sort order. Defaults to ascending
    type: string
  jumpcloud.service_accounts.ActorType:
    default: ADMIN
    description: |-
      - ADMIN: the actor is admin
       - SERVICE_ACCOUNT: the actor is a service account
    enum:
      - ADMIN
      - SERVICE_ACCOUNT
    title: enum for actor types
    type: string
  jumpcloud.service_accounts.AuthConfig:
    properties:
      authType:
        $ref: '#/definitions/jumpcloud.service_accounts.AuthType'
      clientSecretConfig:
        $ref: '#/definitions/jumpcloud.service_accounts.ClientSecretConfig'
    title: |-
      contains authentication configuration, such as client secret config
      might have new field here for JWT credentials in future
    type: object
  jumpcloud.service_accounts.AuthConfigParameter:
    properties:
      authType:
        $ref: '#/definitions/jumpcloud.service_accounts.AuthType'
      clientSecretConfig:
        $ref: '#/definitions/jumpcloud.service_accounts.ClientSecretConfigParam'
    required:
      - authType
      - clientSecretConfig
    title: contains the configuration parameters required for the creation of auth config
    type: object
  jumpcloud.service_accounts.AuthType:
    default: AUTH_TYPE_UNSPECIFIED
    description: |-
      - AUTH_TYPE_UNSPECIFIED: unspecified authentication type
       - CLIENT_SECRET: client secret authentication
    enum:
      - AUTH_TYPE_UNSPECIFIED
      - CLIENT_SECRET
    title: enum for supported authentication types
    type: string
  jumpcloud.service_accounts.ClientSecretConfig:
    properties:
      clientId:
        title: client ID associated with the secret
        type: string
      clientSecret:
        description: |-
          client secret associated with the client ID.
          This field will hold the secret only at the time of creation and will be visible to users only once.
          The subsequent retrievals will not return the secret for security reasons.
        type: string
      createdAt:
        format: date-time
        title: creation timestamp of the client secret
        type: string
      createdBy:
        $ref: '#/definitions/jumpcloud.service_accounts.ServiceAccountActor'
      expiresAt:
        format: date-time
        title: expiration timestamp of the client secret
        type: string
      lifetime:
        title: 'lifetime of the client secret (e.g., 1y, 30d)'
        type: string
      objectId:
        format: byte
        title: object ID of the client secret config
        type: string
      status:
        $ref: '#/definitions/jumpcloud.service_accounts.Status'
    title: 'contains configuration for a client secret, including metadata and audit information'
    type: object
  jumpcloud.service_accounts.ClientSecretConfigParam:
    properties:
      lifetime:
        title: 'lifetime of the client secret (e.g., 1y, 30d)'
        type: string
    required:
      - lifetime
    title: contains the configuration parameters required for the creation of client secret
    type: object
  jumpcloud.service_accounts.CreateAuthConfigResponse:
    properties:
      authConfig:
        $ref: '#/definitions/jumpcloud.service_accounts.AuthConfig'
    title: contains auth config response
    type: object
  jumpcloud.service_accounts.CreateServiceAccountRequest:
    properties:
      authConfig:
        $ref: '#/definitions/jumpcloud.service_accounts.AuthConfigParameter'
      name:
        title: the name of the service account
        type: string
      roleId:
        format: byte
        title: the role id associated with the service account
        type: string
      roleName:
        title: the role name associated with the service account
        type: string
    required:
      - name
      - roleId
      - roleName
      - authConfig
    title: contains the new service account's information
    type: object
  jumpcloud.service_accounts.CreateServiceAccountResponse:
    properties:
      serviceAccount:
        $ref: '#/definitions/jumpcloud.service_accounts.ServiceAccount'
    title: contains the response for creating a service account
    type: object
  jumpcloud.service_accounts.DeleteAuthConfigResponse:
    title: response for deleting an auth config
    type: object
  jumpcloud.service_accounts.DeleteServiceAccountResponse:
    title: response for deleting a service account
    type: object
  jumpcloud.service_accounts.ListServiceAccountsResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/jumpcloud.service_accounts.ServiceAccount'
        type: array
      totalCount:
        format: int32
        title: total number of service accounts (for pagination)
        type: integer
    title: contains the list of accounts for a given org / provider with pagination metadata
    type: object
  jumpcloud.service_accounts.ServiceAccount:
    properties:
      authConfigList:
        items:
          $ref: '#/definitions/jumpcloud.service_accounts.AuthConfig'
        type: array
      authType:
        $ref: '#/definitions/jumpcloud.service_accounts.AuthType'
      createdAt:
        format: date-time
        title: the creation date of the account
        type: string
      expiresAt:
        format: date-time
        title: this denotes when the auth associated with service account will expire
        type: string
      name:
        title: the account's name
        type: string
      objectId:
        format: byte
        title: the account's id in object_id format
        type: string
      orgId:
        format: byte
        title: the organization id associated with the account
        type: string
      providerId:
        format: byte
        title: 'the provider id associated with the account, should be present if MTP'
        type: string
      roleId:
        format: byte
        title: role id associated with the account
        type: string
      roleName:
        title: the account's assigned role name
        type: string
      status:
        $ref: '#/definitions/jumpcloud.service_accounts.Status'
    title: the service account object
    type: object
  jumpcloud.service_accounts.ServiceAccountActor:
    properties:
      id:
        format: byte
        title: 'the actor''s id, it can be a userID or serviceAccountID'
        type: string
      name:
        title: 'the actor''s name, it can be a admin name or service account name'
        type: string
      type:
        $ref: '#/definitions/jumpcloud.service_accounts.ActorType'
    title: 'the actor object, it can be a user or service account'
    type: object
  jumpcloud.service_accounts.Status:
    default: ACTIVE
    enum:
      - ACTIVE
      - EXPIRED
      - EXPIRING
    title: enum for the status of the client secret
    type: string
  ldap-server:
    properties:
      id:
        description: Unique identifier of this LDAP server
        readOnly: true
        type: string
      name:
        description: The name of this LDAP server
        type: string
      userLockoutAction:
        description: action to take; one of 'remove' or 'disable'
        enum:
          - disable
          - remove
        type: string
      userPasswordExpirationAction:
        description: action to take; one of 'remove' or 'disable'
        enum:
          - disable
          - remove
        type: string
    title: LDAP Server
    type: object
  mobileconfig:
    title: mobileconfig
    type: string
  o365.Domain:
    properties:
      default:
        type: boolean
      domain:
        type: string
      objectId:
        format: byte
        type: string
      resourceObjectId:
        description: ObjectID of the Office 365 suite.
        format: byte
        type: string
    type: object
  o365.DomainResponse:
    properties:
      domain:
        $ref: '#/definitions/o365.Domain'
    type: object
  o365.DomainsListResponse:
    properties:
      domains:
        items:
          $ref: '#/definitions/o365.Domain'
        type: array
      totalCount:
        format: int64
        type: integer
    type: object
  object-storage-item:
    description: Object storage item information.
    properties:
      objectId:
        type: string
      versions:
        items:
          $ref: '#/definitions/object-storage-version'
        type: array
    title: Object Storage item
    type: object
  object-storage-version:
    description: Object storage version information.
    properties:
      metadata:
        type: object
      name:
        type: string
      rejectedReason:
        type: string
      sha256sum:
        type: string
      size:
        default: 0
        type: integer
      status:
        type: string
      version:
        default: 0
        type: integer
    title: Object Storage Version
    type: object
  office365:
    properties:
      defaultDomain:
        $ref: '#/definitions/defaultDomain'
      groupsEnabled:
        type: boolean
      id:
        readOnly: true
        type: string
      name:
        type: string
      userLockoutAction:
        enum:
          - suspend
          - maintain
        readOnly: true
        type: string
      userPasswordExpirationAction:
        enum:
          - suspend
          - maintain
        readOnly: true
        type: string
    title: Office 365
    type: object
  samba-domain:
    properties:
      id:
        description: Unique identifier of this domain
        readOnly: true
        type: string
      name:
        description: Name of this domain's WorkGroup
        type: string
      sid:
        description: Security identifier of this domain
        type: string
    required:
      - name
      - sid
    title: Samba Domain
    type: object
  scheduled-userstate-result:
    properties:
      scheduledDate:
        description: The UTC date and time when the scheduled job will execute.
        type: string
      scheduledJobId:
        description: The id of the scheduled job that scheduled the state change.
        type: string
      state:
        description: The state that the user will be in once the scheduled job executes.
        type: string
      systemUserId:
        description: The id of the user that the scheduled job will update.
        type: string
    title: Scheduled Userstate Result
    type: object
  software-app:
    properties:
      createdAt:
        format: date-time
        type: string
      displayName:
        type: string
      id:
        type: string
      settings:
        items:
          $ref: '#/definitions/software-app-settings'
        type: array
      updatedAt:
        format: date-time
        type: string
    title: Software Application Package
    type: object
  software-app-apple-vpp:
    description: 'appleVpp is an optional attribute, it will only be present on apps with a ''setting'' ''package_manager'' type of ''APPLE_VPP''.'
    properties:
      appConfiguration:
        description: 'Text sent to configure the application, the text should be a valid plist.  Returned only by ''GET /softwareapps/{id}''.'
        type: string
      assignedLicenses:
        default: 0
        type: integer
      availableLicenses:
        default: 0
        type: integer
      details:
        description: 'App details returned by iTunes API. See example. The properties in this field are out of our control and we cannot guarantee consistency, so it should be checked by the client and manage the details accordingly.'
        type: object
      isConfigEnabled:
        description: 'Denotes if configuration has been enabled for the application.  Returned only by ''''GET /softwareapps/{id}''''.'
        type: boolean
      supportedDeviceFamilies:
        description: The supported device families for this VPP Application.
        items:
          enum:
            - IPAD
            - IPHONE
            - IPOD
            - MAC
          type: string
        type: array
      totalLicenses:
        default: 0
        type: integer
    title: software-app-apple-vpp
    type: object
  software-app-create:
    properties:
      createdAt:
        format: date-time
        type: string
      displayName:
        type: string
      id:
        type: string
      settings:
        items:
          $ref: '#/definitions/software-app-settings'
        type: array
      updatedAt:
        format: date-time
        type: string
      uploadUrl:
        type: string
    title: SoftwareApplicationCreate
    type: object
  software-app-google-android:
    description: 'googleAndroid is an optional attribute, it will only be present on apps with a ''setting'' ''package_manager'' type of ''GOOGLE_ANDROID''.'
    properties:
      androidFeatures:
        description: The array of android features for the app.
        items:
          type: string
        type: array
      appPricing:
        description: 'Whether this app is free, free with in-app purchases, or paid.'
        type: string
      appVersion:
        description: Latest version currently available for this app.
        type: string
      author:
        description: The name of the author of this app.
        type: string
      autoUpdateMode:
        description: Controls the auto-update mode for the app.
        enum:
          - AUTO_UPDATE_DEFAULT
          - AUTO_UPDATE_POSTPONED
          - AUTO_UPDATE_HIGH_PRIORITY
        type: string
      category:
        description: 'The app category (e.g. COMMUNICATION, SOCIAL, etc.).'
        type: string
      contentRating:
        description: The content rating for this app.
        type: string
      displayMode:
        description: The display mode of the web app.
        type: string
      distributionChannel:
        description: How and to whom the package is made available.
        type: string
      fullDescription:
        description: 'Full app description, if available.'
        type: string
      iconUrl:
        description: A link to an image that can be used as an icon for the app.
        type: string
      installType:
        description: The type of installation to perform for an app.
        enum:
          - AVAILABLE
          - FORCE_INSTALLED
          - BLOCKED
        type: string
      managedConfigurationTemplateId:
        description: The managed configurations template for the app.
        type: string
      managedProperties:
        description: Indicates whether this app has managed properties or not.
        type: boolean
      minSdkVersion:
        description: The minimum Android SDK necessary to run the app.
        type: integer
      name:
        description: 'The name of the app in the form enterprises/{enterprise}/applications/{packageName}.'
        type: string
      permissionGrants:
        items:
          $ref: '#/definitions/software-app-permission-grants'
        type: array
      runtimePermission:
        description: The policy for granting permission requests to apps.
        enum:
          - PROMPT
          - GRANT
          - DENY
        type: string
      startUrl:
        description: 'The start URL, i.e. the URL that should load when the user opens the application. Applicable only for webapps.'
        type: string
      type:
        description: Type of this android application.
        enum:
          - APP_TYPE_UNSPECIFIED
          - PUBLIC
          - PRIVATE
          - WEBAPP
        type: string
      updateTime:
        description: The approximate time (within 7 days) the app was last published.
        type: string
      versionCode:
        description: The current version of the web app.
        type: integer
    title: software-app-google-android
    type: object
  software-app-microsoft-store:
    description: 'microsoftStore is an optional attribute, it will only be present on apps with a ''setting'' ''package_manager'' type of ''MICROSOFT_STORE''.'
    properties:
      doNotUpdate:
        description: Indicates whether the app can be updated or not.
        type: boolean
      nonRemovable:
        description: Indicates whether the app is removable by the users or not.
        type: boolean
      packageFamilyName:
        description: Package Family Name for the app from Microsoft App Store.
        type: string
    title: software-app-microsoft-store
    type: object
  software-app-permission-grants:
    properties:
      id:
        description: 'An opaque string uniquely identifying the Android permission, e.g. android.permission.READ_CALENDAR.'
        type: string
      policy:
        description: The policy for granting the permission.
        enum:
          - PROMPT
          - GRANT
          - DENY
        type: string
    type: object
  software-app-reclaim-licenses:
    properties:
      assignedLicenses:
        default: 0
        type: integer
      availableLicenses:
        default: 0
        type: integer
      reclaimedLicenses:
        default: 0
        type: integer
      totalLicenses:
        default: 0
        type: integer
    type: object
  software-app-settings:
    properties:
      allowUpdateDelay:
        default: false
        type: boolean
      appCatalogInstallableObjectId:
        description: ID of the app catalog installable that created this app.
        type: string
      appFileName:
        type: string
      appleVpp:
        $ref: '#/definitions/software-app-apple-vpp'
      architectures:
        items:
          type: string
        type: array
      assetKind:
        description: 'The manifest asset kind (ex: software).'
        type: string
      assetSha256Size:
        description: The incremental size to use for summing the package as it is downloaded.
        type: integer
      assetSha256Strings:
        description: 'The array of checksums, one each for the hash size up to the total size of the package.'
        items:
          type: string
        type: array
      autoUpdate:
        default: false
        type: boolean
      bundleId:
        type: string
      commandLineArguments:
        description: Command line arguments to use with the application.
        type: string
      createdAt:
        format: date-time
        type: string
      description:
        description: The software app description.
        type: string
      desiredState:
        description: State of Install or Uninstall
        type: string
      downloadUrl:
        type: string
      enterpriseObjectId:
        description: ID of the Enterprise with which this app is associated
        type: string
      format:
        type: string
      googleAndroid:
        $ref: '#/definitions/software-app-google-android'
      iconUrl:
        description: URL to the icon for the app.
        type: string
      location:
        description: Repository where the app is located within the package manager
        type: string
      locationObjectId:
        description: ID of the repository where the app is located within the package manager
        type: string
      microsoftStore:
        $ref: '#/definitions/software-app-microsoft-store'
      packageId:
        type: string
      packageKind:
        description: 'The package manifest kind (ex: software-package).'
        type: string
      packageManager:
        description: 'App store serving the app: APPLE_VPP, CHOCOLATEY, etc.'
        type: string
      packageSubtitle:
        description: The package manifest subtitle.
        type: string
      packageVersion:
        description: The package manifest version.
        type: string
      packageVersionUpdatedAt:
        format: date-time
        type: string
      scope:
        description: The installation scope of the software app.
        type: string
      shortVersion:
        type: string
      storedPackage:
        $ref: '#/definitions/object-storage-item'
      storedPackageObjectId:
        description: ID of the stored package this app uses to reference the stored install media.
        type: string
      teamId:
        type: string
      updateTool:
        type: string
      updateToolArguments:
        type: string
      updatedAt:
        format: date-time
        type: string
      versionlessDownloadUrl:
        type: boolean
    type: object
    x-examples:
      example-1:
        allowUpdateDelay: false
        autoUpdate: false
        desiredState: string
        location: string
        locationObjectId: string
        packageId: string
        packageManager: string
  software-app-status:
    properties:
      code:
        type: integer
      details:
        type: string
      id:
        type: string
      softwareAppId:
        type: string
      state:
        type: string
      systemId:
        type: string
      timestamp:
        type: string
      version:
        type: string
    title: Software Application Status
  software-app-with-status:
    properties:
      app:
        $ref: '#/definitions/software-app'
      status:
        $ref: '#/definitions/software-app-status'
    title: SoftwareAppsWithStatus
  sso:
    properties:
      _id:
        type: string
      active:
        type: boolean
      beta:
        type: boolean
      certExpired:
        type: boolean
      hidden:
        type: boolean
      idpCertExpirationAt:
        format: date-time
        type: string
      idpCertificateUpdatedAt:
        format: date-time
        readOnly: true
        type: string
      idpPrivateKeyUpdatedAt:
        format: date-time
        readOnly: true
        type: string
      jit:
        properties:
          enabled:
            type: boolean
          supported:
            type: boolean
        type: object
      spCertificateUpdatedAt:
        format: date-time
        readOnly: true
        type: string
      type:
        type: string
      url:
        type: string
    type: object
  subscription:
    properties:
      annualPrice:
        description: The annual (discounted) price of this subscription.
        type: number
      displayName:
        description: The display name of this subscription.
        type: string
      features:
        description: Array of the features included in the subscription.
        items:
          $ref: '#/definitions/feature'
        type: array
      listPrice:
        description: The list price of this subscription.
        type: number
      productCode:
        description: Unique identifier corresponding to this subscription.
        type: string
      upgradeRecommendation:
        description: Upgrade plan add-on.
        type: string
    required:
      - annualPrice
      - displayName
      - features
      - listPrice
      - productCode
    title: Subscription
    type: object
  system-insights-alf:
    properties:
      allow_signed_enabled:
        type: integer
      collection_time:
        type: string
      firewall_unload:
        type: integer
      global_state:
        type: integer
      logging_enabled:
        type: integer
      logging_option:
        type: integer
      stealth_enabled:
        type: integer
      system_id:
        type: string
      version:
        type: string
    title: System Insights ALF
    type: object
  system-insights-alf-exceptions:
    properties:
      collection_time:
        type: string
      path:
        type: string
      state:
        type: number
      system_id:
        type: string
    title: System Insights ALF Exceptions
    type: object
  system-insights-alf-explicit-auths:
    properties:
      collection_time:
        type: string
      process:
        type: string
      system_id:
        type: string
    title: System Insights ALF Explicit Authorizations
    type: object
  system-insights-appcompat-shims:
    properties:
      collection_time:
        type: string
      description:
        type: string
      executable:
        type: string
      install_time:
        type: number
      path:
        type: string
      sdb_id:
        type: string
      system_id:
        type: string
      type:
        type: string
    title: System Insights Application Compatibility Shims
    type: object
  system-insights-apps:
    example:
      applescript_enabled: '1'
      bundle_executable: App Store
      bundle_identifier: com.apple.appstore
      bundle_name: App Store
      bundle_package_type: APPL
      bundle_short_version: '2.4'
      bundle_version: '658.1'
      category: public.app-category.utilities
      collection_time: '2019-06-03T19:41:30.658Z'
      compiler: com.apple.compilers.llvm.clang.1_0
      copyright: ''
      development_region: English
      display_name: App Store
      element: ''
      environment: ''
      info_string: ''
      last_opened_time: 1556688963.50383
      minimum_system_version: '10.13'
      name: App Store.app
      path: /Applications/App Store.app
      system_id: 5c9e51a13c5146f89bae12d9
    properties:
      applescript_enabled:
        type: string
      bundle_executable:
        type: string
      bundle_identifier:
        type: string
      bundle_name:
        type: string
      bundle_package_type:
        type: string
      bundle_short_version:
        type: string
      bundle_version:
        type: string
      category:
        type: string
      collection_time:
        type: string
      compiler:
        type: string
      copyright:
        type: string
      development_region:
        type: string
      display_name:
        type: string
      element:
        type: string
      environment:
        type: string
      info_string:
        type: string
      last_opened_time:
        type: number
      minimum_system_version:
        type: string
      name:
        type: string
      path:
        type: string
      system_id:
        type: string
    title: System Insights Apps
    type: object
  system-insights-authorized-keys:
    properties:
      algorithm:
        type: string
      collection_time:
        type: string
      key:
        type: string
      key_file:
        type: string
      system_id:
        type: string
      uid:
        type: string
    title: System Insights Authorized Keys
    type: object
  system-insights-azure-instance-metadata:
    properties:
      collection_time:
        type: string
      location:
        type: string
      name:
        type: string
      offer:
        type: string
      os_type:
        type: string
      placement_group_id:
        type: string
      platform_fault_domain:
        type: string
      platform_update_domain:
        type: string
      publisher:
        type: string
      resource_group_name:
        type: string
      sku:
        type: string
      subscription_id:
        type: string
      system_id:
        type: string
      version:
        type: string
      vm_id:
        type: string
      vm_scale_set_name:
        type: string
      vm_size:
        type: string
      zone:
        type: string
    title: System Insights Azure Instance Metadata
    type: object
  system-insights-azure-instance-tags:
    properties:
      collection_time:
        type: string
      key:
        type: string
      system_id:
        type: string
      value:
        type: string
      vm_id:
        type: string
    title: System Insights Azure Instance Tags
    type: object
  system-insights-battery:
    example:
      amperage: 93836453
      charged: 63086136
      charging: 6577424
      collection_time: anim in dolor
      condition: magna Ut dolor laborum
      current_capacity: 95829126
      cycle_count: -58203101
      designed_capacity: 51607498
      health: ipsum Duis amet magna sint
      manufacture_date: 66625366
      manufacturer: laboris
      max_capacity: 407375
      minutes_to_full_charge: -43087634
      minutes_until_empty: 56660087
      model: cupidatat quis esse tempor nostr
      percent_remaining: -77798506
      serial_number: est do nisi anim eu
      state: Duis qui eu labore
      system_id: elit nulla cillum et
      voltage: -79728034
    properties:
      amperage:
        type: integer
      charged:
        type: integer
      charging:
        type: integer
      collection_time:
        type: string
      condition:
        type: string
      current_capacity:
        type: integer
      cycle_count:
        type: integer
      designed_capacity:
        type: integer
      health:
        type: string
      manufacture_date:
        type: integer
      manufacturer:
        type: string
      max_capacity:
        type: integer
      minutes_to_full_charge:
        type: integer
      minutes_until_empty:
        type: integer
      model:
        type: string
      percent_remaining:
        type: integer
      serial_number:
        type: string
      state:
        type: string
      system_id:
        type: string
      voltage:
        type: integer
    title: System Insights Battery
    type: object
  system-insights-bitlocker-info:
    example:
      collection_time: '2019-06-03T19:41:30.658Z'
      conversion_status: 0
      device_id: '\\\\?\\Volume{3ba5cc52-e0fd-45fa-b8b8-5c88f44f8b17}\'
      drive_letter: 'C:'
      encryption_method: None
      percentage_encrypted: 0
      persistent_volume_id: ''
      protection_status: 0
      system_id: 5c9e51a13c5146f89bae12d9
    properties:
      collection_time:
        type: string
      conversion_status:
        type: integer
      device_id:
        type: string
      drive_letter:
        type: string
      encryption_method:
        type: string
      percentage_encrypted:
        type: integer
      persistent_volume_id:
        type: string
      protection_status:
        type: integer
      system_id:
        type: string
    title: System Insights Bitlocker Info
    type: object
  system-insights-browser-plugins:
    example:
      collection_time: '2019-06-03T19:41:30.858Z'
      description: LastPass Plugin
      development_region: en-US
      disabled: 0
      identifier: com.lastpass.nplastpass
      name: LastPass
      native: 0
      path: /Library/Internet Plug-Ins/nplastpass.plugin/
      sdk: 7D175
      system_id: 5c9e51a13c5146f89bae12d9
      uid: '0'
      version: 4.1.7
    properties:
      collection_time:
        type: string
      description:
        type: string
      development_region:
        type: string
      disabled:
        type: integer
      identifier:
        type: string
      name:
        type: string
      native:
        type: integer
      path:
        type: string
      sdk:
        type: string
      system_id:
        type: string
      uid:
        type: string
      version:
        type: string
    title: System Insights Browser Plugins
    type: object
  system-insights-certificates:
    properties:
      authority_key_id:
        type: string
      ca:
        type: integer
      common_name:
        type: string
      issuer:
        type: string
      key_algorithm:
        type: string
      key_strength:
        type: string
      key_usage:
        type: string
      not_valid_after:
        type: string
      not_valid_before:
        type: string
      path:
        type: string
      self_signed:
        type: integer
      serial:
        type: string
      sha1:
        type: string
      sid:
        type: string
      signing_algorithm:
        type: string
      store:
        type: string
      store_id:
        type: string
      store_location:
        type: string
      subject:
        type: string
      subject_key_id:
        type: string
      system_id:
        type: string
      username:
        type: string
  system-insights-chassis-info:
    properties:
      audible_alarm:
        type: string
      breach_description:
        type: string
      chassis_types:
        type: string
      collection_time:
        type: string
      description:
        type: string
      lock:
        type: string
      manufacturer:
        type: string
      model:
        type: string
      security_breach:
        type: string
      serial:
        type: string
      sku:
        type: string
      smbios_tag:
        type: string
      status:
        type: string
      system_id:
        type: string
      visible_alarm:
        type: string
    title: System Insights Chassis Info
    type: object
  system-insights-chrome-extensions:
    example:
      author: ''
      collection_time: '2019-06-03t19:41:31.125z'
      description: provider for discovery and services for mirroring of chrome media router
      identifier: pkedcjkdefgpdelpbcmbmeomcjbeemfm
      locale: en
      name: chrome media router
      path: /users/thomas/library/application support/google/chrome/default/extensions/pkedcjkdefgpdelpbcmbmeomcjbeemfm/7419.311.0.1_0/
      permissions: 'alarms, cast, cast.streaming, declarativewebrequest, desktopcapture, gcm, http://*/*, identity, identity.email, management, mdns, mediarouterprivate, metricsprivate, networkingprivate, processes, storage, system.cpu, settingsprivate, tabcapture, tabs, webview, https://hangouts.google.com/*, https://*.google.com/cast/chromecast/home/gsse'
      persistent: 0
      system_id: 5c9e51a13c5146f89bae12d9
      uid: '501'
      update_url: 'https://clients2.google.com/service/update2/crx'
      version: 7419.311.0.1
    properties:
      author:
        type: string
      collection_time:
        type: string
      description:
        type: string
      identifier:
        type: string
      locale:
        type: string
      name:
        type: string
      path:
        type: string
      permissions:
        type: string
      persistent:
        type: integer
      system_id:
        type: string
      uid:
        type: string
      update_url:
        type: string
      version:
        type: string
    title: System Insights Chrome Extensions
    type: object
  system-insights-connectivity:
    properties:
      collection_time:
        type: string
      disconnected:
        type: integer
      ipv4_internet:
        type: integer
      ipv4_local_network:
        type: integer
      ipv4_no_traffic:
        type: integer
      ipv4_subnet:
        type: integer
      ipv6_internet:
        type: integer
      ipv6_local_network:
        type: integer
      ipv6_no_traffic:
        type: integer
      ipv6_subnet:
        type: integer
      system_id:
        type: string
    title: system insights connectivity
    type: object
  system-insights-crashes:
    properties:
      collection_time:
        type: string
      crash_path:
        type: string
      crashed_thread:
        type: string
      datetime:
        type: string
      exception_codes:
        type: string
      exception_notes:
        type: string
      exception_type:
        type: string
      identifier:
        type: string
      parent:
        type: string
      path:
        type: string
      pid:
        type: string
      registers:
        type: string
      responsible:
        type: string
      stack_trace:
        type: string
      system_id:
        type: string
      type:
        type: string
      uid:
        type: integer
      version:
        type: string
    title: System Insights Crashes
    type: object
  system-insights-cups-destinations:
    properties:
      name:
        type: string
      option_name:
        type: string
      option_value:
        type: string
      system_id:
        type: string
  system-insights-disk-encryption:
    example:
      collection_time: '2019-06-03T19:41:31.557Z'
      encrypted: 0
      encryption_status: undefined
      name: /dev/disk8
      system_id: 5c9e51a13c5146f89bae12d9
      type: ''
      uid: ''
      user_uuid: ''
      uuid: ''
    properties:
      collection_time:
        type: string
      encrypted:
        type: integer
      encryption_status:
        type: string
      name:
        type: string
      system_id:
        type: string
      type:
        type: string
      uid:
        type: string
      user_uuid:
        type: string
      uuid:
        type: string
    title: System Insights Disk Encryption
    type: object
  system-insights-disk-info:
    example:
      collection_time: '2019-06-03T19:41:30.658Z'
      description: Disk drive
      disk_index: 0
      disk_size: '64420392960'
      hardware_model: 'VMware, VMware Virtual S SCSI Disk Device'
      id: \\.\PHYSICALDRIVE0
      manufacturer: (Standard disk drives)
      name: \\.\PHYSICALDRIVE0
      partitions: 3
      pnp_device_id: SCSI\DISK&VEN_VMWARE_&PROD_VMWARE_VIRTUAL_S\5&1EC51BF7&0&000000
      serial: ''
      system_id: 5c9e51a13c5146f89bae12d9
      type: SCSI
    properties:
      collection_time:
        type: string
      description:
        type: string
      disk_index:
        type: integer
      disk_size:
        type: string
      hardware_model:
        type: string
      id:
        type: string
      manufacturer:
        type: string
      name:
        type: string
      partitions:
        type: integer
      pnp_device_id:
        type: string
      serial:
        type: string
      system_id:
        type: string
      type:
        type: string
    title: System Insights Disk Info
    type: object
  system-insights-dns-resolvers:
    properties:
      address:
        type: string
      collection_time:
        type: string
      id:
        type: number
      netmask:
        type: string
      options:
        type: string
      system_id:
        type: string
      type:
        type: string
    title: System Insights DNS Resolvers
    type: object
  system-insights-etc-hosts:
    example:
      address: 192.168.2.21
      collection_time: '2019-06-03T19:41:30.658Z'
      hostnames: hosty hosty.local
      system_id: 5c9e51a13c5146f89bae12d9
    properties:
      address:
        type: string
      collection_time:
        type: string
      hostnames:
        type: string
      system_id:
        type: string
    title: System Insights Etc Hosts
    type: object
  system-insights-firefox-addons:
    example:
      active: 1
      autoupdate: 1
      collection_time: '2019-06-03T19:41:31.204Z'
      creator: 'null'
      description: ''
      disabled: 0
      identifier: fxmonitor@mozilla.org
      location: app-system-addons
      name: Firefox Monitor
      path: ''
      source_url: 'file:///var/folders/dn/zjm_0lzn4lv6bgnt5b3nkgxh0000gn/T/tmpaddon-9fb449'
      system_id: 5c9e51a13c5146f89bae12d9
      type: extension
      uid: '501'
      version: '2.8'
      visible: 1
    properties:
      active:
        type: integer
      autoupdate:
        type: integer
      collection_time:
        type: string
      creator:
        type: string
      description:
        type: string
      disabled:
        type: integer
      identifier:
        type: string
      location:
        type: string
      name:
        type: string
      path:
        type: string
      source_url:
        type: string
      system_id:
        type: string
      type:
        type: string
      uid:
        type: string
      version:
        type: string
      visible:
        type: integer
    title: System Insights Firefox Addons
    type: object
  system-insights-groups:
    example:
      collection_time: '2019-06-03T19:41:31.673Z'
      comment: ''
      gid: '701'
      gid_signed: '701'
      group_sid: ''
      groupname: '1'
      system_id: 5c9e51a13c5146f89bae12d9
    properties:
      collection_time:
        type: string
      comment:
        type: string
      gid:
        type: string
      gid_signed:
        type: string
      group_sid:
        type: string
      groupname:
        type: string
      system_id:
        type: string
    title: System Insights Groups
    type: object
  system-insights-ie-extensions:
    properties:
      collection_time:
        type: string
      name:
        type: string
      path:
        type: string
      registry_path:
        type: string
      system_id:
        type: string
      version:
        type: string
    title: System Insights IE Extensions
    type: object
  system-insights-interface-addresses:
    example:
      address: '::1'
      broadcast: ''
      collection_time: '2019-06-03T19:41:31.008Z'
      friendly_name: ''
      interface: lo0
      mask: 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'
      point_to_point: '::1'
      system_id: 5c9e51a13c5146f89bae12d9
      type: unknown
    properties:
      address:
        type: string
      broadcast:
        type: string
      collection_time:
        type: string
      friendly_name:
        type: string
      interface:
        type: string
      mask:
        type: string
      point_to_point:
        type: string
      system_id:
        type: string
      type:
        type: string
    title: System Insights Interface Addresses
    type: object
  system-insights-interface-details:
    properties:
      collisions:
        type: string
      connection_id:
        type: string
      connection_status:
        type: string
      description:
        type: string
      dhcp_enabled:
        type: integer
      dhcp_lease_expires:
        type: string
      dhcp_lease_obtained:
        type: string
      dhcp_server:
        type: string
      dns_domain:
        type: string
      dns_domain_suffix_search_order:
        type: string
      dns_host_name:
        type: string
      dns_server_search_order:
        type: string
      enabled:
        type: integer
      flags:
        type: integer
      friendly_name:
        type: string
      ibytes:
        type: string
      idrops:
        type: string
      ierrors:
        type: string
      interface:
        type: string
      ipackets:
        type: string
      last_change:
        type: string
      link_speed:
        type: string
      mac:
        type: string
      manufacturer:
        type: string
      metric:
        type: integer
      mtu:
        type: integer
      obytes:
        type: string
      odrops:
        type: string
      oerrors:
        type: string
      opackets:
        type: string
      pci_slot:
        type: string
      physical_adapter:
        type: integer
      service:
        type: string
      speed:
        type: integer
      system_id:
        type: string
      type:
        type: integer
    type: object
  system-insights-kernel-info:
    properties:
      arguments:
        type: string
      collection_time:
        type: string
      device:
        type: string
      path:
        type: string
      system_id:
        type: string
      version:
        type: string
    title: System Insights Kernel Info
    type: object
  system-insights-launchd:
    properties:
      collection_time:
        type: string
      disabled:
        type: string
      groupname:
        type: string
      inetd_compatibility:
        type: string
      keep_alive:
        type: string
      label:
        type: string
      name:
        type: string
      on_demand:
        type: string
      path:
        type: string
      process_type:
        type: string
      program:
        type: string
      program_arguments:
        type: string
      queue_directories:
        type: string
      root_directory:
        type: string
      run_at_load:
        type: string
      start_interval:
        type: string
      start_on_mount:
        type: string
      stderr_path:
        type: string
      stdout_path:
        type: string
      system_id:
        type: string
      username:
        type: string
      watch_paths:
        type: string
      working_directory:
        type: string
    title: System Insights LaunchD
    type: object
  system-insights-linux-packages:
    example:
      arch: amd64
      install_time: 100000
      maintainer_or_vendor: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
      mount_namespace_id: id123
      name: zip
      package_format: deb
      package_group_or_section: utils
      pid_with_namespace: 0
      release_or_revision: 11build1
      size: '100000'
      system_id: 5c9e51a13c5146f89bae12d9
      version: 3.0-11build1
    properties:
      arch:
        type: string
      install_time:
        type: integer
      maintainer_or_vendor:
        type: string
      mount_namespace_id:
        type: string
      name:
        type: string
      package_format:
        type: string
      package_group_or_section:
        type: string
      pid_with_namespace:
        type: integer
      release_or_revision:
        type: string
      size:
        type: string
      system_id:
        type: string
      version:
        type: string
    title: System Insights Linux Packages
    type: object
  system-insights-logged-in-users:
    properties:
      collection_time:
        type: string
      host:
        type: string
      pid:
        type: integer
      system_id:
        type: string
      time:
        type: integer
      tty:
        type: string
      type:
        type: string
      user:
        type: string
    title: System Insights Logged-In Users
    type: object
  system-insights-logical-drives:
    example:
      boot_partition: 0
      collection_time: '2019-06-03T19:41:30.658Z'
      device_id: 'C:'
      file_system: NTFS
      free_space: '43194331136'
      size: '63778582528'
      system_id: 5c9e51a13c5146f89bae12d9
      type: Unknown
    properties:
      boot_partition:
        type: integer
      collection_time:
        type: string
      device_id:
        type: string
      file_system:
        type: string
      free_space:
        type: string
      size:
        type: string
      system_id:
        type: string
      type:
        type: string
    title: System Insights Logical Drives
    type: object
  system-insights-managed-policies:
    properties:
      collection_time:
        type: string
      domain:
        type: string
      manual:
        type: integer
      name:
        type: string
      system_id:
        type: string
      username:
        type: string
      uuid:
        type: string
      value:
        type: string
    title: System Insights Managed Policies
    type: object
  system-insights-mounts:
    example:
      blocks: '388086'
      blocks_available: '95135'
      blocks_free: '95135'
      blocks_size: '4096'
      collection_time: '2019-06-03T19:41:31.746Z'
      device: /dev/disk5s1
      device_alias: /dev/disk5s1
      flags: '70292505'
      inodes: '4294967279'
      inodes_free: '4294966853'
      path: /private/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/.vbfolder_1dQavK
      system_id: 5c9e51a13c5146f89bae12d9
      type: hfs
    properties:
      blocks:
        type: string
      blocks_available:
        type: string
      blocks_free:
        type: string
      blocks_size:
        type: string
      collection_time:
        type: string
      device:
        type: string
      device_alias:
        type: string
      flags:
        type: string
      inodes:
        type: string
      inodes_free:
        type: string
      path:
        type: string
      system_id:
        type: string
      type:
        type: string
    title: System Insights Mounts
    type: object
  system-insights-os-version:
    example:
      build: 17G65
      codename: ''
      collection_time: '2019-06-03T19:41:30.933Z'
      install_date: ''
      major: 10
      minor: 13
      name: Mac OS X
      patch: 6
      platform: darwin
      platform_like: darwin
      system_id: 5c9e51a13c5146f89bae12d9
      version: 10.13.6
    properties:
      build:
        type: string
      codename:
        type: string
      collection_time:
        type: string
      install_date:
        type: string
      major:
        type: integer
      minor:
        type: integer
      name:
        type: string
      patch:
        type: integer
      platform:
        type: string
      platform_like:
        type: string
      system_id:
        type: string
      version:
        type: string
    title: System Insights OS Version
    type: object
  system-insights-patches:
    example:
      caption: 'http://support.microsoft.com/?kbid=4503308'
      collection_time: '2019-06-03T19:41:31.673Z'
      csname: DESKTOP-B17DUKP
      description: Security Update
      fix_comments: ''
      hotfix_id: KB4503308
      install_date: ''
      installed_by: NT AUTHORITY\SYSTEM
      installed_on: 7/30/2019
      system_id: 5c9e51a13c5146f89bae12d9
    properties:
      caption:
        type: string
      collection_time:
        type: string
      csname:
        type: string
      description:
        type: string
      fix_comments:
        type: string
      hotfix_id:
        type: string
      install_date:
        type: string
      installed_by:
        type: string
      installed_on:
        type: string
      system_id:
        type: string
    title: System Insights Patches
    type: object
  system-insights-programs:
    example:
      collection_time: '2019-06-03T19:41:31.673Z'
      identifying_number: '{2E8B8BDD-03DF-4C1C-8C99-E6A4BCBF43CE}'
      install_date: '20190724'
      install_location: ''
      install_source: 'C:\Windows\SoftwareDistribution\Download\b78f29c88063bd09e7afd48e257d0126\img\'
      language: '0'
      name: Update for Windows 10 for x64-based Systems (KB4480730)
      publisher: Microsoft Corporation
      system_id: 5c9e51a13c5146f89bae12d9
      uninstall_string: 'MsiExec.exe /X{2E8B8BDD-03DF-4C1C-8C99-E6A4BCBF43CE}'
      version: 2.51.0.0
    properties:
      collection_time:
        type: string
      identifying_number:
        type: string
      install_date:
        type: string
      install_location:
        type: string
      install_source:
        type: string
      language:
        type: string
      name:
        type: string
      publisher:
        type: string
      system_id:
        type: string
      uninstall_string:
        type: string
      version:
        type: string
    title: System Insights Programs
    type: object
  system-insights-python-packages:
    properties:
      auther:
        type: string
      directory:
        type: string
      license:
        type: string
      name:
        type: string
      path:
        type: string
      summary:
        type: string
      system_id:
        type: string
      version:
        type: string
  system-insights-safari-extensions:
    example:
      author: Eyeo GmbH
      collection_time: '2019-05-16T18:58:15.673Z'
      description: 'Used by over 50 million people, a free ad blocker that blocks ALL annoying ads, malware and tracking.'
      developer_id: GRYYZR985A
      identifier: org.adblockplus.adblockplussafari
      name: Adblock Plus
      path: /Users/samuelharvanek/Library/Safari/Extensions/Adblock Plus.safariextz
      sdk: '6.0'
      system_id: 5cdb13e85a0e0719283583c0
      uid: '501'
      update_url: 'https://update.adblockplus.org/adblockplussafari/updates.plist'
      version: 1.12.5
    properties:
      author:
        type: string
      collection_time:
        type: string
      description:
        type: string
      developer_id:
        type: string
      identifier:
        type: string
      name:
        type: string
      path:
        type: string
      sdk:
        type: string
      system_id:
        type: string
      uid:
        type: string
      update_url:
        type: string
      version:
        type: string
    title: System Insights Safari Extensions
    type: object
  system-insights-scheduled-tasks:
    properties:
      action:
        type: string
      enabled:
        type: integer
      hidden:
        type: integer
      last_run_code:
        type: string
      last_run_message:
        type: string
      last_run_time:
        type: string
      name:
        type: string
      next_run_time:
        type: string
      path:
        type: string
      state:
        type: string
      system_id:
        type: string
    type: object
  system-insights-secureboot:
    properties:
      collection_time:
        type: string
      secure_boot:
        type: number
      setup_mode:
        type: number
      system_id:
        type: string
    title: System Insights Secure Boot
    type: object
  system-insights-services:
    properties:
      description:
        type: string
      display_name:
        type: string
      module_path:
        type: string
      name:
        type: string
      path:
        type: string
      pid:
        type: integer
      service_exit_code:
        type: integer
      service_type:
        type: string
      start_type:
        type: string
      status:
        type: string
      system_id:
        type: string
      user_account:
        type: string
      win32_exit_code:
        type: integer
    type: object
  system-insights-shadow:
    properties:
      collection_time:
        type: string
      expire:
        type: string
      flag:
        type: string
      hash_alg:
        type: string
      inactive:
        type: string
      last_change:
        type: string
      max:
        type: string
      min:
        type: string
      password_status:
        type: string
      system_id:
        type: string
      username:
        type: string
      warning:
        type: string
    title: System Insights Shadow
    type: object
  system-insights-shared-folders:
    properties:
      collection_time:
        type: string
      name:
        type: string
      path:
        type: string
      system_id:
        type: string
    title: System Insights Shared Folders
    type: object
  system-insights-shared-resources:
    properties:
      allow_maximum:
        type: integer
      collection_time:
        type: string
      description:
        type: string
      install_date:
        type: string
      maximum_allowed:
        type: string
      name:
        type: string
      path:
        type: string
      status:
        type: string
      system_id:
        type: string
      type:
        type: string
    title: System Insights Shared Resources
    type: object
  system-insights-sharing-preferences:
    properties:
      bluetooth_sharing:
        type: integer
      collection_time:
        type: string
      content_caching:
        type: integer
      disc_sharing:
        type: integer
      file_sharing:
        type: integer
      internet_sharing:
        type: integer
      printer_sharing:
        type: integer
      remote_apple_events:
        type: integer
      remote_login:
        type: integer
      remote_management:
        type: integer
      screen_sharing:
        type: integer
      system_id:
        type: string
    title: System Insights Sharing Preferences
    type: object
  system-insights-sip-config:
    properties:
      collection_time:
        type: string
      config_flag:
        type: string
      enabled:
        type: integer
      enabled_nvram:
        type: integer
      system_id:
        type: string
    title: System Insights SIP Config
    type: object
  system-insights-startup-items:
    properties:
      args:
        type: string
      name:
        type: string
      path:
        type: string
      source:
        type: string
      status:
        type: string
      system_id:
        type: string
      type:
        type: string
      username:
        type: string
  system-insights-system-controls:
    properties:
      collection_time:
        type: string
      config_value:
        type: string
      current_value:
        type: string
      field_name:
        type: string
      name:
        type: string
      oid:
        type: string
      subsystem:
        type: string
      system_id:
        type: string
      type:
        type: string
    title: System Insights System Controls
    type: object
  system-insights-system-info:
    example:
      collection_time: '2019-06-03T19:41:30.771Z'
      computer_name: Johnny's MacBook Pro (2)
      cpu_brand: Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz
      cpu_logical_cores: 8
      cpu_microcode: ''
      cpu_physical_cores: 4
      cpu_subtype: Intel x86-64h Haswell
      cpu_type: x86_64h
      hardware_model: 'MacBookPro14,3 '
      hardware_serial: 111111FFFFFF
      hardware_vendor: 'Apple Inc. '
      hardware_version: '1.0 '
      hostname: johnnys-macbook-pro-2.local
      local_hostname: Jonnys-MacBook-Pro-2
      physical_memory: '17179869184'
      system_id: 5c9e51a13c5146f89bae12d9
      uuid: 11111111-FFFF-1111-FFFF-111111111111
    properties:
      collection_time:
        type: string
      computer_name:
        type: string
      cpu_brand:
        type: string
      cpu_logical_cores:
        type: integer
      cpu_microcode:
        type: string
      cpu_physical_cores:
        type: integer
      cpu_subtype:
        type: string
      cpu_type:
        type: string
      hardware_model:
        type: string
      hardware_serial:
        type: string
      hardware_vendor:
        type: string
      hardware_version:
        type: string
      hostname:
        type: string
      local_hostname:
        type: string
      physical_memory:
        type: string
      system_id:
        type: string
      uuid:
        type: string
    title: System Insights System Info
    type: object
  system-insights-tpm-info:
    properties:
      activated:
        type: number
      collection_time:
        type: string
      enabled:
        type: number
      manufacturer_id:
        type: number
      manufacturer_name:
        type: string
      manufacturer_version:
        type: string
      owned:
        type: number
      physical_presence_version:
        type: string
      product_name:
        type: string
      spec_version:
        type: string
      system_id:
        type: string
    title: System Insights TPM Info
    type: object
  system-insights-uptime:
    properties:
      collection_time:
        type: string
      days:
        type: integer
      hours:
        type: integer
      minutes:
        type: integer
      seconds:
        type: integer
      system_id:
        type: string
      total_seconds:
        type: string
    title: System Insights Uptime
    type: object
  system-insights-usb-devices:
    properties:
      class:
        type: string
      collection_time:
        type: string
      model:
        type: string
      model_id:
        type: string
      protocol:
        type: string
      removable:
        type: integer
      serial:
        type: string
      subclass:
        type: string
      system_id:
        type: string
      usb_address:
        type: integer
      usb_port:
        type: integer
      vendor:
        type: string
      vendor_id:
        type: string
      version:
        type: string
    title: System Insights USB Devices
    type: object
  system-insights-user-groups:
    properties:
      collection_time:
        type: string
      gid:
        type: string
      system_id:
        type: string
      uid:
        type: string
    title: System Insights User Groups
    type: object
  system-insights-user-ssh-keys:
    properties:
      collection_time:
        type: string
      encrypted:
        type: integer
      path:
        type: string
      system_id:
        type: string
      uid:
        type: string
    title: System Insights User SSH Keys
    type: object
  system-insights-userassist:
    properties:
      collection_time:
        type: string
      count:
        type: number
      last_execution_time:
        type: number
      path:
        type: string
      sid:
        type: string
      system_id:
        type: string
    title: System Insights User Assist
    type: object
  system-insights-users:
    example:
      collection_time: '2019-06-03T19:41:29.710Z'
      description: AppleEvents Daemon
      directory: /var/empty
      gid: '55'
      gid_signed: '55'
      shell: /usr/bin/false
      system_id: 5c9e51a13c5146f89bae12d9
      type: ''
      uid: '55'
      uid_signed: '55'
      username: _appleevents
      uuid: FFFFEEEE-DDDD-CCCC-BBBB-AAAA00000037
    properties:
      ad_managed:
        description: Indicates this account belongs to a AD-managed user
        type: boolean
      admin:
        description: Indicates this account has local administrator privileges
        type: boolean
      collection_time:
        type: string
      description:
        type: string
      directory:
        type: string
      gid:
        type: string
      gid_signed:
        type: string
      last_login:
        description: A Unix timestamp showing the last time this user logged in
        type: string
      managed:
        description: Indicates this account belongs to a JumpCloud-managed user
        type: boolean
      real_user:
        description: Indicates this account represents an interactive user account vs. a system or daemon account
        type: boolean
      shell:
        type: string
      suspended:
        description: Indicates this account is suspended or locked out
        type: boolean
      system_id:
        type: string
      type:
        type: string
      uid:
        type: string
      uid_signed:
        type: string
      username:
        type: string
      uuid:
        type: string
    title: System Insights Users
    type: object
  system-insights-wifi-networks:
    properties:
      auto_login:
        type: number
      captive_portal:
        type: number
      collection_time:
        type: string
      disabled:
        type: number
      last_connected:
        type: number
      network_name:
        type: string
      passpoint:
        type: number
      possibly_hidden:
        type: number
      roaming:
        type: number
      roaming_profile:
        type: string
      security_type:
        type: string
      ssid:
        type: string
      system_id:
        type: string
      temporarily_disabled:
        type: number
    title: System Insights WiFi Networks
    type: object
  system-insights-wifi-status:
    properties:
      bssid:
        type: string
      channel:
        type: number
      channel_band:
        type: number
      channel_width:
        type: number
      collection_time:
        type: string
      country_code:
        type: string
      interface:
        type: string
      mode:
        type: string
      network_name:
        type: string
      noise:
        type: number
      rssi:
        type: number
      security_type:
        type: string
      ssid:
        type: string
      system_id:
        type: string
      transmit_rate:
        type: string
    title: System Insights WiFi Status
    type: object
  system-insights-windows-security-center:
    properties:
      antispyware:
        type: string
      antivirus:
        type: string
      autoupdate:
        type: string
      collection_time:
        type: string
      firewall:
        type: string
      internet_settings:
        type: string
      system_id:
        type: string
      user_account_control:
        type: string
      windows_security_center_service:
        type: string
    title: System Insights Windows Security Center
    type: object
  system-insights-windows-security-products:
    properties:
      collection_time:
        type: string
      name:
        type: string
      remediation_path:
        type: string
      signatures_up_to_date:
        type: number
      state:
        type: string
      state_timestamp:
        type: string
      system_id:
        type: string
      type:
        type: string
    title: System Insights Windows Security Products
    type: object
  systemfdekey:
    properties:
      key:
        type: string
    required:
      - key
    title: SystemFDEKey
    type: object
  workday-fields:
    properties:
      name:
        type: string
      reportUrl:
        type: string
    title: Workday Fields
    type: object
  workday-input:
    example:
      auth:
        basic:
          password: in tempor ipsum quis
          username: mollit ex
        oauth:
          code: non laborum dolore
      name: dolore tempor
      reportUrl: est sit laboris
    properties:
      auth:
        $ref: '#/definitions/auth-input'
      name:
        type: string
      reportUrl:
        type: string
    title: Workday Input
    type: object
  workday-output:
    properties:
      auth:
        properties:
          basic:
            $ref: '#/definitions/auth-info'
          oauth:
            $ref: '#/definitions/auth-info'
        type: object
      id:
        type: string
      lastImport:
        type: string
      name:
        type: string
      reportUrl:
        type: string
    title: Workday Output
    type: object
  workday-worker:
    properties:
      attributes:
        type: object
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
    title: Workday Worker
    type: object
host: console.jumpcloud.com
info:
  contact:
    name: JumpCloud Support
    url: 'https://jumpcloud.com/support/contact-jumpcloud-support'
  description: |
    # Overview

    JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.

    > **Note:** Customers using the [EU Data Center](https://jumpcloud.com/support/jumpcloud-eu-data-center-faq) should use `https://console.eu.jumpcloud.com` in the endpoint URLs.

    ## API Best Practices

    Read the linked Help Article below for guidance on retrying failed requests to JumpCloud's REST API, as well as best practices for structuring subsequent retry requests. Customizing retry mechanisms based on these recommendations will increase the reliability and dependability of your API calls.

    Covered topics include:
    1. Important Considerations
    2. Supported HTTP Request Methods
    3. Response codes
    4. API Key rotation
    5. Paginating
    6. Error handling
    7. Retry rates

    [JumpCloud Help Center - API Best Practices](https://support.jumpcloud.com/support/s/article/JumpCloud-API-Best-Practices)

    # Directory Objects

    This API offers the ability to interact with some of our core features; otherwise known as Directory Objects. The Directory Objects are:

    * Commands
    * Policies
    * Policy Groups
    * Applications
    * Systems
    * Users
    * User Groups
    * System Groups
    * Radius Servers
    * Directories: Office 365, LDAP,G-Suite, Active Directory
    * Duo accounts and applications.

    The Directory Object is an important concept to understand in order to successfully use JumpCloud API.

    ## JumpCloud Graph

    We've also introduced the concept of the JumpCloud Graph along with  Directory Objects. The Graph is a powerful aspect of our platform which will enable you to associate objects with each other, or establish membership for certain objects to become members of other objects.

    Specific `GET` endpoints will allow you to traverse the JumpCloud Graph to return all indirect and directly bound objects in your organization.

    | ![alt text](https://s3.amazonaws.com/jumpcloud-kb/Knowledge+Base+Photos/API+Docs/jumpcloud_graph.png "JumpCloud Graph Model Example") |
    |:--:|
    | **This diagram highlights our association and membership model as it relates to Directory Objects.** |

    # API Key

    ## Access Your API Key

    To locate your API Key:

    1. Log into the [JumpCloud Admin Console](https://console.jumpcloud.com/).
    2. Go to the username drop down located in the top-right of the Console.
    3. Retrieve your API key from API Settings.

    ## API Key Considerations

    This API key is associated to the currently logged in administrator. Other admins will have different API keys.

    **WARNING** Please keep this API key secret, as it grants full access to any data accessible via your JumpCloud console account.

    You can also reset your API key in the same location in the JumpCloud Admin Console.

    ## Recycling or Resetting Your API Key

    In order to revoke access with the current API key, simply reset your API key. This will render all calls using the previous API key inaccessible.

    Your API key will be passed in as a header with the header name "x-api-key".

    ```bash
    curl -H "x-api-key: [YOUR_API_KEY_HERE]" "https://console.jumpcloud.com/api/v2/systemgroups"
    ```

    # System Context

    * [Introduction](#introduction)
    * [Supported endpoints](#supported-endpoints)
    * [Response codes](#response-codes)
    * [Authentication](#authentication)
    * [Additional examples](#additional-examples)
    * [Third party](#third-party)

    ## Introduction

    JumpCloud System Context Authorization is an alternative way to authenticate with a subset of JumpCloud's REST APIs. Using this method, a system can manage its information and resource associations, allowing modern auto provisioning environments to scale as needed.

    **Notes:**

     * The following documentation applies to Linux Operating Systems only.
     * Systems that have been automatically enrolled using Apple's Device Enrollment Program (DEP) or systems enrolled using the User Portal install are not eligible to use the System Context API to prevent unauthorized access to system groups and resources. If a script that utilizes the System Context API is invoked on a system enrolled in this way, it will display an error.

    ## Supported Endpoints

    JumpCloud System Context Authorization can be used in conjunction with Systems endpoints found in the V1 API and certain System Group endpoints found in the v2 API.

    * A system may fetch, alter, and delete metadata about itself, including manipulating a system's Group and Systemuser associations,
      * `/api/systems/{system_id}` | [`GET`](https://docs.jumpcloud.com/api/1.0/index.html#operation/systems_get) [`PUT`](https://docs.jumpcloud.com/api/1.0/index.html#operation/systems_put)
    * A system may delete itself from your JumpCloud organization
      * `/api/systems/{system_id}` | [`DELETE`](https://docs.jumpcloud.com/api/1.0/index.html#operation/systems_delete)
    * A system may fetch its direct resource associations under v2 (Groups)
      * `/api/v2/systems/{system_id}/memberof` | [`GET`](https://docs.jumpcloud.com/api/2.0/index.html#operation/graph_systemGroupMembership)
      * `/api/v2/systems/{system_id}/associations` | [`GET`](https://docs.jumpcloud.com/api/2.0/index.html#operation/graph_systemAssociationsList)
      * `/api/v2/systems/{system_id}/users` | [`GET`](https://docs.jumpcloud.com/api/2.0/index.html#operation/graph_systemTraverseUser)
    * A system may alter its direct resource associations under v2 (Groups)
      * `/api/v2/systems/{system_id}/associations` | [`POST`](https://docs.jumpcloud.com/api/2.0/index.html#operation/graph_systemAssociationsPost)
    * A system may alter its System Group associations
      * `/api/v2/systemgroups/{group_id}/members` | [`POST`](https://docs.jumpcloud.com/api/2.0/index.html#operation/graph_systemGroupMembersPost)
        * _NOTE_ If a system attempts to alter the system group membership of a different system the request will be rejected

    ## Response Codes

    If endpoints other than those described above are called using the System Context API, the server will return a `401` response.

    ## Authentication

    To allow for secure access to our APIs, you must authenticate each API request.
    JumpCloud System Context Authorization uses [HTTP Signatures](https://tools.ietf.org/html/draft-cavage-http-signatures-00) to authenticate API requests.
    The HTTP Signatures sent with each request are similar to the signatures used by the Amazon Web Services REST API.
    To help with the request-signing process, we have provided an [example bash script](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/shell/SigningExample.sh). This example API request simply requests the entire system record. You must be root, or have permissions to access the contents of the `/opt/jc` directory to generate a signature.

    Here is a breakdown of the example script with explanations.

    First, the script extracts the systemKey from the JSON formatted `/opt/jc/jcagent.conf` file.

    ```bash
    #!/bin/bash
    conf="`cat /opt/jc/jcagent.conf`"
    regex="systemKey\":\"(\w+)\""

    if [[ $conf =~ $regex ]] ; then
      systemKey="${BASH_REMATCH[1]}"
    fi
    ```

    Then, the script retrieves the current date in the correct format.

    ```bash
    now=`date -u "+%a, %d %h %Y %H:%M:%S GMT"`;
    ```

    Next, we build a signing string to demonstrate the expected signature format. The signed string must consist of the [request-line](https://tools.ietf.org/html/rfc2616#page-35) and the date header, separated by a newline character.

    ```bash
    signstr="GET /api/systems/${systemKey} HTTP/1.1\ndate: ${now}"
    ```

    The next step is to calculate and apply the signature. This is a two-step process:

    1. Create a signature from the signing string using the JumpCloud Agent private key: ``printf "$signstr" | openssl dgst -sha256 -sign /opt/jc/client.key``
    2. Then Base64-encode the signature string and trim off the newline characters: ``| openssl enc -e -a | tr -d '\n'``

    The combined steps above result in:

    ```bash
    signature=`printf "$signstr" | openssl dgst -sha256 -sign /opt/jc/client.key | openssl enc -e -a | tr -d '\n'` ;
    ```

    Finally, we make sure the API call sending the signature has the same Authorization and Date header values, HTTP method, and URL that were used in the signing string.

    ```bash
    curl -iq \
      -H "Accept: application/json" \
      -H "Content-Type: application/json" \
      -H "Date: ${now}" \
      -H "Authorization: Signature keyId=\"system/${systemKey}\",headers=\"request-line date\",algorithm=\"rsa-sha256\",signature=\"${signature}\"" \
      --url https://console.jumpcloud.com/api/systems/${systemKey}
    ```

    ### Input Data

    All PUT and POST methods should use the HTTP Content-Type header with a value of 'application/json'. PUT methods are used for updating a record. POST methods are used to create a record.

    The following example demonstrates how to update the `displayName` of the system.

    ```bash
    signstr="PUT /api/systems/${systemKey} HTTP/1.1\ndate: ${now}"
    signature=`printf "$signstr" | openssl dgst -sha256 -sign /opt/jc/client.key | openssl enc -e -a | tr -d '\n'` ;

    curl -iq \
      -d "{\"displayName\" : \"updated-system-name-1\"}" \
      -X "PUT" \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -H "Date: ${now}" \
      -H "Authorization: Signature keyId=\"system/${systemKey}\",headers=\"request-line date\",algorithm=\"rsa-sha256\",signature=\"${signature}\"" \
      --url https://console.jumpcloud.com/api/systems/${systemKey}
    ```

    ### Output Data

    All results will be formatted as JSON.

    Here is an abbreviated example of response output:

    ```json
    {
      "_id": "625ee96f52e144993e000015",
      "agentServer": "lappy386",
      "agentVersion": "0.9.42",
      "arch": "x86_64",
      "displayName": "ubuntu-1204",
      "firstContact": "2013-10-16T19:30:55.611Z",
      "hostname": "ubuntu-1204"
      ...
    ```

    ## Additional Examples

    ### Signing Authentication Example

    This example demonstrates how to make an authenticated request to fetch the JumpCloud record for this system.

    [SigningExample.sh](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/shell/SigningExample.sh)

    ### Shutdown Hook

    This example demonstrates how to make an authenticated request on system shutdown.
    Using an init.d script registered at run level 0, you can call the System Context API as the system is shutting down.

    [Instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd) is an example of an init.d script that only runs at system shutdown.

    After customizing the [instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd) script, you should install it on the system(s) running the JumpCloud agent.

    1. Copy the modified [instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd) to `/etc/init.d/instance-shutdown`.
    2. On Ubuntu systems, run `update-rc.d instance-shutdown defaults`. On RedHat/CentOS systems, run `chkconfig --add instance-shutdown`.

    ## Third Party

    ### Chef Cookbooks

    [https://github.com/nshenry03/jumpcloud](https://github.com/nshenry03/jumpcloud)

    [https://github.com/cjs226/jumpcloud](https://github.com/cjs226/jumpcloud)

    # Multi-Tenant Portal Headers

    Multi-Tenant Organization API Headers are available for JumpCloud Admins to use when making API requests from Organizations that have multiple managed organizations.

    The `x-org-id` is a required header for all multi-tenant admins when making API requests to JumpCloud. This header will define to which organization you would like to make the request.

    **NOTE** Single Tenant Admins do not need to provide this header when making an API request.

    ## Header Value

    `x-org-id`

    ## API Response Codes

    * `400` Malformed ID.
    * `400` x-org-id and Organization path ID do not match.
    * `401` ID not included for multi-tenant admin
    * `403` ID included on unsupported route.
    * `404` Organization ID Not Found.

    ```bash
    curl -X GET https://console.jumpcloud.com/api/v2/directories \
      -H 'accept: application/json' \
      -H 'content-type: application/json' \
      -H 'x-api-key: {API_KEY}' \
      -H 'x-org-id: {ORG_ID}'

    ```

    ## To Obtain an Individual Organization ID via the UI

    As a prerequisite, your Primary Organization will need to be setup for Multi-Tenancy. This provides access to the Multi-Tenant Organization Admin Portal.

    1. Log into JumpCloud [Admin Console](https://console.jumpcloud.com). If you are a multi-tenant Admin, you will automatically be routed to the Multi-Tenant Admin Portal.
    2. From the Multi-Tenant Portal's primary navigation bar, select the Organization you'd like to access.
    3. You will automatically be routed to that Organization's Admin Console.
    4. Go to Settings in the sub-tenant's primary navigation.
    5. You can obtain your Organization ID below your Organization's Contact Information on the Settings page.

    ## To Obtain All Organization IDs via the API

    * You can make an API request to this endpoint using the API key of your Primary Organization.  `https://console.jumpcloud.com/api/organizations/` This will return all your managed organizations.

    ```bash
    curl -X GET \
      https://console.jumpcloud.com/api/organizations/ \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -H 'x-api-key: {API_KEY}'
    ```

    # SDKs

    You can find language specific SDKs that can help you kickstart your Integration with JumpCloud in the following GitHub repositories:

    * [Python](https://github.com/TheJumpCloud/jcapi-python)
    * [Go](https://github.com/TheJumpCloud/jcapi-go)
    * [Ruby](https://github.com/TheJumpCloud/jcapi-ruby)
    * [Java](https://github.com/TheJumpCloud/jcapi-java)
  title: JumpCloud API
  version: '2.0'
parameters:
  'trait:GraphObjectWithPaths:details':
    description: This will provide detail descriptive response for the request.
    enum:
      - v1
    in: query
    name: details
    type: string
  'trait:authnfallbackpolicy:resourceType':
    in: path
    items:
      enum:
        - userportal
        - application
        - ldap
      type: string
    name: resource_type
    required: true
    type: string
  'trait:bulkJobQueryParameters:suppressEmail':
    description: |
      An option indicating whether to suppress the job results email that will
      otherwise be sent to the Administrator who created the job. If true, the
      email won't be sent. If omitted or false, the email will be sent.
    in: query
    name: suppressEmail
    type: boolean
  'trait:fields:fields':
    default: []
    description: |
      The comma separated fields included in the returned records.
      If omitted, the default list of fields will be returned.
    in: query
    items:
      type: string
    name: fields
    type: array
  'trait:filter:filter':
    default: []
    description: |-
      A filter to apply to the query.

      **Filter structure**: `<field>:<operator>:<value>`.

      **field** = Populate with a valid field from an endpoint response.

      **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.
      _Note: v1 operators differ from v2 operators._

      **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.

      **EX:** `GET /api/v2/groups?filter=name:eq:Test+Group`
    in: query
    items:
      type: string
    name: filter
    type: array
  'trait:graphTargetsActiveDirectory:targets':
    description: Targets which a "active_directory" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsApplication:targets':
    description: Targets which a "application" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsCommand:targets':
    description: Targets which a "command" can be associated to.
    in: query
    items:
      enum:
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsGSuite:targets':
    description: Targets which a "g_suite" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsIDPRoutingPolicy:targets':
    description: Targets which a "idp_routing_policy" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsLdapServer:targets':
    description: Targets which a "ldap_server" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsOffice365:targets':
    description: Targets which a "office_365" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsPasswordManagerItem:targets':
    description: Targets which a "password_manager_item" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsPolicy:targets':
    description: Targets which a "policy" can be associated to.
    in: query
    items:
      enum:
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsPolicyGroup:targets':
    description: Targets which a "policy_group" can be associated to.
    in: query
    items:
      enum:
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsRadiusServer:targets':
    description: Targets which a "radius_server" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsRule:targets':
    description: Targets which a "rule" can be associated to.
    in: query
    items:
      enum:
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsSoftwareApp:targets':
    description: Targets which a "software_app" can be associated to.
    in: query
    items:
      enum:
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsSystem:targets':
    description: Targets which a "system" can be associated to.
    in: query
    items:
      enum:
        - command
        - policy
        - policy_group
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsSystemGroup:targets':
    description: Targets which a "system_group" can be associated to.
    in: query
    items:
      enum:
        - command
        - policy
        - policy_group
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsUser:targets':
    description: Targets which a "user" can be associated to.
    in: query
    items:
      enum:
        - active_directory
        - application
        - g_suite
        - idp_routing_policy
        - ldap_server
        - office_365
        - password_manager_item
        - radius_server
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsUserGroup:targets':
    description: Targets which a "user_group" can be associated to.
    in: query
    items:
      enum:
        - active_directory
        - application
        - g_suite
        - idp_routing_policy
        - ldap_server
        - office_365
        - password_manager_item
        - radius_server
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:gsuite:allowEmptyFields':
    default: false
    description: '[EXPERIMENTAL] Allow empty fields of the user object to be sent in the response'
    in: query
    name: allowEmptyFields
    type: boolean
  'trait:gsuite:maxResults':
    description: 'Google Directory API maximum number of results per page. See https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/list.'
    in: query
    name: maxResults
    type: integer
  'trait:gsuite:orderBy':
    description: 'Google Directory API sort field parameter. See https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/list.'
    in: query
    name: orderBy
    type: string
  'trait:gsuite:pageToken':
    description: 'Google Directory API token used to access the next page of results. See https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/list.'
    in: query
    name: pageToken
    type: string
  'trait:gsuite:query':
    description: 'Google Directory API search parameter. See https://developers.google.com/admin-sdk/directory/v1/guides/search-users.'
    in: query
    name: query
    type: string
  'trait:gsuite:sortOrder':
    description: 'Google Directory API sort direction parameter. See https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/list.'
    in: query
    name: sortOrder
    type: string
  'trait:limit:limit':
    default: 10
    description: The number of records to return at once. Limited to 100.
    in: query
    name: limit
    type: integer
  'trait:limitDefault1:limit':
    default: 1
    in: query
    maximum: 100
    minimum: 0
    name: limit
    type: integer
  'trait:limitMax100:limit':
    default: 10
    in: query
    maximum: 100
    minimum: 0
    name: limit
    type: integer
  'trait:listCount:x-total-count':
    in: header
    name: x-total-count
    type: integer
  'trait:listCount:x-unfiltered-total-count':
    description: 'If provided in the request with any non-empty value, this header will be returned on the response populated with the total count of objects without filters taken into account'
    in: header
    name: x-unfiltered-total-count
    type: integer
  'trait:multiTenantRequestHeaders:x-org-id':
    description: Organization identifier that can be obtained from console settings.
    in: header
    name: x-org-id
    type: string
  'trait:multiTenantRequestHeaders:x-provider-id':
    description: Multi-tenant Provider identifier that can be obtained from console settings.
    in: header
    name: x-provider-id
    required: false
    type: string
  'trait:o365:ConsistencyLevel':
    description: 'Defines the consistency header for O365 requests. See https://docs.microsoft.com/en-us/graph/api/user-list?view=graph-rest-1.0&tabs=http#request-headers'
    in: header
    name: ConsistencyLevel
    type: string
  'trait:search:search':
    default: ''
    description: The search string to query records
    in: query
    name: search
    type: string
  'trait:skip:skip':
    default: 0
    description: The offset into the records to return.
    in: query
    minimum: 0
    name: skip
    required: false
    type: integer
  'trait:sort:sort':
    default: []
    description: |
      The comma separated fields used to sort the collection.
      Default sort is ascending, prefix with `-` to sort descending.
    in: query
    items:
      type: string
    name: sort
    type: array
  'trait:sortIgnoreCase:sortIgnoreCase':
    default: []
    description: |
      The comma separated fields used to sort the collection, ignoring case.
      Default sort is ascending, prefix with `-` to sort descending.
    in: query
    items:
      type: string
    name: sortIgnoreCase
    type: array
  'trait:systemContextAuth:Authorization':
    description: Authorization header for the System Context API
    in: header
    name: Authorization
    type: string
  'trait:systemContextAuth:Date':
    description: Current date header for the System Context API
    in: header
    name: Date
    type: string
  'trait:systemInsightsCertificatesFilter:filter':
    default: []
    description: |
      Supported operators are: eq, in. e.g:
      Filter for single value:
      `filter=field:eq:value`
      Filter value in a list: (note "pipe" character: `|` separating values)
      `filter=field:in:value1|value2|value3`
      Note: You can only filter by `system_id` and `common_name`
    in: query
    items:
      type: string
    name: filter
    type: array
  'trait:systemInsightsControlsFilter:filter':
    default: []
    description: |
      Supported operators are: eq, in. e.g:
      Filter for single value:
      `filter=field:eq:value`
      Filter value in a list: (note "pipe" character: `|` separating values)
      `filter=field:in:value1|value2|value3`
      Note: You can only filter by `system_id` and `name`
    in: query
    items:
      type: string
    name: filter
    type: array
  'trait:systemInsightsFilter:filter':
    default: []
    description: |
      Supported operators are: eq, in. e.g:
      Filter for single value:
      `filter=field:eq:value`
      Filter for any value in a list: (note "pipe" character: `|` separating values)
      `filter=field:in:value1|value2|value3`
    in: query
    items:
      type: string
    name: filter
    type: array
  'trait:systemInsightsFilterUptime:filter':
    default: []
    description: |
      Supported operators are: eq, gte, in. e.g:
      Filter for single value:
      `filter=field:gte:value`
      Filter for any value in a list: (note "pipe" character: `|` separating values)
      `filter=field:in:value1|value2|value3`
    in: query
    items:
      type: string
    name: filter
    type: array
  'trait:systemInsightsLimit:limit':
    default: 10
    in: query
    maximum: 10000
    minimum: 0
    name: limit
    type: integer
  'trait:systemInsightsSort:sort':
    default: []
    description: |
      The comma separated fields used to sort the collection.
      Default sort is ascending, prefix with `-` to sort descending. e.g:
      Sort by single field:
      `sort=field`
      Sort descending by single field:
      `sort=-field`
      Sort by multiple fields:
      `sort=field1,-field2,field3`
    in: query
    items:
      type: string
    name: sort
    type: array
paths:
  /accessrequests:
    post:
      description: Endpoint for adding a new access request
      operationId: AccessRequestApi_CreateAccessRequest
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.ingresso.CreateAccessRequestsRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.ingresso.CreateAccessRequestsResponse'
      security:
        - x-api-key: []
      summary: Create Access Request
      tags:
        - Systems
      x-dynamic-gateway: true
      x-scopes:
        - accessrequest
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/accessrequests \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"additionalAttributes":{},"applicationIntId":"string","expiry":"2019-08-24T14:15:22Z","operationId":"string","organizationObjectId":"string","remarks":"string","requestorId":"string","resourceId":"string","resourceType":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/accessrequests"

            payload = {
                "additionalAttributes": {},
                "applicationIntId": "string",
                "expiry": "2019-08-24T14:15:22Z",
                "operationId": "string",
                "organizationObjectId": "string",
                "remarks": "string",
                "requestorId": "string",
                "resourceId": "string",
                "resourceType": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/accessrequests' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"additionalAttributes":{},"applicationIntId":"string","expiry":"2019-08-24T14:15:22Z","operationId":"string","organizationObjectId":"string","remarks":"string","requestorId":"string","resourceId":"string","resourceType":"string"}'
  '/accessrequests/{accessId}':
    get:
      description: Endpoint for getting all access requests by access id
      operationId: AccessRequestApi_GetAccessRequest
      parameters:
        - in: path
          name: accessId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.ingresso.GetAccessRequestResponse'
      security:
        - x-api-key: []
      summary: Get all Access Requests by Access Id
      tags:
        - Systems
      x-dynamic-gateway: true
      x-scopes:
        - accessrequest.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/accessrequests/{accessId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/accessrequests/{accessId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/accessrequests/{accessId}' -Method GET -Headers $headers
    put:
      description: Endpoint for updating access request by id
      operationId: AccessRequestApi_UpdateAccessRequest
      parameters:
        - in: path
          name: accessId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              additionalAttributes:
                type: object
              expiry:
                format: date-time
                type: string
              organizationObjectId:
                format: byte
                type: string
              remarks:
                type: string
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.ingresso.UpdateAccessRequestsResponse'
      security:
        - x-api-key: []
      summary: Update access request by id
      tags:
        - Systems
      x-dynamic-gateway: true
      x-scopes:
        - accessrequest
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/accessrequests/{accessId} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"additionalAttributes":{},"expiry":"2019-08-24T14:15:22Z","organizationObjectId":"string","remarks":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/accessrequests/{accessId}"

            payload = {
                "additionalAttributes": {},
                "expiry": "2019-08-24T14:15:22Z",
                "organizationObjectId": "string",
                "remarks": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/accessrequests/{accessId}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"additionalAttributes":{},"expiry":"2019-08-24T14:15:22Z","organizationObjectId":"string","remarks":"string"}'
  '/accessrequests/{accessId}/revoke':
    post:
      description: Endpoint for revoking access request by id
      operationId: AccessRequestApi_RevokeAccessRequest
      parameters:
        - in: path
          name: accessId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.ingresso.RevokeAccessRequestsResponse'
      security:
        - x-api-key: []
      summary: Revoke access request by id
      tags:
        - Systems
      x-dynamic-gateway: true
      x-scopes:
        - accessrequest
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/accessrequests/{accessId}/revoke \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/accessrequests/{accessId}/revoke"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/accessrequests/{accessId}/revoke' -Method POST -Headers $headers
  '/accountManagerCalendar/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - accounts-page-upgrade
  /activedirectories:
    get:
      description: |-
        This endpoint allows you to list all your Active Directory Instances.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/activedirectories/ \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: activedirectories_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/active-directory'
            type: array
      security:
        - x-api-key: []
      summary: List Active Directories
      tags:
        - Active Directory
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/activedirectories?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters: []
    post:
      description: |-
        This endpoint allows you to create a new Active Directory.


        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/activedirectories/ \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "domain": "{DC=AD_domain_name;DC=com}"
          }'
        ```
      operationId: activedirectories_post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/active-directory'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/active-directory'
      security:
        - x-api-key: []
      summary: Create a new Active Directory
      tags:
        - Active Directory
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/activedirectories \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"delegationState":"ENABLED","domain":"string","groupsEnabled":true,"useCase":"UNSET"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories"

            payload = {
                "delegationState": "ENABLED",
                "domain": "string",
                "groupsEnabled": True,
                "useCase": "UNSET"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"delegationState":"ENABLED","domain":"string","groupsEnabled":true,"useCase":"UNSET"}'
    x-functionalities-tags:
      - active-directory
  /activedirectories/translation-rules/preview:
    post:
      description: |
        This endpoint previews the translation rules for a user.

        #### Sample Request
        ```
        curl -X POST '[https://console.jumpcloud.com/api/v2/activedirectories/](https://console.jumpcloud.com/api/v2/activedirectories/){activedirectory_id}/translationrules/preview' \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -H 'x-org-id: {ORG_ID}' \
          -d '{
            "userObjectId": "{USER_ID_HEX}",
            "idmTranslationRules": [
              {
                "source": "department",
                "destination": "customDepartment",
                "sourceType": "PATH",
                "direction": "IMPORT",
                "appliedOn": [
                  "CREATE"
                ]
              }
            ]
          }'
        ```
      operationId: activedirectoriesTranslationRules_preview
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ActiveDirectoriesTranslationRulesPreviewRequest'
      responses:
        '200':
          description: Result of the preview operation.
          schema:
            $ref: '#/definitions/ActiveDirectoriesTranslationRulesPreviewResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Preview of Translation Rules
      tags:
        - Translation Rules
        - Active Directory
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/activedirectories/translation-rules/preview \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"activeDirectoryId":"string","translationRules":[{"appliedOn":["CREATE"],"default":true,"destination":"string","direction":"UNSPECIFIED","editable":true,"id":"string","required":true,"source":"string","sourceType":"PATH"}],"userObjectId":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/translation-rules/preview"

            payload = {
                "activeDirectoryId": "string",
                "translationRules": [
                    {
                        "appliedOn": ["CREATE"],
                        "default": True,
                        "destination": "string",
                        "direction": "UNSPECIFIED",
                        "editable": True,
                        "id": "string",
                        "required": True,
                        "source": "string",
                        "sourceType": "PATH"
                    }
                ],
                "userObjectId": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/translation-rules/preview' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"activeDirectoryId":"string","translationRules":[{"appliedOn":["CREATE"],"default":true,"destination":"string","direction":"UNSPECIFIED","editable":true,"id":"string","required":true,"source":"string","sourceType":"PATH"}],"userObjectId":"string"}'
  '/activedirectories/{activedirectory_id}/agents':
    get:
      description: |-
        This endpoint allows you to list all your Active Directory Agents for a given Instance.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: activedirectories_agentsList
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/active-directory-agent-list'
            type: array
      security:
        - x-api-key: []
      summary: List Active Directory Agents
      tags:
        - Active Directory
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents?limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents"

            querystring = {"limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents?limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: activedirectory_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to create a new Active Directory Agent.


        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{ "agent_type":"{SYNC}" }'
        ```
      operationId: activedirectories_agentsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/active-directory-agent'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/active-directory-agent-get'
      security:
        - x-api-key: []
      summary: Create a new Active Directory Agent
      tags:
        - Active Directory
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"agentType":"SYNC"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents"

            payload = {"agentType": "SYNC"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"agentType":"SYNC"}'
    x-functionalities-tags:
      - active-directory
  '/activedirectories/{activedirectory_id}/agents/{agent_id}':
    delete:
      description: |-
        This endpoint deletes an Active Directory agent.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents/{agent_id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: activedirectories_agentsDelete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
      security:
        - x-api-key: []
      summary: Delete Active Directory Agent
      tags:
        - Active Directory
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents/{agent_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents/{agent_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents/{agent_id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns an Active Directory agent.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents/{agent_id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: activedirectories_agentsGet
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/active-directory-agent-list'
      security:
        - x-api-key: []
      summary: Get Active Directory Agent
      tags:
        - Active Directory
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents/{agent_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents/{agent_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/agents/{agent_id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: activedirectory_id
        required: true
        type: string
      - in: path
        name: agent_id
        required: true
        type: string
    x-functionalities-tags:
      - active-directory
  '/activedirectories/{activedirectory_id}/associations':
    get:
      description: |-
        This endpoint returns the direct associations of this Active Directory instance.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Active Directory and Users.


        #### Sample Request
        ```
        curl -X GET 'https://console.jumpcloud.com/api/v2/activedirectories/{ActiveDirectory_ID}/associations?targets=user \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_activeDirectoryAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsActiveDirectory:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of an Active Directory instance
      tags:
        - Graph
        - Active Directory
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - in: path
        name: activedirectory_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the _direct_ associations of an Active Directory instance.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Active Directory and Users.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/activedirectories/{AD_Instance_ID}/associations \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "user",
            "id": "{User_ID}"
          }'
        ```
      operationId: graph_activeDirectoryAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-ActiveDirectory'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
      security:
        - x-api-key: []
      summary: Manage the associations of an Active Directory instance
      tags:
        - Graph
        - Active Directory
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"user"}'
    x-functionalities-tags:
      - active-directory
  '/activedirectories/{activedirectory_id}/translation-rules':
    get:
      description: |
        This endpoint allows you to list all translation rules for a given Active Directory domain instance.

        #### Sample Request
        ```
        curl -X GET '[https://console.jumpcloud.com/api/v2/activedirectories/](https://console.jumpcloud.com/api/v2/activedirectories/){activedirectory_id}/translationrules?limit=100&skip=0' \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -H 'x-org-id: {ORG_ID}'
        ```
      operationId: activedirectoriesTranslationRules_list
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
      responses:
        '200':
          description: A list of translation rules.
          schema:
            $ref: '#/definitions/ActiveDirectoriesTranslationRulesListResponse'
      security:
        - x-api-key: []
      summary: List Translation Rules of the given active directory
      tags:
        - Translation Rules
        - Active Directory
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules?filter=&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules"

            querystring = {"filter":"","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules?filter=&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Active Directory instance.
        in: path
        name: activedirectory_id
        required: true
        type: string
    post:
      description: |
        This endpoint allows you to create a new translation rule for a given Active Directory domain instance.

        #### Sample Request
        ```
        curl -X POST '[https://console.jumpcloud.com/api/v2/activedirectories/](https://console.jumpcloud.com/api/v2/activedirectories/){activedirectory_id}/translationrules' \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -H 'x-org-id: {ORG_ID}' \
          -d '{
            "organization_object_id": "{ORG_ID_BASE64}",
            "domain_object_id": "{AD_ID_BASE64}",
            "translation_rule": {
              "source": "department",
              "destination": "customDepartment",
              "source_type": "PATH",
              "direction": "EXPORT",
              "applied_on": [
                "CREATE",
                "UPDATE"
              ]
            }
          }'
        ```
      operationId: activedirectoriesTranslationRules_post
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/jumpcloud.idm.IdmTranslationRulesInsertRequest'
      responses:
        '200':
          description: The created translation rule's object ID.
          schema:
            $ref: '#/definitions/ActiveDirectoriesTranslationRulesInsertResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Create Translation Rule
      tags:
        - Translation Rules
        - Active Directory
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"appliedOn":["CREATE"],"destination":"string","direction":"UNSPECIFIED","source":"string","sourceType":"PATH"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules"

            payload = {
                "appliedOn": ["CREATE"],
                "destination": "string",
                "direction": "UNSPECIFIED",
                "source": "string",
                "sourceType": "PATH"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"appliedOn":["CREATE"],"destination":"string","direction":"UNSPECIFIED","source":"string","sourceType":"PATH"}'
  '/activedirectories/{activedirectory_id}/translation-rules/bulk':
    parameters:
      - in: path
        name: activedirectory_id
        required: true
        type: string
    post:
      description: |
        This endpoint allows performing multiple translation rule operations (insert, update, delete) in a single request.

        #### Sample Request
        ```
        curl -X POST '[https://console.jumpcloud.com/api/v2/activedirectories/](https://console.jumpcloud.com/api/v2/activedirectories/){activedirectory_id}/translationrules/bulk' \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -H 'x-org-id: {ORG_ID}' \
          -d '{
            "insertTranslationRule": [
              {
                "source": "title",
                "destination": "jobTitle",
                "sourceType": "PATH",
                "direction": "EXPORT",
                "appliedOn": [
                  "CREATE",
                  "UPDATE"
                ]
              }
            ],
            "updateTranslationRule": [
              {
                "objectId": "{RULE_ID_BASE64_1}",
                "source": "department",
                "destination": "customDepartmentV3",
                "sourceType": "GOLANG_TEMPLATE",
                "appliedOn": [
                  "UPDATE"
                ]
              }
            ],
            "deleteTranslationRuleObjectIds": [
              "{RULE_ID_BASE64_2}",
              "{RULE_ID_BASE64_3}"
            ]
          }'
        ```
      operationId: activedirectoriesTranslationRules_bulk
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ActiveDirectoriesTranslationRulesBulkRequest'
      responses:
        '200':
          description: Result of the bulk operation.
          schema:
            $ref: '#/definitions/jumpcloud.idm.TranslationRulesBulkResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Bulk Translation Rules Operations
      tags:
        - Translation Rules
        - Active Directory
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules/bulk \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"deleteTranslationRuleObjectIds":["string"],"insertTranslationRules":[{"appliedOn":["CREATE"],"destination":"string","direction":"UNSPECIFIED","source":"string","sourceType":"PATH"}],"updateTranslationRules":[{"appliedOn":["CREATE"],"destination":"string","direction":"UNSPECIFIED","objectId":"string","source":"string","sourceType":"PATH"}]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules/bulk"

            payload = {
                "deleteTranslationRuleObjectIds": ["string"],
                "insertTranslationRules": [
                    {
                        "appliedOn": ["CREATE"],
                        "destination": "string",
                        "direction": "UNSPECIFIED",
                        "source": "string",
                        "sourceType": "PATH"
                    }
                ],
                "updateTranslationRules": [
                    {
                        "appliedOn": ["CREATE"],
                        "destination": "string",
                        "direction": "UNSPECIFIED",
                        "objectId": "string",
                        "source": "string",
                        "sourceType": "PATH"
                    }
                ]
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules/bulk' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"deleteTranslationRuleObjectIds":["string"],"insertTranslationRules":[{"appliedOn":["CREATE"],"destination":"string","direction":"UNSPECIFIED","source":"string","sourceType":"PATH"}],"updateTranslationRules":[{"appliedOn":["CREATE"],"destination":"string","direction":"UNSPECIFIED","objectId":"string","source":"string","sourceType":"PATH"}]}'
  '/activedirectories/{activedirectory_id}/translation-rules/{translation_rule_object_id}':
    delete:
      description: |
        This endpoint allows you to delete a specific translation rule.

        #### Sample Request
        ```
        curl -X DELETE '[https://console.jumpcloud.com/api/v2/activedirectories/](https://console.jumpcloud.com/api/v2/activedirectories/){activedirectory_id}/translationrules/{translation_rule_object_id}' \
          -H 'accept: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -H 'x-org-id: {ORG_ID}'
        ```
      operationId: activedirectoriesTranslationRules_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: Translation rule deleted successfully.
          schema:
            example: true
            type: boolean
        default:
          description: Error response
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Delete Translation Rule
      tags:
        - Translation Rules
        - Active Directory
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules/{translation_rule_object_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules/{translation_rule_object_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules/{translation_rule_object_id}' -Method DELETE -Headers $headers
    parameters:
      - in: path
        name: activedirectory_id
        required: true
        type: string
      - in: path
        name: translation_rule_object_id
        required: true
        type: string
    put:
      description: |
        This endpoint allows you to update an existing translation rule. It supports partial updates using PATCH.

        #### Sample Request
        ```
        curl -X PUT '[https://console.jumpcloud.com/api/v2/activedirectories/](https://console.jumpcloud.com/api/v2/activedirectories/){activedirectory_id}/translationrules/{translation_rule_object_id}' \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -H 'x-org-id: {ORG_ID}' \
          -d '{
            "organization_object_id": "{ORG_ID_BASE64}",
            "domain_object_id": "{AD_ID_BASE64}",
            "translation_rule_object_id": "{RULE_ID_BASE64}",
            "translation_rule": {
              "source": "department",
              "destination": "customDepartmentV2",
              "source_type": "PATH",
              "applied_on": [
                "UPDATE"
              ]
            }
          }'
        ```
      operationId: activedirectoriesTranslationRules_update
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/jumpcloud.idm.IdmTranslationRulesUpdateRequest'
      responses:
        '200':
          description: The updated translation rule's object ID.
          schema:
            $ref: '#/definitions/ActiveDirectoriesTranslationRulesUpdateResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Update Translation Rule
      tags:
        - Translation Rules
        - Active Directory
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules/{translation_rule_object_id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"appliedOn":["CREATE"],"destination":"string","source":"string","sourceType":"PATH"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules/{translation_rule_object_id}"

            payload = {
                "appliedOn": ["CREATE"],
                "destination": "string",
                "source": "string",
                "sourceType": "PATH"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/translation-rules/{translation_rule_object_id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"appliedOn":["CREATE"],"destination":"string","source":"string","sourceType":"PATH"}'
  '/activedirectories/{activedirectory_id}/usergroups':
    get:
      description: |-
        This endpoint will return all Users Groups bound to an Active Directory instance, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Active Directory instance to the corresponding User Group; this array represents all grouping and/or associations that would have to be removed to deprovision the User Group from this Active Directory instance.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/activedirectories/{ActiveDirectory_ID}/usergroups \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_activeDirectoryTraverseUserGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Groups bound to an Active Directory instance
      tags:
        - Graph
        - Active Directory
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/usergroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/usergroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/usergroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Active Directory instance.
        in: path
        name: activedirectory_id
        required: true
        type: string
    x-functionalities-tags:
      - active-directory
  '/activedirectories/{activedirectory_id}/users':
    get:
      description: |-
        This endpoint will return all Users bound to an Active Directory instance, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Active Directory instance to the corresponding User; this array represents all grouping and/or associations that would have to be removed to deprovision the User from this Active Directory instance.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/activedirectories/{ActiveDirectory_ID}/users \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_activeDirectoryTraverseUser
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Users bound to an Active Directory instance
      tags:
        - Graph
        - Active Directory
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/users?filter=&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/users"

            querystring = {"filter":"","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{activedirectory_id}/users?filter=&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Active Directory instance.
        in: path
        name: activedirectory_id
        required: true
        type: string
    x-functionalities-tags:
      - active-directory
  '/activedirectories/{id}':
    delete:
      description: |-
        This endpoint allows you to delete an Active Directory Instance.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/activedirectories/{ActiveDirectory_ID} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: activedirectories_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/active-directory'
      security:
        - x-api-key: []
      summary: Delete an Active Directory
      tags:
        - Active Directory
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns a specific Active Directory.

        #### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/activedirectories/{ActiveDirectory_ID} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: activedirectories_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/active-directory'
      security:
        - x-api-key: []
      summary: Get an Active Directory
      tags:
        - Active Directory
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of this Active Directory instance.
        in: path
        name: id
        required: true
        type: string
    patch:
      description: |-
        This endpoint allows you to update Active Directory.
        Here use case can be one of:
        - AD as Authority - password in AD - 2-way sync use case is selected.
        - JC as Authority - one-way sync from AD.
        - Two way sync -  2-way sync use case is selected


        #### Sample Request
        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/activedirectories/{Domain_ID} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
                "domain": "{DC=DOMAIN;DC=COM}",
                "use_case": "{ADASAUTHORITY}",
                "delegation_state": "{ENABLED}"
            }' \
        ```
      operationId: activedirectories_patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/active-directory'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/active-directory'
      security:
        - x-api-key: []
      summary: Update Active Directory
      tags:
        - Active Directory
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/activedirectories/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"delegationState":"ENABLED","domain":"string","groupsEnabled":true,"useCase":"UNSET"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{id}"

            payload = {
                "delegationState": "ENABLED",
                "domain": "string",
                "groupsEnabled": True,
                "useCase": "UNSET"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{id}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"delegationState":"ENABLED","domain":"string","groupsEnabled":true,"useCase":"UNSET"}'
    x-functionalities-tags:
      - active-directory
  '/activedirectories/{provider_name}/translation-rules/recommendation':
    get:
      description: |
        This endpoint allows you to list all translation rules for a given Active Directory domain instance.

        #### Sample Request
        ```
        curl -X GET '[https://console.jumpcloud.com/api/v2/activedirectories/](https://console.jumpcloud.com/api/v2/activedirectories/){provider_name}/translationrules/recommendations?limit=100&skip=0' \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -H 'x-org-id: {ORG_ID}'
        ```
      operationId: activedirectoriesTranslationRules_recommendations
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
      responses:
        '200':
          description: A list of translation rules.
          schema:
            $ref: '#/definitions/ActiveDirectoriesTranslationRulesListResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List Recommendation Translation Rules of the given active directory
      tags:
        - Translation Rules
        - Active Directory
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/activedirectories/{provider_name}/translation-rules/recommendation?filter=&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/activedirectories/{provider_name}/translation-rules/recommendation"

            querystring = {"filter":"","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/activedirectories/{provider_name}/translation-rules/recommendation?filter=&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: Provider name.
        in: path
        name: provider_name
        required: true
        type: string
  '/administrators/{administrator_id}/organizationlinks/{id}':
    delete:
      description: This endpoint removes the association link between an Administrator and an Organization.
      operationId: administratorOrganizations_removeByAdministrator
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Remove association between an Administrator and an Organization.
      tags:
        - Administrators
        - Organizations
        - Managed Service Provider
      x-scopes:
        - administrators
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/administrators/{administrator_id}/organizationlinks/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/administrators/{administrator_id}/organizationlinks/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/administrators/{administrator_id}/organizationlinks/{id}' -Method DELETE -Headers $headers
    parameters:
      - in: path
        name: administrator_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - admin
  '/administrators/{id}/organizationlinks':
    get:
      description: This endpoint returns the association links between an Administrator and Organizations.
      operationId: administratorOrganizations_listByAdministrator
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AdministratorOrganizationLink'
            type: array
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List the association links between an Administrator and Organizations.
      tags:
        - Administrators
        - Organizations
        - Managed Service Provider
      x-scopes:
        - administrators
        - administrators.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/administrators/{id}/organizationlinks?limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/administrators/{id}/organizationlinks"

            querystring = {"limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/administrators/{id}/organizationlinks?limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - in: path
        name: id
        required: true
        type: string
    post:
      description: This endpoint allows you to grant Administrator access to an Organization.
      operationId: administratorOrganizations_createByAdministrator
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AdministratorOrganizationLinkReq'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/AdministratorOrganizationLink'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Allow Adminstrator access to an Organization.
      tags:
        - Administrators
        - Organizations
        - Managed Service Provider
      x-scopes:
        - administrators
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/administrators/{id}/organizationlinks \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"organization":"6230a0d26a4e4bc86c6b36f1"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/administrators/{id}/organizationlinks"

            payload = {"organization": "6230a0d26a4e4bc86c6b36f1"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/administrators/{id}/organizationlinks' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"organization":"6230a0d26a4e4bc86c6b36f1"}'
    x-functionalities-tags:
      - admin
  /alerts:
    get:
      description: This endpoint allows you to get all alerts.
      operationId: AlertsService_ListAlerts
      parameters:
        - collectionFormat: multi
          description: "A filter to apply to the query.\n\n\t**Filter structure**: `<field>:<operator>:<value>`.\n\n\t**field** = Populate with a valid field from an endpoint response.\n\n\t**operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.\n\n\t**value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.\n\n\t**Example** `GET /api/v2/groups?filter=name:eq:Test+Group`\n"
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
        - collectionFormat: multi
          description: The fields on the items listed to return.
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - collectionFormat: multi
          description: |-
            An optional comma separated field names used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          in: query
          items:
            type: string
          name: sort
          required: false
          type: array
        - default: '100'
          description: |-
            The number of alerts to return at once.
            If the number of alerts returned is less than `limit` there are no more alerts to fetch.
            If the number of alerts returned is equal to limit there may be more alerts to fetch. Increment `skip` by `limit` to get the next set of alerts.
          format: int64
          in: query
          name: limit
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.alerts.ListAlertsResponse'
      security:
        - x-api-key: []
      summary: This endpoint provides details of all alerts.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.alerts
        - healthmonitoring.alerts.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/alerts?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/alerts"

            querystring = {"filter":"SOME_ARRAY_VALUE","fields":"SOME_ARRAY_VALUE","skip":"0","sort":"SOME_ARRAY_VALUE","limit":"100"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/alerts?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' -Method GET -Headers $headers
  /alerts-stats:
    get:
      description: This endpoint allows you to get alert statistics based on status and severity.
      operationId: AlertsService_GetAlertStats
      parameters:
        - collectionFormat: multi
          description: 'Provide a list of group by strings as input. Possible values are ''GROUP_BY_STATUS'', ''GROUP_BY_SEVERITY''.For combined grouping with ''GROUP_BY_STATUS'' and ''GROUP_BY_SEVERITY'' , the input should look like this: [''GROUP_BY_STATUS:GROUP_BY_SEVERITY''].Example : ["GROUP_BY_STATUS","GROUP_BY_SEVERITY","GROUP_BY_STATUS:GROUP_BY_SEVERITY"]'
          in: query
          items:
            type: string
          name: groupBy
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.alerts.GetAlertStatsResponse'
      security:
        - x-api-key: []
      summary: This endpoint provides alert statistics based on status and severity
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.alerts
        - healthmonitoring.alerts.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/alerts-stats?groupBy=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/alerts-stats"

            querystring = {"groupBy":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/alerts-stats?groupBy=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  /alerts/bulk-delete:
    post:
      description: This endpoint allows you to perform bulk delete operations on alerts based on filter criteria.
      operationId: AlertsService_BulkDelete
      parameters:
        - description: BulkDeleteRequest is used to perform bulk delete operations on alerts.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.alerts.BulkDeleteRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.alerts.BulkDeleteResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for performing bulk delete operations on alerts.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.alerts
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/alerts/bulk-delete \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"excludeIds":["string"],"filter":{"category":["ALERT_CATEGORY_UNSPECIFIED"],"existingCondition":"string","lastOccurredAtAfter":"string","lastOccurredAtBefore":"string","severity":["ALERT_SEVERITY_UNSPECIFIED"],"sourceId":["string"],"sourceType":["ALERT_SOURCE_TYPE_UNSPECIFIED"],"status":["ALERT_STATUS_UNSPECIFIED"],"title":"string"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/alerts/bulk-delete"

            payload = {
                "excludeIds": ["string"],
                "filter": {
                    "category": ["ALERT_CATEGORY_UNSPECIFIED"],
                    "existingCondition": "string",
                    "lastOccurredAtAfter": "string",
                    "lastOccurredAtBefore": "string",
                    "severity": ["ALERT_SEVERITY_UNSPECIFIED"],
                    "sourceId": ["string"],
                    "sourceType": ["ALERT_SOURCE_TYPE_UNSPECIFIED"],
                    "status": ["ALERT_STATUS_UNSPECIFIED"],
                    "title": "string"
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/alerts/bulk-delete' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"excludeIds":["string"],"filter":{"category":["ALERT_CATEGORY_UNSPECIFIED"],"existingCondition":"string","lastOccurredAtAfter":"string","lastOccurredAtBefore":"string","severity":["ALERT_SEVERITY_UNSPECIFIED"],"sourceId":["string"],"sourceType":["ALERT_SOURCE_TYPE_UNSPECIFIED"],"status":["ALERT_STATUS_UNSPECIFIED"],"title":"string"}}'
  /alerts/bulk-update:
    post:
      description: This endpoint allows you to perform bulk update operations on alerts based on filter criteria.
      operationId: AlertsService_BulkUpdate
      parameters:
        - description: BulkUpdateRequest is used to perform bulk update operations on alerts.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.alerts.BulkUpdateRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.alerts.BulkUpdateResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for performing bulk update operations on alerts.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.alerts
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/alerts/bulk-update \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"excludeIds":["string"],"filter":{"category":["ALERT_CATEGORY_UNSPECIFIED"],"existingCondition":"string","lastOccurredAtAfter":"string","lastOccurredAtBefore":"string","severity":["ALERT_SEVERITY_UNSPECIFIED"],"sourceId":["string"],"sourceType":["ALERT_SOURCE_TYPE_UNSPECIFIED"],"status":["ALERT_STATUS_UNSPECIFIED"],"title":"string"},"remark":"string","updateField":{"status":"ALERT_STATUS_UNSPECIFIED"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/alerts/bulk-update"

            payload = {
                "excludeIds": ["string"],
                "filter": {
                    "category": ["ALERT_CATEGORY_UNSPECIFIED"],
                    "existingCondition": "string",
                    "lastOccurredAtAfter": "string",
                    "lastOccurredAtBefore": "string",
                    "severity": ["ALERT_SEVERITY_UNSPECIFIED"],
                    "sourceId": ["string"],
                    "sourceType": ["ALERT_SOURCE_TYPE_UNSPECIFIED"],
                    "status": ["ALERT_STATUS_UNSPECIFIED"],
                    "title": "string"
                },
                "remark": "string",
                "updateField": {"status": "ALERT_STATUS_UNSPECIFIED"}
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/alerts/bulk-update' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"excludeIds":["string"],"filter":{"category":["ALERT_CATEGORY_UNSPECIFIED"],"existingCondition":"string","lastOccurredAtAfter":"string","lastOccurredAtBefore":"string","severity":["ALERT_SEVERITY_UNSPECIFIED"],"sourceId":["string"],"sourceType":["ALERT_SOURCE_TYPE_UNSPECIFIED"],"status":["ALERT_STATUS_UNSPECIFIED"],"title":"string"},"remark":"string","updateField":{"status":"ALERT_STATUS_UNSPECIFIED"}}'
  '/alerts/{id}':
    delete:
      description: This endpoint allows you to delete a specific alert.
      operationId: AlertsService_DeleteAlert
      parameters:
        - format: byte
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.alerts.DeleteAlertResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used to delete an alert.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.alerts
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/alerts/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/alerts/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/alerts/{id}' -Method DELETE -Headers $headers
    get:
      description: This endpoint allows you to get a specific alert.
      operationId: AlertsService_GetAlert
      parameters:
        - format: byte
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.alerts.GetAlertResponse'
      security:
        - x-api-key: []
      summary: This endpoint provides details of an alert.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.alerts
        - healthmonitoring.alerts.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/alerts/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/alerts/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/alerts/{id}' -Method GET -Headers $headers
  '/alerts/{id}/occurrences':
    get:
      description: This endpoint allows you to list one or more occurrences for an Alert.
      operationId: AlertOccurrencesService_ListAlertOccurrences
      parameters:
        - description: alert_object_id specifies the parent alert for which occurrences are to be listed.
          format: byte
          in: path
          name: id
          required: true
          type: string
        - collectionFormat: multi
          description: "A filter to apply to the query.\n\n\t**Filter structure**: `<field>:<operator>:<value>`.\n\n\t**field** = Populate with a valid field from an endpoint response.\n\n\t**operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.\n\n\t**value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.\n\n\t**Example** `GET /api/v2/groups?filter=name:eq:Test+Group`\n"
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
        - collectionFormat: multi
          description: The fields on the items listed to return.
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - collectionFormat: multi
          description: |-
            An optional comma separated field names used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          in: query
          items:
            type: string
          name: sort
          required: false
          type: array
        - default: '100'
          description: |-
            The number of alert occurrences to return at once.
            If the number of alert occurrences returned is less than `limit` there are no more alert occurrences to fetch.
            If the number of alert occurrences returned is equal to limit there may be more alert occurrences to fetch. Increment `skip` by `limit` to get the next set of alert occurrences.
          format: int64
          in: query
          name: limit
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.alerts.ListAlertOccurrencesResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used to list one or more occurrences for an Alert.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.alerts
        - healthmonitoring.alerts.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/alerts/{id}/occurrences?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/alerts/{id}/occurrences"

            querystring = {"filter":"SOME_ARRAY_VALUE","fields":"SOME_ARRAY_VALUE","skip":"0","sort":"SOME_ARRAY_VALUE","limit":"100"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/alerts/{id}/occurrences?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' -Method GET -Headers $headers
  '/alerts/{id}/status':
    post:
      description: This endpoint allows you to update the status of an alert.
      operationId: AlertsService_UpdateAlertStatus
      parameters:
        - format: byte
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            description: UpdateAlertStatusRequest is used to update the status of an alert.
            properties:
              remark:
                description: A remark associated with status update.
                type: string
              status:
                $ref: '#/definitions/jumpcloud.alerts.AlertStatus'
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.alerts.UpdateAlertStatusResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for updating the status of an alert.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.alerts
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/alerts/{id}/status \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"remark":"string","status":"ALERT_STATUS_UNSPECIFIED"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/alerts/{id}/status"

            payload = {
                "remark": "string",
                "status": "ALERT_STATUS_UNSPECIFIED"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/alerts/{id}/status' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"remark":"string","status":"ALERT_STATUS_UNSPECIFIED"}'
  /applemdms:
    get:
      description: |-
        Get a list of all Apple MDM configurations.  An empty topic indicates that a signed certificate from Apple has not been provided to the PUT endpoint yet.

        Note: currently only one MDM configuration per organization is supported.

        #### Sample Request
        ```
        curl https://console.jumpcloud.com/api/v2/applemdms \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: applemdms_list
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:limitDefault1:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/AppleMDM'
            type: array
      security:
        - x-api-key: []
      summary: List Apple MDMs
      tags:
        - Apple MDM
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/applemdms?limit=1&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms"

            querystring = {"limit":"1","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms?limit=1&skip=0&filter=' -Method GET -Headers $headers
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/csr':
    get:
      description: |-
        Retrieves an Apple MDM signed CSR Plist for an organization.  The user must supply the returned plist to Apple for signing, and then provide the certificate provided by Apple back into the PUT API.

        #### Sample Request
        ```
          curl -X GET https://console.jumpcloud.com/api/v2/applemdms/{APPLE_MDM_ID}/csr \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: applemdms_csrget
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apple-mdm-signed-csr-plist'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get Apple MDM CSR Plist
      tags:
        - Apple MDM
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/csr \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/csr"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/csr' -Method GET -Headers $headers
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/depkey':
    get:
      description: |-
        Retrieves an Apple MDM DEP Public Key.

        #### Sample Request

        ```
        curl https://console.jumpcloud.com/api/v2/applemdms/{APPLE_MDM_ID}/depkey \
          -H 'accept: application/x-pem-file' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: applemdms_depkeyget
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      produces:
        - application/x-pem-file
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apple-mdm-public-key-cert'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get Apple MDM DEP Public Key
      tags:
        - Apple MDM
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/depkey \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/depkey"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/depkey' -Method GET -Headers $headers
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/devices':
    get:
      description: |-
        Lists all Apple MDM devices.

        The filter and sort queries will allow the following fields:
        `createdAt`
        `depRegistered`
        `enrolled`
        `id`
        `osVersion`
        `serialNumber`
        `udid`

        #### Sample Request
        ```
          curl -X GET https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices \
          -H 'accept: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: applemdms_deviceslist
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:listCount:x-total-count'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/apple-mdm-device'
            type: array
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List AppleMDM Devices
      tags:
        - Apple MDM
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices?limit=10&skip=0&filter=&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices"

            querystring = {"limit":"10","skip":"0","filter":"","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices?limit=10&skip=0&filter=&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/devices/{device_id}':
    delete:
      description: |-
        Remove a single Apple MDM device from MDM enrollment.

        #### Sample Request
        ```
          curl -X DELETE https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id} \
          -H 'accept: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: applemdms_deletedevice
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/apple-mdm-device'
      security:
        - x-api-key: []
      summary: Remove an Apple MDM Device's Enrollment
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}' -Method DELETE -Headers $headers
    get:
      description: |-
        Gets a single Apple MDM device.

        #### Sample Request
        ```
          curl -X GET https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id} \
          -H 'accept: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: applemdms_getdevice
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/apple-mdm-device'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Details of an AppleMDM Device
      tags:
        - Apple MDM
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}' -Method GET -Headers $headers
    parameters:
      - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/devices/{device_id}/availableOsUpdates':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/devices/{device_id}/bypasscodes':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/devices/{device_id}/clearActivationLock':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    post:
      description: |-
        Clears the activation lock on the specified device.

        #### Sample Request
        ```
          curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearActivationLock \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: applemdms_devicesClearActivationLock
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
        '400':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Clears the Activation Lock for a Device
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearActivationLock \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearActivationLock"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearActivationLock' -Method POST -Headers $headers
    x-functionalities-tags:
      - mdm
      - devices-darwin-security-command
  '/applemdms/{apple_mdm_id}/devices/{device_id}/clearPasscode':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    post:
      description: |-
        Clear Passcode of MDM enrolled device.

        #### Sample Request
        ```
          curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearPasscode \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: applemdms_deviceClearPasscode
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
        '400':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Clear Passcode
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearPasscode \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearPasscode"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearPasscode' -Method POST -Headers $headers
    x-functionalities-tags:
      - mdm
      - devices-darwin-security-command
  '/applemdms/{apple_mdm_id}/devices/{device_id}/clearRestrictionsPassword':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    post:
      description: |-
        Clear the restrictions password of a DEP-enrolled device.

        #### Sample Request
        ```
          curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearRestrictionsPassword \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: applemdms_devicesClearRestrictionsPassword
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
        '400':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Clear Restrictions Password
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearRestrictionsPassword \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearRestrictionsPassword"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/clearRestrictionsPassword' -Method POST -Headers $headers
    x-functionalities-tags:
      - mdm
      - devices-darwin-security-command
  '/applemdms/{apple_mdm_id}/devices/{device_id}/erase':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    post:
      description: |-
        Erases a DEP-enrolled device.

        #### Sample Request
        ```
          curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/erase \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: applemdms_deviceserase
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            properties:
              pin:
                description: '6-digit PIN, required for MacOS, to erase the device'
                example: '123456'
                pattern: '^[0-9]{6}$'
                type: string
            type: object
      responses:
        '204':
          description: ''
        '400':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Erase Device
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/erase \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"pin":"123456"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/erase"

            payload = {"pin": "123456"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/erase' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"pin":"123456"}'
    x-functionalities-tags:
      - mdm
      - devices-darwin-security-command
  '/applemdms/{apple_mdm_id}/devices/{device_id}/lock':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    post:
      description: |-
        Locks a DEP-enrolled device.

        #### Sample Request
        ```
          curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/lock \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: applemdms_deviceslock
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            properties:
              pin:
                description: '6-digit PIN, required for MacOS, to lock the device'
                example: '123456'
                pattern: '^[0-9]{6}$'
                type: string
            type: object
      responses:
        '204':
          description: ''
        '400':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Lock Device
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/lock \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"pin":"123456"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/lock"

            payload = {"pin": "123456"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/lock' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"pin":"123456"}'
    x-functionalities-tags:
      - mdm
      - devices-darwin-security-command
  '/applemdms/{apple_mdm_id}/devices/{device_id}/osUpdateStatus':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    post:
      description: |-
        Pass through to request the status of an OS update
        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/osUpdateStatus \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: applemdms_devicesOSUpdateStatus
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Request the status of an OS update for a device
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/osUpdateStatus \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/osUpdateStatus"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/osUpdateStatus' -Method POST -Headers $headers
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/devices/{device_id}/refreshActivationLockInformation':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    post:
      description: |-
        Refreshes the activation lock information for a device

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/refreshActivationLockInformation \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: applemdms_devicesRefreshActivationLockInformation
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
        '400':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Refresh activation lock information for a device
      tags:
        - Apple MDM
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/refreshActivationLockInformation \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/refreshActivationLockInformation"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/refreshActivationLockInformation' -Method POST -Headers $headers
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/devices/{device_id}/restart':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    post:
      description: |-
        Restarts a DEP-enrolled device.

        #### Sample Request
        ```
          curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/restart \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{"kextPaths": ["Path1", "Path2"]}'
        ```
      operationId: applemdms_devicesrestart
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            properties:
              kextPaths:
                description: The string to pass when doing a restart and performing a RebuildKernelCache.
                items:
                  type: string
                type: array
            type: object
          x-examples:
            example-1:
              kextPaths:
                - /path/to/kext1
                - /path/to/kext2
      responses:
        '204':
          description: ''
        '400':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Restart Device
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/restart \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"kextPaths":["string"]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/restart"

            payload = {"kextPaths": ["string"]}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/restart' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"kextPaths":["string"]}'
    x-functionalities-tags:
      - mdm
      - devices-darwin-security-command
  '/applemdms/{apple_mdm_id}/devices/{device_id}/scheduleOSUpdate':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    post:
      description: |-
        Schedules an OS update for a device

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/scheduleOSUpdate \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{"install_action": "INSTALL_ASAP", "product_key": "key"}'
        ```
      operationId: applemdms_devicesScheduleOSUpdate
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/ScheduleOSUpdate'
      responses:
        '204':
          description: ''
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Schedule an OS update for a device
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/scheduleOSUpdate \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"install_action":"DOWNLOAD_ONLY","max_user_deferrals":0,"product_key":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/scheduleOSUpdate"

            payload = {
                "install_action": "DOWNLOAD_ONLY",
                "max_user_deferrals": 0,
                "product_key": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/scheduleOSUpdate' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"install_action":"DOWNLOAD_ONLY","max_user_deferrals":0,"product_key":"string"}'
  '/applemdms/{apple_mdm_id}/devices/{device_id}/shutdown':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: device_id
        required: true
        type: string
    post:
      description: |-
        Shuts down a DEP-enrolled device.

        #### Sample Request
        ```
          curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/shutdown \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: applemdms_devicesshutdown
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
        '400':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Shut Down Device
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/shutdown \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/shutdown"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/devices/{device_id}/shutdown' -Method POST -Headers $headers
    x-functionalities-tags:
      - mdm
      - devices-darwin-security-command
  '/applemdms/{apple_mdm_id}/enrollmentprofiles':
    get:
      description: |-
        Get a list of enrollment profiles for an apple mdm.

        Note: currently only one enrollment profile is supported.

        #### Sample Request
        ```
         curl https://console.jumpcloud.com/api/v2/applemdms/{APPLE_MDM_ID}/enrollmentprofiles \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: applemdms_enrollmentprofileslist
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/AppleMDM'
            type: array
      security:
        - x-api-key: []
      summary: List Apple MDM Enrollment Profiles
      tags:
        - Apple MDM
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/enrollmentprofiles \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/enrollmentprofiles"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/enrollmentprofiles' -Method GET -Headers $headers
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/enrollmentprofiles/{id}':
    get:
      description: |-
        Get an enrollment profile

        Currently only requesting the mobileconfig is supported.

        #### Sample Request

        ```
        curl https://console.jumpcloud.com/api/v2/applemdms/{APPLE_MDM_ID}/enrollmentprofiles/{ID} \
          -H 'accept: application/x-apple-aspen-config' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: applemdms_enrollmentprofilesget
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      produces:
        - application/x-apple-aspen-config
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/mobileconfig'
      security:
        - x-api-key: []
      summary: Get an Apple MDM Enrollment Profile
      tags:
        - Apple MDM
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/enrollmentprofiles/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/enrollmentprofiles/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/enrollmentprofiles/{id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/enrollmentprofiles/{id}/downloadurl':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - mdm
  '/applemdms/{apple_mdm_id}/refreshdepdevices':
    parameters:
      - in: path
        name: apple_mdm_id
        required: true
        type: string
    post:
      description: |-
        Refreshes the list of devices that a JumpCloud admin has added to their virtual MDM in Apple Business Manager - ABM so that they can be DEP enrolled with JumpCloud.

        #### Sample Request
        ```
          curl -X POST https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/refreshdepdevices \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: applemdms_refreshdepdevices
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
        '400':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Refresh DEP Devices
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/refreshdepdevices \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/refreshdepdevices"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{apple_mdm_id}/refreshdepdevices' -Method POST -Headers $headers
    x-functionalities-tags:
      - mdm
  '/applemdms/{deviceManagerObjectId}/abm_devices':
    get:
      description: "This endpoint lists the abm devices for the given device manager.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/v2/applemdms/{device_manager_object_id}/abm_devices \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:{API_KEY}'\n```\n\n\tNote: The `limit` maximum is 100 Abm device Items in a single response."
      operationId: DeviceManagers_ListABMDevices
      parameters:
        - format: byte
          in: path
          name: deviceManagerObjectId
          required: true
          type: string
        - description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - description: |-
            The number of resources to return at once.
            If the number of resources returned is less than `limit` there are no more resources to fetch.
            If the number of resources returned is equal to limit there may be more resources to fetch. Increment `skip` by `limit` to get the next set of resources.
          format: int64
          in: query
          name: limit
          required: false
          type: string
        - collectionFormat: multi
          description: |-
            An optional comma separated field names used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          in: query
          items:
            type: string
          name: sort
          required: false
          type: array
        - collectionFormat: multi
          description: "A filter to apply to the query.\n\n\t**Filter structure**: `<field>:<operator>:<value>`.\n\n\t**field** = Populate with a valid field from an endpoint response.\n\n\t**operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.\n\n\t**value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.\n\n\t**Example** `GET /api/v2/groups?filter=name:eq:Test+Group`\n"
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: ABM Devices List
      tags:
        - mdm
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/abm_devices?skip=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&sort=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/abm_devices"

            querystring = {"skip":"SOME_STRING_VALUE","limit":"SOME_STRING_VALUE","sort":"SOME_ARRAY_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/abm_devices?skip=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&sort=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  '/applemdms/{deviceManagerObjectId}/devices/{deviceObjectId}/lostmode':
    post:
      description: This endpoint allows you to control the lost mode of a device
      operationId: Devices_LostMode
      parameters:
        - format: byte
          in: path
          name: deviceManagerObjectId
          required: true
          type: string
        - format: byte
          in: path
          name: deviceObjectId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              disableLostMode:
                $ref: '#/definitions/jumpcloud.apple_mdm.DisableLostMode'
              enableLostMode:
                $ref: '#/definitions/jumpcloud.apple_mdm.EnableLostMode'
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.apple_mdm.CommandResponse'
        '204':
          description: A successful response.
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Lost Mode
      tags:
        - mdm
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/devices/{deviceObjectId}/lostmode \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"disableLostMode":{},"enableLostMode":{"footnote":"string","message":"string","phoneNumber":"string"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/devices/{deviceObjectId}/lostmode"

            payload = {
                "disableLostMode": {},
                "enableLostMode": {
                    "footnote": "string",
                    "message": "string",
                    "phoneNumber": "string"
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/devices/{deviceObjectId}/lostmode' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"disableLostMode":{},"enableLostMode":{"footnote":"string","message":"string","phoneNumber":"string"}}'
  '/applemdms/{deviceManagerObjectId}/service-discovery-url':
    delete:
      description: 'This endpoint deletes the service discovery url for the mdm server, This will be used in ADUE'
      operationId: EnrollmentProfiles_DeleteServiceDiscoveryURL
      parameters:
        - format: byte
          in: path
          name: deviceManagerObjectId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: ADUE
      tags:
        - mdm
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/service-discovery-url \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/service-discovery-url"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/service-discovery-url' -Method DELETE -Headers $headers
    post:
      description: 'This endpoint updates the service discovery url for the mdm server, This will be used in ADUE'
      operationId: EnrollmentProfiles_UpdateServiceDiscoveryURL
      parameters:
        - format: byte
          in: path
          name: deviceManagerObjectId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: A successful response.
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: ADUE
      tags:
        - mdm
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/service-discovery-url \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/service-discovery-url"

            payload = {}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/service-discovery-url' -Method POST -Headers $headers -ContentType 'application/json' -Body '{}'
  '/applemdms/{deviceManagerObjectId}/validate-service-discovery-url':
    get:
      description: 'This endpoint validates the service discovery url for the mdm server, This will be used in ADUE'
      operationId: EnrollmentProfiles_ValidateServiceDiscoveryURL
      parameters:
        - format: byte
          in: path
          name: deviceManagerObjectId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: ADUE
      tags:
        - mdm
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/validate-service-discovery-url \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/validate-service-discovery-url"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{deviceManagerObjectId}/validate-service-discovery-url' -Method GET -Headers $headers
  '/applemdms/{deviceObjectId}/background_tasks':
    get:
      description: This endpoint lists the background tasks for the given device.
      operationId: BackgroundTasks_List
      parameters:
        - format: byte
          in: path
          name: deviceObjectId
          required: true
          type: string
        - format: int64
          in: query
          name: queryParameters.limit
          required: false
          type: string
        - format: int64
          in: query
          name: queryParameters.skip
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: queryParameters.fields
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Background Tasks List
      tags:
        - mdm
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/applemdms/{deviceObjectId}/background_tasks?queryParameters.limit=SOME_STRING_VALUE&queryParameters.skip=SOME_STRING_VALUE&queryParameters.fields=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{deviceObjectId}/background_tasks"

            querystring = {"queryParameters.limit":"SOME_STRING_VALUE","queryParameters.skip":"SOME_STRING_VALUE","queryParameters.fields":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{deviceObjectId}/background_tasks?queryParameters.limit=SOME_STRING_VALUE&queryParameters.skip=SOME_STRING_VALUE&queryParameters.fields=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  '/applemdms/{id}':
    delete:
      description: |-
        Removes an Apple MDM configuration.

        Warning: This is a destructive operation and will remove your Apple Push Certificates.  We will no longer be able to manage your devices and the only recovery option is to re-register all devices into MDM.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/applemdms/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: applemdms_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AppleMDM'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete an Apple MDM
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/applemdms/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{id}' -Method DELETE -Headers $headers
    parameters:
      - in: path
        name: id
        required: true
        type: string
    put:
      description: |-
        Updates an Apple MDM configuration.  This endpoint is used to supply JumpCloud with a signed certificate from Apple in order to finalize the setup and allow JumpCloud to manage your devices.  It may also be used to update the DEP Settings.

        #### Sample Request
        ```
          curl -X PUT https://console.jumpcloud.com/api/v2/applemdms/{ID} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "MDM name",
            "appleSignedCert": "{CERTIFICATE}",
            "encryptedDepServerToken": "{SERVER_TOKEN}",
            "dep": {
              "welcomeScreen": {
                "title": "Welcome",
                "paragraph": "In just a few steps, you will be working securely from your Mac.",
                "button": "continue",
              },
            },
          }'
        ```
      operationId: applemdms_put
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/apple-mdm-patch'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AppleMDM'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update an Apple MDM
      tags:
        - Apple MDM
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/applemdms/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"ades":{"ios":{"defaultDeviceGroupObjectIds":["string"],"enableZeroTouchEnrollment":true,"setupAssistantOptions":[{"option":"accessibility"}],"setupOptions":["accessibility"],"welcomeScreen":{"button":"string","paragraph":"string","title":"string"}},"macos":{"defaultDeviceGroupObjectIds":["string"],"enableZeroTouchEnrollment":true,"setupAssistantOptions":[{"option":"accessibility"}],"setupOptions":["accessibility"],"welcomeScreen":{"button":"string","paragraph":"string","title":"string"}}},"allowMobileUserEnrollment":true,"appleCertCreatorAppleID":"string","appleSignedCert":"string","defaultIosUserEnrollmentDeviceGroupID":"string","defaultSystemGroupID":"string","dep":{"enableZeroTouchEnrollment":true,"setupAssistantOptions":[{"option":"accessibility"}],"welcomeScreen":{"button":"string","paragraph":"string","title":"string"}},"encryptedDepServerToken":"string","name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{id}"

            payload = {
                "ades": {
                    "ios": {
                        "defaultDeviceGroupObjectIds": ["string"],
                        "enableZeroTouchEnrollment": True,
                        "setupAssistantOptions": [{"option": "accessibility"}],
                        "setupOptions": ["accessibility"],
                        "welcomeScreen": {
                            "button": "string",
                            "paragraph": "string",
                            "title": "string"
                        }
                    },
                    "macos": {
                        "defaultDeviceGroupObjectIds": ["string"],
                        "enableZeroTouchEnrollment": True,
                        "setupAssistantOptions": [{"option": "accessibility"}],
                        "setupOptions": ["accessibility"],
                        "welcomeScreen": {
                            "button": "string",
                            "paragraph": "string",
                            "title": "string"
                        }
                    }
                },
                "allowMobileUserEnrollment": True,
                "appleCertCreatorAppleID": "string",
                "appleSignedCert": "string",
                "defaultIosUserEnrollmentDeviceGroupID": "string",
                "defaultSystemGroupID": "string",
                "dep": {
                    "enableZeroTouchEnrollment": True,
                    "setupAssistantOptions": [{"option": "accessibility"}],
                    "welcomeScreen": {
                        "button": "string",
                        "paragraph": "string",
                        "title": "string"
                    }
                },
                "encryptedDepServerToken": "string",
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applemdms/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"ades":{"ios":{"defaultDeviceGroupObjectIds":["string"],"enableZeroTouchEnrollment":true,"setupAssistantOptions":[{"option":"accessibility"}],"setupOptions":["accessibility"],"welcomeScreen":{"button":"string","paragraph":"string","title":"string"}},"macos":{"defaultDeviceGroupObjectIds":["string"],"enableZeroTouchEnrollment":true,"setupAssistantOptions":[{"option":"accessibility"}],"setupOptions":["accessibility"],"welcomeScreen":{"button":"string","paragraph":"string","title":"string"}}},"allowMobileUserEnrollment":true,"appleCertCreatorAppleID":"string","appleSignedCert":"string","defaultIosUserEnrollmentDeviceGroupID":"string","defaultSystemGroupID":"string","dep":{"enableZeroTouchEnrollment":true,"setupAssistantOptions":[{"option":"accessibility"}],"welcomeScreen":{"button":"string","paragraph":"string","title":"string"}},"encryptedDepServerToken":"string","name":"string"}'
    x-functionalities-tags:
      - mdm
  '/applemdms/{organizationObjectId}/account-driven-service-discovery':
    get:
      description: This endpoint provides Redirect URL for Account Driven Enrollment Configuration
      operationId: EnrollmentProfiles_GetAdueRedirect
      parameters:
        - format: byte
          in: path
          name: organizationObjectId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.apple_mdm.EnrollmentProfilesGetRedirectResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      summary: ADUE Configuration
      tags:
        - mdm
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/applemdms/{organizationObjectId}/account-driven-service-discovery
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{organizationObjectId}/account-driven-service-discovery"

            response = requests.request("GET", url)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/applemdms/{organizationObjectId}/account-driven-service-discovery'' -Method GET '
  '/applemdms/{organizationObjectId}/account-driven-service-discovery/config':
    get:
      description: This endpoint provides JSON Configuration for Account Driven Enrollment Configuration
      operationId: EnrollmentProfiles_GetAdueConfig
      parameters:
        - format: byte
          in: path
          name: organizationObjectId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.apple_mdm.EnrollmentProfilesGetAdueConfigResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      summary: ADUE Configuration
      tags:
        - mdm
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/applemdms/{organizationObjectId}/account-driven-service-discovery/config
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applemdms/{organizationObjectId}/account-driven-service-discovery/config"

            response = requests.request("GET", url)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/applemdms/{organizationObjectId}/account-driven-service-discovery/config'' -Method GET '
  /applevpp/locations:
    x-functionalities-tags:
      - vpp
  '/applevpp/locations/{id}':
    parameters:
      - description: The Location's Object ID
        in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - vpp
  /application/catalog:
    x-functionalities-tags:
      - user-portal-applications
  '/application/catalog/{item_id}':
    parameters:
      - in: path
        name: item_id
        required: true
        type: string
    x-functionalities-tags:
      - user-portal-applications
  /applications:
    x-functionalities-tags:
      - user-portal-applications
  '/applications/import/{job_id}/detailedresults':
    parameters:
      - description: ObjectID of the Import Job.
        in: path
        name: job_id
        required: true
        type: string
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}':
    get:
      description: The endpoint retrieves an Application.
      operationId: applications_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            type: object
      security:
        - x-api-key: []
      summary: Get an Application
      tags:
        - Applications
      x-scopes:
        - applications
        - applications.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/applications/{application_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applications/{application_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applications/{application_id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Application.
        in: path
        name: application_id
        required: true
        type: string
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}/associations':
    get:
      description: |-
        This endpoint will return the _direct_ associations of an Application. A direct association can be a non-homogeneous relationship between 2 different objects, for example Applications and User Groups.


        #### Sample Request
        ```
        curl -X GET 'https://console.jumpcloud.com/api/v2/applications/{Application_ID}/associations?targets=user_group \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_applicationAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsApplication:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of an Application
      tags:
        - Graph
        - Applications
      x-scopes:
        - applications
        - applications.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/applications/{application_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applications/{application_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applications/{application_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Application.
        in: path
        name: application_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the _direct_ associations of an Application. A direct association can be a non-homogeneous relationship between 2 different objects, for example Application and User Groups.

        #### Sample Request
        ```
        curl -X POST 'https://console.jumpcloud.com/api/v2/applications/{Application_ID}/associations' \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "user_group",
            "id": "{Group_ID}"
          }'
        ```
      operationId: graph_applicationAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-Application'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of an Application
      tags:
        - Graph
        - Applications
      x-scopes:
        - applications
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applications/{application_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applications/{application_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applications/{application_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"user"}'
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}/import/jobs':
    parameters:
      - description: ObjectID of the Application.
        in: path
        name: application_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to create a user import job that will import new users and/or update existing users in JumpCloud from the application.  The endpoint can currently only be used for applications that have an active Identity Management custom API integration.  The request will  fail with a “Not found” error for applications if that type of integration is not configured.  To learn more about configuring this type of integration, read [Import users from an external identity source using a custom API integration](https://support.jumpcloud.com/support/s/article/Import-users-from-a-custom-rest-API-integration).
        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/applications/{application_id}/import/jobs \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: {API_KEY}' \
        -H 'x-org-id: {ORG_ID}' \
        -d '{
            "allowUserReactivation": true,
            "operations": [
                "users.create",
                "users.update"
            ]
            "queryString": "location=Chicago&department=IT"
          }'
        ```
      operationId: import_create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ImportUsersRequest'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/job-id'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Create an import job
      tags:
        - Applications
      x-scopes:
        - applications
        - applications.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applications/{application_id}/import/jobs \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"allowUserReactivation":true,"operations":["users.create","users.update"],"queryString":""}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applications/{application_id}/import/jobs"

            payload = {
                "allowUserReactivation": True,
                "operations": ["users.create", "users.update"],
                "queryString": ""
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applications/{application_id}/import/jobs' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"allowUserReactivation":true,"operations":["users.create","users.update"],"queryString":""}'
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}/import/users':
    get:
      description: Get a list of users to import from an Application IdM service provider.
      operationId: import_users
      parameters:
        - default: ''
          description: Filter users by a search term
          in: query
          name: filter
          type: string
        - default: ''
          description: URL query to merge with the service provider request
          in: query
          name: query
          type: string
        - default: ''
          description: Sort users by supported fields
          enum:
            - ''
            - firstname
            - lastname
            - email
          in: query
          name: sort
          type: string
        - default: asc
          enum:
            - asc
            - desc
          in: query
          name: sortOrder
          type: string
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/importUsersResponse'
      security:
        - x-api-key: []
      summary: Get a list of users to import from an Application IdM service provider
      tags:
        - Applications
        - SCIM Import
      x-scopes:
        - applications
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/applications/{application_id}/import/users?filter=&query=&sort=&sortOrder=asc&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applications/{application_id}/import/users"

            querystring = {"filter":"","query":"","sort":"","sortOrder":"asc","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applications/{application_id}/import/users?filter=&query=&sort=&sortOrder=asc&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Application.
        in: path
        name: application_id
        required: true
        type: string
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}/logo':
    delete:
      description: Deletes the specified image from an application
      operationId: applications_deleteLogo
      parameters:
        - in: path
          name: application_id
          required: true
          type: string
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: NO_CONTENT
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete application image
      tags:
        - Applications
        - Image
      x-scopes:
        - applications
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/applications/{application_id}/logo \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applications/{application_id}/logo"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applications/{application_id}/logo' -Method DELETE -Headers $headers
    post:
      consumes:
        - multipart/form-data
      description: |-
        This endpoint sets the logo for an application.

        #### Sample Request
        ```
        curl -X POST 'https://console.jumpcloud.com/api/v2/applications/{Application_ID}/logo \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: applications_postLogo
      parameters:
        - in: path
          name: application_id
          required: true
          type: string
        - description: The file to upload.
          in: formData
          name: image
          type: file
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: NO_CONTENT
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Save application logo
      tags:
        - Applications
      x-scopes:
        - applications
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/applications/{application_id}/logo \
              --header 'accept: multipart/form-data' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applications/{application_id}/logo"

            headers = {
                "accept": "multipart/form-data",
                "x-api-key": "REPLACE_KEY_VALUE"
            }

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("accept", "multipart/form-data")
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applications/{application_id}/logo' -Method POST -Headers $headers
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}/provision':
    parameters:
      - in: path
        name: application_id
        required: true
        type: string
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}/provision/activate':
    parameters:
      - in: path
        name: application_id
        required: true
        type: string
      - in: header
        name: X-Requested-With
        required: false
        type: string
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}/provision/reactivate':
    parameters:
      - in: path
        name: application_id
        required: true
        type: string
      - in: header
        name: X-Requested-With
        required: false
        type: string
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}/sso':
    parameters:
      - in: path
        name: application_id
        required: true
        type: string
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}/usergroups':
    get:
      description: |-
        This endpoint will return all Users Groups bound to an Application, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates  each path from this Application to the corresponding User Group; this array represents all grouping and/or associations that would have to be removed to deprovision the User Group from this Application.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/applications/{Application_ID}/usergroups \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_applicationTraverseUserGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Groups bound to an Application
      tags:
        - Graph
        - Applications
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/applications/{application_id}/usergroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applications/{application_id}/usergroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applications/{application_id}/usergroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Application.
        in: path
        name: application_id
        required: true
        type: string
    x-functionalities-tags:
      - user-portal-applications
  '/applications/{application_id}/users':
    get:
      description: |-
        This endpoint will return all Users bound to an Application, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Application to the corresponding User; this array represents all grouping and/or associations that would have to be removed to deprovision the User from this Application.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/applications/{Application_ID}/users \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_applicationTraverseUser
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Users bound to an Application
      tags:
        - Graph
        - Applications
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/applications/{application_id}/users?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/applications/{application_id}/users"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/applications/{application_id}/users?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Application.
        in: path
        name: application_id
        required: true
        type: string
    x-functionalities-tags:
      - user-portal-applications
  /assets/accessories:
    get:
      description: Retrieve a list of accessory assets with optional pagination
      operationId: listAccessoryAssets
      parameters:
        - default: 100
          description: Maximum number of results to return
          format: int64
          in: query
          maximum: 100
          minimum: 1
          name: limit
          type: integer
        - default: 0
          description: Number of results to skip for pagination
          format: int64
          in: query
          minimum: 0
          name: skip
          type: integer
        - description: Array of field names to include in response
          in: query
          items:
            type: string
          name: fields
          type: array
      responses:
        '200':
          description: Accessory assets retrieved successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.AssetListResponse'
        '400':
          description: Bad request - invalid query parameters
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: List accessory assets
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/assets/accessories?limit=100&skip=0&fields=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/accessories"

            querystring = {"limit":"100","skip":"0","fields":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/accessories?limit=100&skip=0&fields=SOME_ARRAY_VALUE' -Method GET -Headers $headers
    post:
      description: Create a new accessory asset
      operationId: createAccessoryAsset
      parameters:
        - description: Accessory asset creation data
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.CreateAssetRequest'
      responses:
        '201':
          description: Accessory asset created successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.Asset'
        '400':
          description: Bad request - invalid data format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Create an accessory asset
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/assets/accessories \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"fields":{}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/accessories"

            payload = {"fields": {}}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/accessories' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"fields":{}}'
  /assets/accessories/batch:
    patch:
      description: Update multiple accessory assets with a single field value change
      operationId: batchUpdateAccessoryAssets
      parameters:
        - description: Batch update data with asset IDs and field value
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.BatchUpdateAccessoryAssetsRequest'
      responses:
        '200':
          description: Batch update completed
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.BatchUpdateAccessoryAssetsResponse'
        '400':
          description: Bad request - invalid data
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Batch update accessory assets
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/assets/accessories/batch \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"assetIds":["507f1f77bcf86cd799439011","507f1f77bcf86cd799439012"],"fieldValue":{"label":"Status","value":{"id":"507f1f77bcf86cd799439013","name":"Active","type":"select"}}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/accessories/batch"

            payload = {
                "assetIds": ["507f1f77bcf86cd799439011", "507f1f77bcf86cd799439012"],
                "fieldValue": {
                    "label": "Status",
                    "value": {
                        "id": "507f1f77bcf86cd799439013",
                        "name": "Active",
                        "type": "select"
                    }
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/accessories/batch' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"assetIds":["507f1f77bcf86cd799439011","507f1f77bcf86cd799439012"],"fieldValue":{"label":"Status","value":{"id":"507f1f77bcf86cd799439013","name":"Active","type":"select"}}}'
  '/assets/accessories/{id}':
    delete:
      description: Delete an existing accessory asset by its ID
      operationId: deleteAccessoryAsset
      parameters:
        - description: The accessory asset ID
          in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Accessory asset deleted successfully
        '400':
          description: Bad request - invalid ID format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Accessory asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Delete an accessory asset
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/assets/accessories/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/accessories/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/accessories/{id}' -Method DELETE -Headers $headers
    get:
      description: Retrieve a specific accessory asset by its ID
      operationId: getAccessoryAsset
      parameters:
        - description: The accessory asset ID
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Accessory asset retrieved successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.Asset'
        '400':
          description: Bad request - invalid ID format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Accessory asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Get an accessory asset by ID
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/assets/accessories/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/accessories/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/accessories/{id}' -Method GET -Headers $headers
    put:
      description: Update an existing accessory asset by its ID
      operationId: updateAccessoryAsset
      parameters:
        - description: The accessory asset ID
          in: path
          name: id
          required: true
          type: string
        - description: Accessory asset update data
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.UpdateAssetRequest'
      responses:
        '200':
          description: Accessory asset updated successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.Asset'
        '400':
          description: Bad request - invalid data or ID format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Accessory asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Update an accessory asset
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/assets/accessories/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"fields":{}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/accessories/{id}"

            payload = {"fields": {}}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/accessories/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"fields":{}}'
  '/assets/accessories/{id}/history':
    get:
      description: Retrieve the history of an accessory asset
      operationId: listAccessoryAssetHistory
      parameters:
        - description: The accessory asset ID
          in: path
          name: id
          required: true
          type: string
        - default: 100
          description: Maximum number of results to return
          format: int64
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          type: integer
        - default: 0
          description: Number of results to skip for pagination
          format: int64
          in: query
          minimum: 0
          name: skip
          type: integer
      responses:
        '200':
          description: Accessory asset history retrieved successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.AssetHistoryResponse'
        '400':
          description: Bad request - invalid asset ID or parameters
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Accessory asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: List accessory asset history
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/assets/accessories/{id}/history?limit=100&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/accessories/{id}/history"

            querystring = {"limit":"100","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/accessories/{id}/history?limit=100&skip=0' -Method GET -Headers $headers
    post:
      description: Add a note to the accessory asset history
      operationId: createAccessoryAssetHistoryNote
      parameters:
        - description: The accessory asset ID
          in: path
          name: id
          required: true
          type: string
        - description: History note data
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.CreateAssetHistoryNoteRequest'
      responses:
        '201':
          description: History note created successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.AssetHistoryEvent'
        '400':
          description: Bad request - invalid data
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Accessory asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Create accessory asset history note
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/assets/accessories/{id}/history \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"note":"Asset transferred to new department"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/accessories/{id}/history"

            payload = {"note": "Asset transferred to new department"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/accessories/{id}/history' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"note":"Asset transferred to new department"}'
  /assets/devices:
    get:
      description: Retrieve a list of device assets with optional pagination
      operationId: listDeviceAssets
      parameters:
        - default: 10
          description: Maximum number of results to return
          format: int64
          in: query
          maximum: 100
          minimum: 1
          name: limit
          type: integer
        - default: 0
          description: Number of results to skip for pagination
          format: int64
          in: query
          minimum: 0
          name: skip
          type: integer
        - collectionFormat: csv
          description: Specific fields to return
          in: query
          items:
            type: string
          name: fields
          type: array
      responses:
        '200':
          description: Device assets retrieved successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.AssetListResponse'
        '400':
          description: Bad request - invalid query parameters
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: List device assets
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/assets/devices?limit=10&skip=0&fields=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/devices"

            querystring = {"limit":"10","skip":"0","fields":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/devices?limit=10&skip=0&fields=SOME_ARRAY_VALUE' -Method GET -Headers $headers
    post:
      description: Create a new device asset
      operationId: createDeviceAsset
      parameters:
        - description: Device asset creation data
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.CreateAssetRequest'
      responses:
        '201':
          description: Device asset created successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.Asset'
        '400':
          description: Bad request - invalid data
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '409':
          description: Conflict - asset with unique field value already exists
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Create a device asset
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/assets/devices \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"fields":{}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/devices"

            payload = {"fields": {}}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/devices' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"fields":{}}'
  /assets/devices/batch:
    patch:
      description: Update multiple device assets with a single field value change
      operationId: batchUpdateDeviceAssets
      parameters:
        - description: Batch update data with asset IDs and field value
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.BatchUpdateDeviceAssetsRequest'
      responses:
        '200':
          description: Batch update completed
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.BatchUpdateDeviceAssetsResponse'
        '400':
          description: Bad request - invalid data
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Batch update device assets
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/assets/devices/batch \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"assetIds":["507f1f77bcf86cd799439011","507f1f77bcf86cd799439012"],"fieldValue":{"label":"Status","value":{"id":"507f1f77bcf86cd799439013","name":"Active","type":"select"}}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/devices/batch"

            payload = {
                "assetIds": ["507f1f77bcf86cd799439011", "507f1f77bcf86cd799439012"],
                "fieldValue": {
                    "label": "Status",
                    "value": {
                        "id": "507f1f77bcf86cd799439013",
                        "name": "Active",
                        "type": "select"
                    }
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/devices/batch' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"assetIds":["507f1f77bcf86cd799439011","507f1f77bcf86cd799439012"],"fieldValue":{"label":"Status","value":{"id":"507f1f77bcf86cd799439013","name":"Active","type":"select"}}}'
  '/assets/devices/jc-system/{jcSystemId}':
    get:
      description: Retrieve a specific device asset by its JumpCloud System ID
      operationId: getDeviceAssetByJCSystemID
      parameters:
        - description: The JumpCloud System ID of the device asset
          in: path
          name: jcSystemId
          required: true
          type: string
      responses:
        '200':
          description: Device asset retrieved successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.DeviceAssetByJCSystemID'
        '400':
          description: Bad request - invalid JC System ID format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Device asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Get a device asset by JC System ID
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/assets/devices/jc-system/{jcSystemId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/devices/jc-system/{jcSystemId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/devices/jc-system/{jcSystemId}' -Method GET -Headers $headers
  '/assets/devices/{id}':
    delete:
      description: Delete an existing device asset by its ID
      operationId: deleteDeviceAsset
      parameters:
        - description: The device asset ID
          in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Device asset deleted successfully
        '400':
          description: Bad request - invalid ID format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Device asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Delete a device asset
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/assets/devices/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/devices/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/devices/{id}' -Method DELETE -Headers $headers
    get:
      description: Retrieve a specific device asset by its ID
      operationId: getDeviceAsset
      parameters:
        - description: The device asset ID
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Device asset retrieved successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.Asset'
        '400':
          description: Bad request - invalid ID format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Device asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Get a device asset by ID
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/assets/devices/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/devices/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/devices/{id}' -Method GET -Headers $headers
    put:
      description: Update an existing device asset by its ID
      operationId: updateDeviceAsset
      parameters:
        - description: The device asset ID
          in: path
          name: id
          required: true
          type: string
        - description: Device asset update data
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.UpdateAssetRequest'
      responses:
        '200':
          description: Device asset updated successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.Asset'
        '400':
          description: Bad request - invalid data or ID format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Device asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Update a device asset
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/assets/devices/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"fields":{}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/devices/{id}"

            payload = {"fields": {}}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/devices/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"fields":{}}'
  '/assets/devices/{id}/history':
    get:
      description: Retrieve the history of a device asset
      operationId: listDeviceAssetHistory
      parameters:
        - description: The device asset ID
          in: path
          name: id
          required: true
          type: string
        - default: 100
          description: Maximum number of results to return
          format: int64
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          type: integer
        - default: 0
          description: Number of results to skip for pagination
          format: int64
          in: query
          minimum: 0
          name: skip
          type: integer
      responses:
        '200':
          description: Device asset history retrieved successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.AssetHistoryResponse'
        '400':
          description: Bad request - invalid asset ID or parameters
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Device asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: List device asset history
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/assets/devices/{id}/history?limit=100&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/devices/{id}/history"

            querystring = {"limit":"100","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/devices/{id}/history?limit=100&skip=0' -Method GET -Headers $headers
    post:
      description: Add a note to the device asset history
      operationId: createDeviceAssetHistoryNote
      parameters:
        - description: The device asset ID
          in: path
          name: id
          required: true
          type: string
        - description: History note data
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.CreateAssetHistoryNoteRequest'
      responses:
        '201':
          description: History note created successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.AssetHistoryEvent'
        '400':
          description: Bad request - invalid data
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Device asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Create device asset history note
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/assets/devices/{id}/history \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"note":"Asset transferred to new department"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/devices/{id}/history"

            payload = {"note": "Asset transferred to new department"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/devices/{id}/history' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"note":"Asset transferred to new department"}'
  /assets/locations:
    get:
      description: Retrieve a list of location assets with optional pagination
      operationId: listLocationAssets
      parameters:
        - default: 100
          description: Maximum number of results to return
          format: int64
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          type: integer
        - default: 0
          description: Number of results to skip for pagination
          format: int64
          in: query
          minimum: 0
          name: skip
          type: integer
        - collectionFormat: csv
          description: List of field labels to include in the response
          in: query
          items:
            type: string
          name: fields
          type: array
      responses:
        '200':
          description: Location assets retrieved successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.AssetListResponse'
        '400':
          description: Bad request - invalid query parameters
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: List location assets
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/assets/locations?limit=100&skip=0&fields=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/locations"

            querystring = {"limit":"100","skip":"0","fields":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/locations?limit=100&skip=0&fields=SOME_ARRAY_VALUE' -Method GET -Headers $headers
    post:
      description: Create a new location asset
      operationId: createLocationAsset
      parameters:
        - description: Location asset creation data
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.CreateAssetRequest'
      responses:
        '201':
          description: Location asset created successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.Asset'
        '400':
          description: Bad request - invalid data format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Create a location asset
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/assets/locations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"fields":{}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/locations"

            payload = {"fields": {}}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/locations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"fields":{}}'
  /assets/locations/batch:
    patch:
      description: Update multiple location assets with a single field value change
      operationId: batchUpdateLocationAssets
      parameters:
        - description: Batch update data with asset IDs and field value
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.BatchUpdateLocationAssetsRequest'
      responses:
        '200':
          description: Batch update completed
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.BatchUpdateLocationAssetsResponse'
        '400':
          description: Bad request - invalid data
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Batch update location assets
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/assets/locations/batch \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"assetIds":["507f1f77bcf86cd799439011","507f1f77bcf86cd799439012"],"fieldValue":{"label":"Status","value":{"id":"507f1f77bcf86cd799439013","name":"Active","type":"select"}}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/locations/batch"

            payload = {
                "assetIds": ["507f1f77bcf86cd799439011", "507f1f77bcf86cd799439012"],
                "fieldValue": {
                    "label": "Status",
                    "value": {
                        "id": "507f1f77bcf86cd799439013",
                        "name": "Active",
                        "type": "select"
                    }
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/locations/batch' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"assetIds":["507f1f77bcf86cd799439011","507f1f77bcf86cd799439012"],"fieldValue":{"label":"Status","value":{"id":"507f1f77bcf86cd799439013","name":"Active","type":"select"}}}'
  '/assets/locations/{id}':
    delete:
      description: Delete an existing location asset by its ID
      operationId: deleteLocationAsset
      parameters:
        - description: The location asset ID
          in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Location asset deleted successfully
        '400':
          description: Bad request - invalid ID format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Location asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Delete a location asset
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/assets/locations/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/locations/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/locations/{id}' -Method DELETE -Headers $headers
    get:
      description: Retrieve a specific location asset by its ID
      operationId: getLocationAsset
      parameters:
        - description: The location asset ID
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Location asset retrieved successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.Asset'
        '400':
          description: Bad request - invalid ID format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Location asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Get a location asset
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/assets/locations/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/locations/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/locations/{id}' -Method GET -Headers $headers
    put:
      description: Update an existing location asset by its ID
      operationId: updateLocationAsset
      parameters:
        - description: The location asset ID
          in: path
          name: id
          required: true
          type: string
        - description: Location asset update data
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.UpdateAssetRequest'
      responses:
        '200':
          description: Location asset updated successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.Asset'
        '400':
          description: Bad request - invalid data or ID format
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Location asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Update a location asset
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/assets/locations/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"fields":{}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/locations/{id}"

            payload = {"fields": {}}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/locations/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"fields":{}}'
  '/assets/locations/{id}/history':
    get:
      description: Retrieve the history of a location asset
      operationId: listLocationAssetHistory
      parameters:
        - description: The location asset ID
          in: path
          name: id
          required: true
          type: string
        - default: 100
          description: Maximum number of results to return
          format: int64
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          type: integer
        - default: 0
          description: Number of results to skip for pagination
          format: int64
          in: query
          minimum: 0
          name: skip
          type: integer
      responses:
        '200':
          description: Location asset history retrieved successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.AssetHistoryResponse'
        '400':
          description: Bad request - invalid asset ID or parameters
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Location asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: List location asset history
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/assets/locations/{id}/history?limit=100&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/locations/{id}/history"

            querystring = {"limit":"100","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/locations/{id}/history?limit=100&skip=0' -Method GET -Headers $headers
    post:
      description: Add a note to the location asset history
      operationId: createLocationAssetHistoryNote
      parameters:
        - description: The location asset ID
          in: path
          name: id
          required: true
          type: string
        - description: History note data
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.CreateAssetHistoryNoteRequest'
      responses:
        '201':
          description: History note created successfully
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.AssetHistoryEvent'
        '400':
          description: Bad request - invalid data
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '401':
          description: Unauthorized - authentication required
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        '404':
          description: Location asset not found
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/jumpcloud.http.assets.error'
      security:
        - x-api-key: []
      summary: Create location asset history note
      tags:
        - Assets
      x-dynamic-gateway: true
      x-scopes:
        - assets
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/assets/locations/{id}/history \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"note":"Asset transferred to new department"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/assets/locations/{id}/history"

            payload = {"note": "Asset transferred to new department"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/assets/locations/{id}/history' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"note":"Asset transferred to new department"}'
  /authn/policies:
    get:
      description: |-
        Get a list of all authentication policies.

        #### Sample Request
        ```
        curl https://console.jumpcloud.com/api/v2/authn/policies \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: authnpolicies_list
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:listCount:x-total-count'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AuthnPolicy'
            type: array
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List Authentication Policies
      tags:
        - Authentication Policies
      x-scopes:
        - authn
        - authn.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/authn/policies?limit=10&skip=0&filter=&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/authn/policies"

            querystring = {"limit":"10","skip":"0","filter":"","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/authn/policies?limit=10&skip=0&filter=&sort=' -Method GET -Headers $headers
    post:
      description: |-
        Create an authentication policy.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/authn/policies \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "Sample Policy",
            "disabled": false,
            "effect": {
              "action": "allow"
            },
            "targets": {
              "users": {
                "inclusions": ["ALL"]
              },
              "userGroups": {
                "exclusions": [{USER_GROUP_ID}]
              },
              "resources": [ {"type": "user_portal" } ]
            },
            "conditions":{
              "ipAddressIn": [{IP_LIST_ID}]
            }
          }'
        ```
      operationId: authnpolicies_post
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AuthnPolicy'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/AuthnPolicy'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Create an Authentication Policy
      tags:
        - Authentication Policies
      x-scopes:
        - authn
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/authn/policies \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"conditions":{},"description":"string","disabled":true,"effect":{"action":"allow","custom_error_message":{"enabled":true,"message":"string","primary_help":{"text":"string","url":"string"},"secondary_help":{"text":"string","url":"string"}},"obligations":{"mfa":{"required":true},"mfaFactors":[{"type":"DURT"}],"userVerification":{"requirement":"none"}}},"name":"string","targets":{"resources":[{"id":"string","type":"admin_portal"}],"userAttributes":{"exclusions":[{"field":"string","operator":"EQ","value":null}],"inclusions":[{"field":"string","operator":"EQ","value":null}]},"userGroups":{"exclusions":["string"],"inclusions":["string"]},"users":{"inclusions":["string"]}},"type":"user_portal"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/authn/policies"

            payload = {
                "conditions": {},
                "description": "string",
                "disabled": True,
                "effect": {
                    "action": "allow",
                    "custom_error_message": {
                        "enabled": True,
                        "message": "string",
                        "primary_help": {
                            "text": "string",
                            "url": "string"
                        },
                        "secondary_help": {
                            "text": "string",
                            "url": "string"
                        }
                    },
                    "obligations": {
                        "mfa": {"required": True},
                        "mfaFactors": [{"type": "DURT"}],
                        "userVerification": {"requirement": "none"}
                    }
                },
                "name": "string",
                "targets": {
                    "resources": [
                        {
                            "id": "string",
                            "type": "admin_portal"
                        }
                    ],
                    "userAttributes": {
                        "exclusions": [
                            {
                                "field": "string",
                                "operator": "EQ",
                                "value": None
                            }
                        ],
                        "inclusions": [
                            {
                                "field": "string",
                                "operator": "EQ",
                                "value": None
                            }
                        ]
                    },
                    "userGroups": {
                        "exclusions": ["string"],
                        "inclusions": ["string"]
                    },
                    "users": {"inclusions": ["string"]}
                },
                "type": "user_portal"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/authn/policies' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"conditions":{},"description":"string","disabled":true,"effect":{"action":"allow","custom_error_message":{"enabled":true,"message":"string","primary_help":{"text":"string","url":"string"},"secondary_help":{"text":"string","url":"string"}},"obligations":{"mfa":{"required":true},"mfaFactors":[{"type":"DURT"}],"userVerification":{"requirement":"none"}}},"name":"string","targets":{"resources":[{"id":"string","type":"admin_portal"}],"userAttributes":{"exclusions":[{"field":"string","operator":"EQ","value":null}],"inclusions":[{"field":"string","operator":"EQ","value":null}]},"userGroups":{"exclusions":["string"],"inclusions":["string"]},"users":{"inclusions":["string"]}},"type":"user_portal"}'
    x-functionalities-tags:
      - policies
  '/authn/policies/{id}':
    delete:
      description: |-
        Delete the specified authentication policy.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/authn/policies/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: authnpolicies_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthnPolicy'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete Authentication Policy
      tags:
        - Authentication Policies
      x-scopes:
        - authn
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/authn/policies/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/authn/policies/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/authn/policies/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        Return a specific authentication policy.

        #### Sample Request
        ```
        curl https://console.jumpcloud.com/api/v2/authn/policies/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: authnpolicies_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthnPolicy'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get an authentication policy
      tags:
        - Authentication Policies
      x-scopes:
        - authn
        - authn.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/authn/policies/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/authn/policies/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/authn/policies/{id}' -Method GET -Headers $headers
    parameters:
      - description: Unique identifier of the authentication policy
        in: path
        name: id
        required: true
        type: string
    patch:
      description: |-
        Patch the specified authentication policy.

        #### Sample Request
        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/authn/policies/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{ "disabled": false }'
        ```
      operationId: authnpolicies_patch
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AuthnPolicy'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthnPolicy'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Patch Authentication Policy
      tags:
        - Authentication Policies
      x-scopes:
        - authn
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/authn/policies/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"conditions":{},"description":"string","disabled":true,"effect":{"action":"allow","custom_error_message":{"enabled":true,"message":"string","primary_help":{"text":"string","url":"string"},"secondary_help":{"text":"string","url":"string"}},"obligations":{"mfa":{"required":true},"mfaFactors":[{"type":"DURT"}],"userVerification":{"requirement":"none"}}},"name":"string","targets":{"resources":[{"id":"string","type":"admin_portal"}],"userAttributes":{"exclusions":[{"field":"string","operator":"EQ","value":null}],"inclusions":[{"field":"string","operator":"EQ","value":null}]},"userGroups":{"exclusions":["string"],"inclusions":["string"]},"users":{"inclusions":["string"]}},"type":"user_portal"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/authn/policies/{id}"

            payload = {
                "conditions": {},
                "description": "string",
                "disabled": True,
                "effect": {
                    "action": "allow",
                    "custom_error_message": {
                        "enabled": True,
                        "message": "string",
                        "primary_help": {
                            "text": "string",
                            "url": "string"
                        },
                        "secondary_help": {
                            "text": "string",
                            "url": "string"
                        }
                    },
                    "obligations": {
                        "mfa": {"required": True},
                        "mfaFactors": [{"type": "DURT"}],
                        "userVerification": {"requirement": "none"}
                    }
                },
                "name": "string",
                "targets": {
                    "resources": [
                        {
                            "id": "string",
                            "type": "admin_portal"
                        }
                    ],
                    "userAttributes": {
                        "exclusions": [
                            {
                                "field": "string",
                                "operator": "EQ",
                                "value": None
                            }
                        ],
                        "inclusions": [
                            {
                                "field": "string",
                                "operator": "EQ",
                                "value": None
                            }
                        ]
                    },
                    "userGroups": {
                        "exclusions": ["string"],
                        "inclusions": ["string"]
                    },
                    "users": {"inclusions": ["string"]}
                },
                "type": "user_portal"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/authn/policies/{id}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"conditions":{},"description":"string","disabled":true,"effect":{"action":"allow","custom_error_message":{"enabled":true,"message":"string","primary_help":{"text":"string","url":"string"},"secondary_help":{"text":"string","url":"string"}},"obligations":{"mfa":{"required":true},"mfaFactors":[{"type":"DURT"}],"userVerification":{"requirement":"none"}}},"name":"string","targets":{"resources":[{"id":"string","type":"admin_portal"}],"userAttributes":{"exclusions":[{"field":"string","operator":"EQ","value":null}],"inclusions":[{"field":"string","operator":"EQ","value":null}]},"userGroups":{"exclusions":["string"],"inclusions":["string"]},"users":{"inclusions":["string"]}},"type":"user_portal"}'
    x-functionalities-tags:
      - policies
  '/authn/policy/fallback/{resource_type}':
    parameters:
      - $ref: '#/parameters/trait:authnfallbackpolicy:resourceType'
    x-functionalities-tags:
      - policies
  /bulk/user/expires:
    post:
      description: The endpoint allows you to start a bulk job to asynchronously expire users.
      operationId: bulk_userExpires
      parameters:
        - in: body
          name: body
          schema:
            items:
              $ref: '#/definitions/bulk-user-expire'
            type: array
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/job-id'
      security:
        - x-api-key: []
      summary: Bulk Expire Users
      tags:
        - Bulk Job Requests
      x-scopes:
        - users
        - users.password
        - users.password.expire
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/bulk/user/expires \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '[{"attributes":[{}],"id":"string","organization":"string"}]'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/bulk/user/expires"

            payload = [
                {
                    "attributes": [{}],
                    "id": "string",
                    "organization": "string"
                }
            ]
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/bulk/user/expires' -Method POST -Headers $headers -ContentType 'application/json' -Body '[{"attributes":[{}],"id":"string","organization":"string"}]'
  /bulk/user/unlocks:
    post:
      description: The endpoint allows you to start a bulk job to asynchronously unlock users.
      operationId: bulk_userUnlocks
      parameters:
        - in: body
          name: body
          schema:
            items:
              $ref: '#/definitions/bulk-user-unlock'
            type: array
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/job-id'
      security:
        - x-api-key: []
      summary: Bulk Unlock Users
      tags:
        - Bulk Job Requests
      x-scopes:
        - users
        - users.state
        - users.state.unlock
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/bulk/user/unlocks \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '[{"attributes":[{}],"id":"string","organization":"string"}]'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/bulk/user/unlocks"

            payload = [
                {
                    "attributes": [{}],
                    "id": "string",
                    "organization": "string"
                }
            ]
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/bulk/user/unlocks' -Method POST -Headers $headers -ContentType 'application/json' -Body '[{"attributes":[{}],"id":"string","organization":"string"}]'
  /bulk/users:
    patch:
      description: "The endpoint allows you to create a bulk job to asynchronously update users. See [Update a System User](https://docs.jumpcloud.com/api/1.0/index.html#operation/systemusers_put) for full list of attributes.\n\n#### Sample Request \n```\ncurl -X PATCH https://console.jumpcloud.com/api/v2/bulk/users \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '[\n\t{\n\t  \"id\":\"5be9fb4ddb01290001e85109\",\n\t\t\"firstname\":\"{UPDATED_FIRSTNAME}\",\n\t\t\"department\":\"{UPDATED_DEPARTMENT}\",\n\t\t\"attributes\":[\n\t\t\t{\"name\":\"Custom\",\"value\":\"{ATTRIBUTE_VALUE}\"}\n\t\t]\n\t},\n\t{\n\t  \"id\":\"5be9fb4ddb01290001e85109\",\n\t\t\"firstname\":\"{UPDATED_FIRSTNAME}\",\n\t\t\"costCenter\":\"{UPDATED_COST_CENTER}\",\n\t\t\"phoneNumbers\":[\n\t\t\t{\"type\":\"home\",\"number\":\"{HOME_PHONE_NUMBER}\"},\n\t\t\t{\"type\":\"work\",\"number\":\"{WORK_PHONE_NUMBER}\"}\n\t\t]\n\t}\n]\n```"
      operationId: bulk_usersUpdate
      parameters:
        - $ref: '#/parameters/trait:bulkJobQueryParameters:suppressEmail'
        - in: body
          name: body
          schema:
            items:
              $ref: '#/definitions/bulk-user-update'
            type: array
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/job-id'
      security:
        - x-api-key: []
      summary: Bulk Users Update
      tags:
        - Bulk Job Requests
      x-scopes:
        - users
        - users.properties
        - users.properties.update
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://console.jumpcloud.com/api/v2/bulk/users?suppressEmail=SOME_BOOLEAN_VALUE' \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '[{"attributes":[{}],"email":"string","firstname":"string","id":"string","lastname":"string","organization":"string","username":"string"}]'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/bulk/users"

            querystring = {"suppressEmail":"SOME_BOOLEAN_VALUE"}

            payload = [
                {
                    "attributes": [{}],
                    "email": "string",
                    "firstname": "string",
                    "id": "string",
                    "lastname": "string",
                    "organization": "string",
                    "username": "string"
                }
            ]
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/bulk/users?suppressEmail=SOME_BOOLEAN_VALUE' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '[{"attributes":[{}],"email":"string","firstname":"string","id":"string","lastname":"string","organization":"string","username":"string"}]'
    post:
      description: |-
        The endpoint allows you to create a bulk job to asynchronously create users.
        See [Create a System User](https://docs.jumpcloud.com/api/1.0/index.html#operation/systemusers_post)
        for the full list of attributes.

        #### Default User State
        The `state` of each user in the request can be explicitly passed in or
        omitted. If `state` is omitted, then the user will get created
        using the value returned from the
        [Get an Organization](https://docs.jumpcloud.com/api/1.0/index.html#operation/organizations_get)
        endpoint. The default user state for bulk created users depends on the
        `creation-source` header. For `creation-source:jumpcloud:bulk` the
        default state is stored in `settings.newSystemUserStateDefaults.csvImport`.
        For other `creation-source` header values, the default state is stored in
        `settings.newSystemUserStateDefaults.applicationImport`

        These default state values can be changed in the admin portal settings
        or by using the
        [Update an Organization](https://docs.jumpcloud.com/api/1.0/index.html#operation/organization_put)
        endpoint.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/bulk/users \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: {API_KEY}' \
        -d '[
          {
            "email":"{email}",
            "firstname":"{firstname}",
            "lastname":"{firstname}",
            "username":"{username}",
            "attributes":[
              {
                "name":"EmployeeID",
                "value":"0000"
              },
              {
                "name":"Custom",
                "value":"attribute"
              }
            ]
          }
        ]'
        ```
      operationId: bulk_usersCreate
      parameters:
        - $ref: '#/parameters/trait:bulkJobQueryParameters:suppressEmail'
        - in: body
          name: body
          schema:
            items:
              $ref: '#/definitions/bulk-user-create'
            type: array
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - default: 'jumpcloud:bulk'
          description: |
            Defines the creation-source header for gapps, o365 and workdays requests.
            If the header isn't sent, the default value is `jumpcloud:bulk`, if you send the header with a malformed value you receive a 400 error.
          enum:
            - 'jumpcloud:gapps'
            - 'jumpcloud:o365'
            - 'jumpcloud:workday'
            - 'jumpcloud:scim'
            - 'jumpcloud:bulk'
            - 'jumpcloud:custom_integration'
          in: header
          name: creation-source
          type: string
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/job-id'
      security:
        - x-api-key: []
      summary: Bulk Users Create
      tags:
        - Bulk Job Requests
      x-scopes:
        - users
        - users.create
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url 'https://console.jumpcloud.com/api/v2/bulk/users?suppressEmail=SOME_BOOLEAN_VALUE' \
              --header 'content-type: application/json' \
              --header 'creation-source: jumpcloud:bulk' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '[{"attributes":[{}],"email":"string","firstname":"string","lastname":"string","username":"string"}]'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/bulk/users"

            querystring = {"suppressEmail":"SOME_BOOLEAN_VALUE"}

            payload = [
                {
                    "attributes": [{}],
                    "email": "string",
                    "firstname": "string",
                    "lastname": "string",
                    "username": "string"
                }
            ]
            headers = {
                "creation-source": "jumpcloud:bulk",
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("creation-source", "jumpcloud:bulk")
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/bulk/users?suppressEmail=SOME_BOOLEAN_VALUE' -Method POST -Headers $headers -ContentType 'application/json' -Body '[{"attributes":[{}],"email":"string","firstname":"string","lastname":"string","username":"string"}]'
    x-functionalities-tags:
      - users-bulk-activate
      - users-bulk-suspend
  '/bulk/users/{job_id}/results':
    get:
      description: |-
        This endpoint will return the results of particular user import or update job request.

        #### Sample Request
        ```
        curl -X GET \
          https://console.jumpcloud.com/api/v2/bulk/users/{ImportJobID}/results \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: bulk_usersCreateResults
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/job-workresult'
            type: array
      security:
        - x-api-key: []
      summary: List Bulk Users Results
      tags:
        - Bulk Job Requests
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/bulk/users/{job_id}/results?limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/bulk/users/{job_id}/results"

            querystring = {"limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/bulk/users/{job_id}/results?limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - in: path
        name: job_id
        required: true
        type: string
    x-functionalities-tags:
      - users-bulk-activate
      - users-bulk-suspend
  /bulk/userstates:
    get:
      description: |-
        The endpoint allows you to list scheduled statechange jobs.
        #### Sample Request
        ```
        curl -X GET "https://console.jumpcloud.com/api/v2/bulk/userstates" \
          -H 'x-api-key: {API_KEY}' \
          -H 'Content-Type: application/json' \
          -H 'Accept: application/json'
        ```
      operationId: bulk_userStatesList
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - description: The systemuser id to filter by.
          in: query
          name: userid
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/scheduled-userstate-result'
            type: array
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List Scheduled Userstate Change Jobs
      tags:
        - Bulk Job Requests
      x-scopes:
        - users
        - users.readonly
        - users.state
        - users.state.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/bulk/userstates?limit=10&filter=&skip=0&userid=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/bulk/userstates"

            querystring = {"limit":"10","filter":"","skip":"0","userid":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/bulk/userstates?limit=10&filter=&skip=0&userid=SOME_STRING_VALUE' -Method GET -Headers $headers
    post:
      description: |-
        This endpoint allows you to create scheduled statechange jobs.
        #### Sample Request
        ```
        curl -X POST "https://console.jumpcloud.com/api/v2/bulk/userstates" \
          -H 'x-api-key: {API_KEY}' \
          -H 'Content-Type: application/json' \
          -H 'Accept: application/json' \
          -d '{
            "user_ids": ["{User_ID_1}", "{User_ID_2}", "{User_ID_3}"],
            "state": "SUSPENDED",
            "start_date": "2000-01-01T00:00:00.000Z"
          }'
        ```
      operationId: bulk_userStatesCreate
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/bulk-scheduled-statechange-create'
      responses:
        '201':
          description: Created
          examples: {}
          schema:
            items:
              $ref: '#/definitions/scheduled-userstate-result'
            type: array
        '400':
          description: Bad Request
          schema:
            properties: {}
            type: object
        '401':
          description: Unauthorized
          schema:
            properties: {}
            type: object
        '500':
          description: Internal Server Error
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Create Scheduled Userstate Job
      tags:
        - Bulk Job Requests
      x-scopes:
        - users
        - users.state
        - users.state.update
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/bulk/userstates \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"activation_email_override":"string","send_activation_emails":true,"start_date":"2019-08-24T14:15:22Z","state":"ACTIVATED","user_ids":["string"]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/bulk/userstates"

            payload = {
                "activation_email_override": "string",
                "send_activation_emails": True,
                "start_date": "2019-08-24T14:15:22Z",
                "state": "ACTIVATED",
                "user_ids": ["string"]
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/bulk/userstates' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"activation_email_override":"string","send_activation_emails":true,"start_date":"2019-08-24T14:15:22Z","state":"ACTIVATED","user_ids":["string"]}'
    x-functionalities-tags:
      - users-bulk-activate
      - users-bulk-suspend
  /bulk/userstates/eventlist/next:
    get:
      description: |-
        This endpoint is used to lookup the next upcoming scheduled state change for each user in the
        given list. The users parameter is limited to 100 items per request. The results are also limited
        to 100 items. This endpoint returns a max of 1 event per state per user. For example, if a user
        has 3 ACTIVATED events scheduled it will return the next upcoming activation event. However, if a
        user also has a SUSPENDED event scheduled along with the ACTIVATED events it will return the next
        upcoming activation event _and_ the next upcoming suspension event.
      operationId: bulk_userStatesGetNextScheduled
      parameters:
        - description: 'A list of system user IDs, limited to 100 items.'
          in: query
          items:
            type: string
          maxItems: 100
          minItems: 0
          name: users
          required: true
          type: array
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
      responses:
        '200':
          description: OK
          schema:
            properties:
              events_count:
                description: |-
                  The total number of ACTIVATED and SUSPENDED events to a max depth of 1 for
                  all of the users in the query. A value larger than the limit specified on
                  the query indicates that additional calls are needed, using a skip greater
                  than 0, to retrieve the full set of results.
                type: integer
              results:
                items:
                  $ref: '#/definitions/scheduled-userstate-result'
                type: array
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get the next scheduled state change for a list of users
      tags:
        - Bulk Job Requests
      x-scopes:
        - users
        - users.readonly
        - users.state
        - users.state.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/bulk/userstates/eventlist/next?users=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/bulk/userstates/eventlist/next"

            querystring = {"users":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/bulk/userstates/eventlist/next?users=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters: []
    x-functionalities-tags:
      - users-bulk-activate
      - users-bulk-suspend
  '/bulk/userstates/{id}':
    delete:
      description: |-
        This endpoint deletes a scheduled statechange job.
        #### Sample Request
        ```
        curl -X DELETE "https://console.jumpcloud.com/api/v2/bulk/userstates/{ScheduledJob_ID}" \
          -H 'x-api-key: {API_KEY}' \
          -H 'Content-Type: application/json' \
          -H 'Accept: application/json'
        ```
      operationId: bulk_userStatesDelete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: No Content
          headers: {}
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete Scheduled Userstate Job
      tags:
        - Bulk Job Requests
      x-scopes:
        - users
        - users.state
        - users.state.delete
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/bulk/userstates/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/bulk/userstates/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/bulk/userstates/{id}' -Method DELETE -Headers $headers
    parameters:
      - description: Unique identifier of the scheduled statechange job.
        in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - users-bulk-activate
      - users-bulk-suspend
  /cases/metadata:
    get:
      description: This endpoint returns the metadata for cases
      operationId: organizations_casesMetadata
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CasesMetadataResponse'
      security:
        - x-api-key: []
      summary: Get the metadata for cases
      tags:
        - Providers
        - Managed Service Provider
      x-scopes:
        - support
        - support.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/cases/metadata \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/cases/metadata"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/cases/metadata' -Method GET -Headers $headers
    x-functionalities-tags:
      - cases
  /commandTemplates:
    x-functionalities-tags:
      - command-templates
  '/commandqueue/{workflow_instance_id}':
    delete:
      description: |-
        This endpoint allows all queued commands for one workflow instance to be canceled.

        #### Sample Request
        ```
         curl -X DELETE https://console.jumpcloud.com/api/v2/commandqueue/{workflow_instance_id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: commands_cancelQueuedCommandsByWorkflowInstanceId
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Cancel all queued commands for an organization by workflow instance Id
      tags:
        - Commands
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/commandqueue/{workflow_instance_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/commandqueue/{workflow_instance_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/commandqueue/{workflow_instance_id}' -Method DELETE -Headers $headers
    parameters:
      - description: Workflow instance Id of the queued commands to cancel.
        in: path
        name: workflow_instance_id
        required: true
        type: string
    x-functionalities-tags:
      - queued-commands
  '/commands/{command_id}/associations':
    get:
      description: |-
        This endpoint will return the _direct_ associations of this Command.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Commands and User Groups.


        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/commands/{Command_ID}/associations?targets=system_group \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_commandAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsCommand:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a Command
      tags:
        - Graph
        - Commands
      x-scopes:
        - commands
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/commands/{command_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/commands/{command_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/commands/{command_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Command.
        in: path
        name: command_id
        required: true
        type: string
    post:
      description: |-
        This endpoint will allow you to manage the _direct_ associations of this Command.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Commands and User Groups.


        #### Sample Request
        ```
         curl -X POST https://console.jumpcloud.com/api/v2/commands/{Command_ID}/associations \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "system_group",
            "id": "Group_ID"
          }'
        ```
      operationId: graph_commandAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-Command'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a Command
      tags:
        - Graph
        - Commands
      x-scopes:
        - commands
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/commands/{command_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"system"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/commands/{command_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "system"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/commands/{command_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"system"}'
    x-functionalities-tags:
      - commands
  '/commands/{command_id}/systemgroups':
    get:
      description: |-
        This endpoint will return all System Groups bound to a Command, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Command to the corresponding System Group; this array represents all grouping and/or associations that would have to be removed to deprovision the System Group from this Command.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/commands/{Command_ID}/systemgroups \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_commandTraverseSystemGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the System Groups bound to a Command
      tags:
        - Graph
        - Commands
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/commands/{command_id}/systemgroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/commands/{command_id}/systemgroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/commands/{command_id}/systemgroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Command.
        in: path
        name: command_id
        required: true
        type: string
    x-functionalities-tags:
      - systemgroups
      - commands
  '/commands/{command_id}/systems':
    get:
      description: |-
        This endpoint will return all Systems bound to a Command, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Command to the corresponding System; this array represents all grouping and/or associations that would have to be removed to deprovision the System from this Command.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/commands/{Command_ID}/systems \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_commandTraverseSystem
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Systems bound to a Command
      tags:
        - Graph
        - Commands
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/commands/{command_id}/systems?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/commands/{command_id}/systems"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/commands/{command_id}/systems?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Command.
        in: path
        name: command_id
        required: true
        type: string
    x-functionalities-tags:
      - systems
      - commands
  /customemail/templates:
    get:
      description: Get the list of custom email templates
      operationId: customEmails_getTemplates
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/CustomEmailTemplate'
            type: array
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List custom email templates
      tags:
        - Custom Emails
      x-scopes:
        - organizations
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/customemail/templates \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/customemail/templates"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/customemail/templates' -Method GET -Headers $headers
    x-functionalities-tags:
      - logos
  /customemails:
    post:
      description: |-
        Create the custom email configuration for the specified custom email type.

        This action is only available to paying customers.
      operationId: customEmails_create
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/CustomEmail'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/CustomEmail'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Create custom email configuration
      tags:
        - Custom Emails
      x-scopes:
        - organizations
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/customemails \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"body":"string","button":"string","header":"string","nextStepContactInfo":"string","subject":"string","title":"string","type":"activate_gapps_user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/customemails"

            payload = {
                "body": "string",
                "button": "string",
                "header": "string",
                "nextStepContactInfo": "string",
                "subject": "string",
                "title": "string",
                "type": "activate_gapps_user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/customemails' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"body":"string","button":"string","header":"string","nextStepContactInfo":"string","subject":"string","title":"string","type":"activate_gapps_user"}'
  '/customemails/{custom_email_type}':
    delete:
      description: Delete the custom email configuration for the specified custom email type
      operationId: customEmails_destroy
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete custom email configuration
      tags:
        - Custom Emails
      x-scopes:
        - organizations
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/customemails/{custom_email_type} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/customemails/{custom_email_type}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/customemails/{custom_email_type}' -Method DELETE -Headers $headers
    get:
      description: Get the custom email configuration for the specified custom email type
      operationId: customEmails_read
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomEmail'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get custom email configuration
      tags:
        - Custom Emails
      x-scopes:
        - organizations
        - organizations.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/customemails/{custom_email_type} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/customemails/{custom_email_type}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/customemails/{custom_email_type}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: custom_email_type
        required: true
        type: string
    put:
      description: |-
        Update the custom email configuration for the specified custom email type.

        This action is only available to paying customers.
      operationId: customEmails_update
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CustomEmail'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomEmail'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update custom email configuration
      tags:
        - Custom Emails
      x-scopes:
        - organizations
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/customemails/{custom_email_type} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"body":"string","button":"string","header":"string","nextStepContactInfo":"string","subject":"string","title":"string","type":"activate_gapps_user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/customemails/{custom_email_type}"

            payload = {
                "body": "string",
                "button": "string",
                "header": "string",
                "nextStepContactInfo": "string",
                "subject": "string",
                "title": "string",
                "type": "activate_gapps_user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/customemails/{custom_email_type}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"body":"string","button":"string","header":"string","nextStepContactInfo":"string","subject":"string","title":"string","type":"activate_gapps_user"}'
    x-functionalities-tags:
      - custom-email
  /defaultpolicygrouptemplates:
    x-functionalities-tags:
      - policy-group-templates
  /devices/os_aggregation:
    x-functionalities-tags:
      - reports-devices
  /devices/settings/defaultpasswordsync:
    get:
      description: Gets the Default Password Sync Setting for an Organization.
      operationId: SystemsOrgSettings_GetDefaultPasswordSyncSettings
      parameters:
        - format: byte
          in: query
          name: organizationObjectId
          required: false
          type: string
      responses:
        '200':
          description: Setting successfully retrieved.
          schema:
            $ref: '#/definitions/devices.GetDefaultPasswordSyncSettingsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Get the Default Password Sync Setting
      tags:
        - Systems Organization Settings
      x-dynamic-gateway: true
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/devices/settings/defaultpasswordsync?organizationObjectId=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/devices/settings/defaultpasswordsync"

            querystring = {"organizationObjectId":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/devices/settings/defaultpasswordsync?organizationObjectId=SOME_STRING_VALUE' -Method GET -Headers $headers
    put:
      description: Sets the Default Password Sync Setting for an Organization.
      operationId: SystemsOrgSettings_SetDefaultPasswordSyncSettings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/devices.SetDefaultPasswordSyncSettingsRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
        '204':
          description: Setting successfully changed.
          schema: {}
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Set the Default Password Sync Setting
      tags:
        - Systems Organization Settings
      x-dynamic-gateway: true
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/devices/settings/defaultpasswordsync \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"enabled":true,"organizationObjectId":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/devices/settings/defaultpasswordsync"

            payload = {
                "enabled": True,
                "organizationObjectId": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/devices/settings/defaultpasswordsync' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"enabled":true,"organizationObjectId":"string"}'
  /devices/settings/signinwithjumpcloud:
    get:
      description: |-
        Gets the Sign In with JumpCloud Settings for an Organization.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/devices/settings/signinwithjumpcloud \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key:{API_KEY}'
        ```
      operationId: SystemsOrgSettings_GetSignInWithJumpCloudSettings
      parameters:
        - format: byte
          in: query
          name: organizationObjectId
          required: false
          type: string
      responses:
        '200':
          description: Settings successfully retrieved.
          schema:
            $ref: '#/definitions/devices.GetSignInWithJumpCloudSettingsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Get the Sign In with JumpCloud Settings
      tags:
        - Systems Organization Settings
      x-dynamic-gateway: true
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/devices/settings/signinwithjumpcloud?organizationObjectId=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/devices/settings/signinwithjumpcloud"

            querystring = {"organizationObjectId":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/devices/settings/signinwithjumpcloud?organizationObjectId=SOME_STRING_VALUE' -Method GET -Headers $headers
    put:
      description: |-
        Sets the Sign In with JumpCloud Settings for an Organization.

        #### Sample Request
        ```
        curl -X PUT https://console.jumpcloud.com/api/v2/devices/settings/signinwithjumpcloud \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key:{API_KEY}' \
          -d '{"settings":[{"osFamily":"WINDOWS","enabled":true,"defaultPermission":"STANDARD"}]}'
        ```
      operationId: SystemsOrgSettings_SetSignInWithJumpCloudSettings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/devices.SetSignInWithJumpCloudSettingsRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
        '204':
          description: Settings successfully changed.
          schema: {}
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Set the Sign In with JumpCloud Settings
      tags:
        - Systems Organization Settings
      x-dynamic-gateway: true
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/devices/settings/signinwithjumpcloud \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"organizationObjectId":"string","settings":[{"defaultPermission":"STANDARD","enabled":true,"osFamily":"UNKNOWN"}]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/devices/settings/signinwithjumpcloud"

            payload = {
                "organizationObjectId": "string",
                "settings": [
                    {
                        "defaultPermission": "STANDARD",
                        "enabled": True,
                        "osFamily": "UNKNOWN"
                    }
                ]
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/devices/settings/signinwithjumpcloud' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"organizationObjectId":"string","settings":[{"defaultPermission":"STANDARD","enabled":true,"osFamily":"UNKNOWN"}]}'
  /devices/settings/ssao:
    get:
      description: |-
        Gets the SSAO devices Settings for an Organization.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/devices/settings/ssao \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key:{API_KEY}'
        ```
      operationId: SystemsOrgSettings_GetSsaoDevicesSettings
      parameters:
        - format: byte
          in: query
          name: organizationObjectId
          required: false
          type: string
      responses:
        '200':
          description: Settings successfully retrieved.
          schema:
            $ref: '#/definitions/devices.GetSsaoDevicesSettingsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Get the SSAO Devices Settings for an Organization
      tags:
        - Systems Organization Settings
      x-dynamic-gateway: true
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/devices/settings/ssao?organizationObjectId=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/devices/settings/ssao"

            querystring = {"organizationObjectId":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/devices/settings/ssao?organizationObjectId=SOME_STRING_VALUE' -Method GET -Headers $headers
    put:
      description: |-
        Sets the SSAO devices Settings for an Organization.

        #### Sample Request
        ```
        curl -X PUT https://console.jumpcloud.com/api/v2/devices/settings/ssao \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key:{API_KEY}' \
          -d '{"settings":[{"osFamily":"WINDOWS","enabled":true,"defaultPermission":"STANDARD"}]}'
        ```
      operationId: SystemsOrgSettings_SetSsaoDevicesSettings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/devices.SetSsaoDevicesSettingsRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
        '204':
          description: Settings successfully changed.
          schema: {}
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Set the SSAO Devices Settings for an Organization
      tags:
        - Systems Organization Settings
      x-dynamic-gateway: true
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/devices/settings/ssao \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"organizationObjectId":"string","settings":[{"defaultPermission":"STANDARD","enabled":true,"osFamily":"UNKNOWN","passwordSyncEnabled":true}]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/devices/settings/ssao"

            payload = {
                "organizationObjectId": "string",
                "settings": [
                    {
                        "defaultPermission": "STANDARD",
                        "enabled": True,
                        "osFamily": "UNKNOWN",
                        "passwordSyncEnabled": True
                    }
                ]
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/devices/settings/ssao' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"organizationObjectId":"string","settings":[{"defaultPermission":"STANDARD","enabled":true,"osFamily":"UNKNOWN","passwordSyncEnabled":true}]}'
  /directories:
    get:
      description: |-
        This endpoint returns all active directories (LDAP, O365 Suite, G-Suite).

        #### Sample Request
        ```
         curl -X GET https://console.jumpcloud.com/api/v2/directories \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: directories_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          examples:
            application/json:
              - id: 5f91c8695e980f0001c44619
                name: string
                type: active_directory
              - defaultDomain:
                  domain: string
                  id: string
                id: 5f91c8695e980f0001c44618
                name: string
                type: office_365
              - defaultDomain:
                  domain: string
                  id: string
                id: 5f91c8695e980f0001c44617
                name: string
                type: g_suite
          schema:
            items:
              $ref: '#/definitions/Directory'
            type: array
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List All Directories
      tags:
        - Directories
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/directories?fields=&limit=10&sort=&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/directories"

            querystring = {"fields":"","limit":"10","sort":"","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/directories?fields=&limit=10&sort=&skip=0' -Method GET -Headers $headers
    x-functionalities-tags:
      - directories
  /directoryinsights/events:
    x-functionalities-tags:
      - di-events
  /directoryinsights/events/count:
    x-functionalities-tags:
      - di-events
  /directoryinsights/events/distinct:
    x-functionalities-tags:
      - di-events
  /directoryinsights/events/interval:
    x-functionalities-tags:
      - di-events
  /directoryinsights/graph_view:
    x-functionalities-tags:
      - di-views
  /directoryinsights/reports:
    x-functionalities-tags:
      - reports-directories
  '/directoryinsights/reports/{report_object_key}/artifacts/{artifact_object_key}':
    x-functionalities-tags:
      - reports-directories
  '/directoryinsights/reports/{report_object_key}/artifacts/{artifact_object_key}/content':
    x-functionalities-tags:
      - reports-directories
  '/directoryinsights/reports/{report_type}':
    x-functionalities-tags:
      - reports-directories
  /directoryinsights/views:
    x-functionalities-tags:
      - di-views
  '/directoryinsights/views/{view_id}':
    parameters:
      - in: path
        name: view_id
        required: true
        type: string
    x-functionalities-tags:
      - di-views
  /duo/accounts:
    get:
      description: |-
        This endpoint returns all the Duo accounts for your organization. Note: There can currently only be one Duo account for your organization.

        #### Sample Request
        ```
        curl https://console.jumpcloud.com/api/v2/duo/accounts \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: duo_accountList
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/DuoAccount'
            type: array
      security:
        - x-api-key: []
      summary: List Duo Accounts
      tags:
        - Duo
      x-scopes:
        - mfa
        - mfa.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/duo/accounts \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/duo/accounts"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/duo/accounts' -Method GET -Headers $headers
    post:
      description: |-
        Registers a Duo account for an organization. Only one Duo account will be allowed,
        in case an organization has a Duo account already a 409 (Conflict) code will be returned.

        #### Sample Request
        ```
          curl -X POST https://console.jumpcloud.com/api/v2/duo/accounts \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{}'
        ```
      operationId: duo_accountPost
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/DuoAccount'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Create Duo Account
      tags:
        - Duo
      x-scopes:
        - mfa
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/duo/accounts \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/duo/accounts"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/duo/accounts' -Method POST -Headers $headers
    x-functionalities-tags:
      - duo
  '/duo/accounts/{account_id}/applications':
    get:
      description: |-
        This endpoint returns all the Duo applications for the specified Duo account. Note: There can currently only be one Duo application for your organization.

        #### Sample Request
        ```
          curl https://console.jumpcloud.com/api/v2/duo/accounts/{ACCOUNT_ID}/applications \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: duo_applicationList
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/DuoApplication'
            type: array
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List Duo Applications
      tags:
        - Duo
      x-scopes:
        - mfa
        - mfa.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications' -Method GET -Headers $headers
    parameters:
      - in: path
        name: account_id
        required: true
        type: string
    post:
      description: |-
        Creates a Duo application for your organization and the specified account.

        #### Sample Request
        ```
          curl -X POST https://console.jumpcloud.com/api/v2/duo/accounts/{ACCOUNT_ID}/applications \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "Application Name",
            "apiHost": "api-1234.duosecurity.com",
            "integrationKey": "1234",
            "secretKey": "5678"
          }'
        ```
      operationId: duo_applicationPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DuoApplicationReq'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/DuoApplication'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Create Duo Application
      tags:
        - Duo
      x-scopes:
        - mfa
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"apiHost":"string","integrationKey":"string","name":"string","secretKey":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications"

            payload = {
                "apiHost": "string",
                "integrationKey": "string",
                "name": "string",
                "secretKey": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"apiHost":"string","integrationKey":"string","name":"string","secretKey":"string"}'
    x-functionalities-tags:
      - duo
      - user-portal-applications
  '/duo/accounts/{account_id}/applications/{application_id}':
    delete:
      description: |-
        Deletes the specified Duo application, an error will be returned if the application is used in a protected resource.

        #### Sample Request
        ```
          curl -X DELETE https://console.jumpcloud.com/api/v2/duo/accounts/{ACCOUNT_ID}/applications/{APPLICATION_ID} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}''
        ```
      operationId: duo_applicationDelete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/DuoApplication'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete a Duo Application
      tags:
        - Duo
      x-scopes:
        - mfa
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications/{application_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications/{application_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications/{application_id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns a specific Duo application that is associated with the specified Duo account.

        #### Sample Request
        ```
          curl https://console.jumpcloud.com/api/v2/duo/accounts/{ACCOUNT_ID}/applications/{APPLICATION_ID} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: duo_applicationGet
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/DuoApplication'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get a Duo application
      tags:
        - Duo
      x-scopes:
        - mfa
        - mfa.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications/{application_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications/{application_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications/{application_id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: account_id
        required: true
        type: string
      - in: path
        name: application_id
        required: true
        type: string
    put:
      description: |-
        Updates the specified Duo application.

        #### Sample Request
        ```
          curl -X PUT https://console.jumpcloud.com/api/v2/duo/accounts/{ACCOUNT_ID}/applications/{APPLICATION_ID} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "Application Name",
            "apiHost": "api-1234.duosecurity.com",
            "integrationKey": "1234",
            "secretKey": "5678"
          }'
        ```
      operationId: duo_applicationUpdate
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DuoApplicationUpdateReq'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/DuoApplication'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update Duo Application
      tags:
        - Duo
      x-scopes:
        - mfa
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications/{application_id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"apiHost":"string","integrationKey":"string","name":"string","secretKey":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications/{application_id}"

            payload = {
                "apiHost": "string",
                "integrationKey": "string",
                "name": "string",
                "secretKey": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/duo/accounts/{account_id}/applications/{application_id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"apiHost":"string","integrationKey":"string","name":"string","secretKey":"string"}'
    x-functionalities-tags:
      - duo
      - user-portal-applications
  '/duo/accounts/{id}':
    delete:
      description: |-
        Removes the specified Duo account, an error will be returned if the account has some Duo application used in a protected resource.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/duo/accounts/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: duo_accountDelete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/DuoAccount'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete a Duo Account
      tags:
        - Duo
      x-scopes:
        - mfa
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/duo/accounts/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/duo/accounts/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/duo/accounts/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns a specific Duo account.

        #### Sample Request
        ```
        curl https://console.jumpcloud.com/api/v2/duo/accounts/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: duo_accountGet
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/DuoAccount'
      security:
        - x-api-key: []
      summary: Get a Duo Acount
      tags:
        - Duo
      x-scopes:
        - mfa
        - mfa.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/duo/accounts/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/duo/accounts/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/duo/accounts/{id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Duo Account
        in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - duo
  '/featureTrials/{feature_code}':
    get:
      description: |-
        This endpoint get's the current state of a feature trial for an org.

        #### Sample Request

        ```
          curl -X GET \
          https://console.jumpcloud.local/api/v2/featureTrials/zeroTrust \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: featureTrials_getFeatureTrials
      parameters:
        - in: path
          name: feature_code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureTrialData'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Check current feature trial usage for a specific feature
      tags:
        - FeatureTrials
      x-scopes:
        - organizations
        - organizations.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/featureTrials/{feature_code} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/featureTrials/{feature_code}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/featureTrials/{feature_code}' -Method GET -Headers $headers
  /geolocation/countries:
    x-functionalities-tags:
      - geolocation
  '/google-emm/devices/{deviceId}':
    get:
      description: |-
        Gets a Google EMM enrolled device details.

        #### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId} \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: Devices_GetDevice
      parameters:
        - format: byte
          in: path
          name: deviceId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.Device'
      security:
        - x-api-key: []
      summary: Get device
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}' -Method GET -Headers $headers
  '/google-emm/devices/{deviceId}/erase-device':
    post:
      description: |-
        Removes the work profile and all policies from a personal/company-owned
        Android 8.0+ device. Company owned devices will be relinquished for
        personal use. Apps and data associated with the personal profile(s) are
        preserved.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/erase-device \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: Devices_EraseDevice
      parameters:
        - format: byte
          in: path
          name: deviceId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.CommandResponse'
      security:
        - x-api-key: []
      summary: Erase the Android Device
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/erase-device \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/erase-device"

            payload = {}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/erase-device' -Method POST -Headers $headers -ContentType 'application/json' -Body '{}'
  '/google-emm/devices/{deviceId}/lock':
    post:
      description: |-
        Locks a Google EMM enrolled device, as if the lock screen timeout had
        expired.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lock \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: Devices_LockDevice
      parameters:
        - format: byte
          in: path
          name: deviceId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.CommandResponse'
      security:
        - x-api-key: []
      summary: Lock device
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lock \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lock"

            payload = {}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lock' -Method POST -Headers $headers -ContentType 'application/json' -Body '{}'
  '/google-emm/devices/{deviceId}/lostmode/start':
    post:
      description: |-
        Starts lost mode for a Google EMM enrolled device.
        Only supported on COPE devices.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lostmode/start \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: {API_KEY}"
        ```
      operationId: Devices_StartLostMode
      parameters:
        - format: byte
          in: path
          name: deviceId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              emailAddress:
                type: string
              lostMessage:
                type: string
              organizationName:
                type: string
              phoneNumber:
                type: string
              streetAddress:
                type: string
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.CommandResponse'
      security:
        - x-api-key: []
      summary: Start lost mode
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lostmode/start \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"emailAddress":"string","lostMessage":"string","organizationName":"string","phoneNumber":"string","streetAddress":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lostmode/start"

            payload = {
                "emailAddress": "string",
                "lostMessage": "string",
                "organizationName": "string",
                "phoneNumber": "string",
                "streetAddress": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lostmode/start' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"emailAddress":"string","lostMessage":"string","organizationName":"string","phoneNumber":"string","streetAddress":"string"}'
  '/google-emm/devices/{deviceId}/lostmode/stop':
    post:
      description: |-
        Stops lost mode for a Google EMM enrolled device.
        Only supported on COPE devices.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lostmode/stop \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: {API_KEY}"
        ```
      operationId: Devices_StopLostMode
      parameters:
        - format: byte
          in: path
          name: deviceId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.CommandResponse'
      security:
        - x-api-key: []
      summary: Stop lost mode
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lostmode/stop \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lostmode/stop"

            payload = {}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/lostmode/stop' -Method POST -Headers $headers -ContentType 'application/json' -Body '{}'
  '/google-emm/devices/{deviceId}/policy_results':
    get:
      description: |-
        Gets an android JSON policy for a Google EMM enrolled device.

        #### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/policy_results \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: Devices_GetDeviceAndroidPolicy
      parameters:
        - format: byte
          in: path
          name: deviceId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.DeviceAndroidPolicy'
      security:
        - x-api-key: []
      summary: Get the policy JSON of a device
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/policy_results \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/policy_results"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/policy_results' -Method GET -Headers $headers
  '/google-emm/devices/{deviceId}/reboot':
    post:
      description: |-
        Reboots a Google EMM enrolled device.
        Only supported on fully managed devices running Android 7.0 or higher.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/reboot \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: Devices_RebootDevice
      parameters:
        - format: byte
          in: path
          name: deviceId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.CommandResponse'
      security:
        - x-api-key: []
      summary: Reboot device
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/reboot \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/reboot"

            payload = {}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/reboot' -Method POST -Headers $headers -ContentType 'application/json' -Body '{}'
  '/google-emm/devices/{deviceId}/resetpassword':
    post:
      description: |-
        Reset the user's password of a Google EMM enrolled device.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/resetpassword \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}" \
          -d '{"new_password" : "string"}'
        ```
      operationId: Devices_ResetPassword
      parameters:
        - format: byte
          in: path
          name: deviceId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              flags:
                items:
                  type: string
                type: array
              newPassword:
                description: Not logging as it contains sensitive information.
                type: string
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.CommandResponse'
      security:
        - x-api-key: []
      summary: Reset Password of a device
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/resetpassword \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"flags":["string"],"newPassword":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/resetpassword"

            payload = {
                "flags": ["string"],
                "newPassword": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/devices/{deviceId}/resetpassword' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"flags":["string"],"newPassword":"string"}'
  /google-emm/enterprises:
    get:
      description: |-
        List all Google EMM enterprises.
        An empty list indicates that the Organization is not configured with a
        Google EMM enterprise yet.

        Note: Currently only one Google Enterprise per Organization is supported.

        #### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/google-emm/enterprises \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: Enterprises_ListEnterprises
      parameters:
        - default: '100'
          description: |-
            The number of records to return at once.
            Limited to 100.
          format: int64
          in: query
          name: limit
          required: false
          type: string
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.ListEnterprisesResponse'
      security:
        - x-api-key: []
      summary: List Google Enterprises
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/google-emm/enterprises?limit=100&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/enterprises"

            querystring = {"limit":"100","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/enterprises?limit=100&skip=0' -Method GET -Headers $headers
    post:
      description: |-
        Creates a Google EMM enterprise.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/google-emm/enterprises \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}" \
          -d '{"signupUrlName": "string", "enrollmentToken": "string"}'
        ```
      operationId: Enterprises_CreateEnterprise
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.CreateEnterpriseRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.Enterprise'
      security:
        - x-api-key: []
      summary: Create a Google Enterprise
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/google-emm/enterprises \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"enrollmentToken":"string","signupUrlName":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/enterprises"

            payload = {
                "enrollmentToken": "string",
                "signupUrlName": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/enterprises' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"enrollmentToken":"string","signupUrlName":"string"}'
  '/google-emm/enterprises/{enterpriseId}':
    delete:
      description: |-
        Removes a Google EMM enterprise.

        Warning: This is a destructive operation and will remove all data
        associated with Google EMM enterprise from JumpCloud including devices and
        applications associated with the given enterprise.

        #### Sample Request

        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/google-emm/devices/{enterpriseId} \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: Enterprises_DeleteEnterprise
      parameters:
        - format: byte
          in: path
          name: enterpriseId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Delete a Google Enterprise
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}' -Method DELETE -Headers $headers
    patch:
      description: |-
        Updates a Google EMM enterprise details.

        #### Sample Request

        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/google-emm/enterprises \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
          -d '{"allowDeviceEnrollment": true, "deviceGroupId": "string"}'
        ```
      operationId: Enterprises_PatchEnterprise
      parameters:
        - format: byte
          in: path
          name: enterpriseId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              allowDeviceEnrollment:
                type: boolean
              deviceGroupId:
                format: byte
                type: string
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.Enterprise'
      security:
        - x-api-key: []
      summary: Update a Google Enterprise
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"allowDeviceEnrollment":true,"deviceGroupId":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}"

            payload = {
                "allowDeviceEnrollment": True,
                "deviceGroupId": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"allowDeviceEnrollment":true,"deviceGroupId":"string"}'
  '/google-emm/enterprises/{enterpriseId}/connection-status':
    get:
      description: |-
        Gives a connection status between JumpCloud and Google.

        #### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/google-emm/devices/{enterpriseId}/connection-status \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: Enterprises_GetConnectionStatus
      parameters:
        - format: byte
          in: path
          name: enterpriseId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.ConnectionStatus'
      security:
        - x-api-key: []
      summary: Test connection with Google
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}/connection-status \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}/connection-status"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}/connection-status' -Method GET -Headers $headers
  '/google-emm/enterprises/{enterpriseId}/enrollment-tokens/{tokenId}':
    delete:
      description: |-
        Removes an Enrollment token for a given enterprise and token id.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/enterprises/{enterprise_id}/enrollment-tokens/{token_id} \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: {API_KEY}"
        ```
      operationId: EnrollmentTokens_DeleteEnrollmentToken
      parameters:
        - format: byte
          in: path
          name: enterpriseId
          required: true
          type: string
        - in: path
          name: tokenId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.DeleteEnrollmentTokenResponse'
      security:
        - x-api-key: []
      summary: Deletes an enrollment token for a given enterprise and token id
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}/enrollment-tokens/{tokenId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}/enrollment-tokens/{tokenId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}/enrollment-tokens/{tokenId}' -Method DELETE -Headers $headers
    get:
      description: |-
        Retrieves an Enrollment token for a given enterprise and token id.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterprise_id}/enrollment-tokens/{token_id} \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: {API_KEY}"
        ```
      operationId: EnrollmentTokens_GetEnrollmentToken
      parameters:
        - format: byte
          in: path
          name: enterpriseId
          required: true
          type: string
        - in: path
          name: tokenId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.EnrollmentToken'
      security:
        - x-api-key: []
      summary: Get an enrollment token by ID
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}/enrollment-tokens/{tokenId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}/enrollment-tokens/{tokenId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseId}/enrollment-tokens/{tokenId}' -Method GET -Headers $headers
  '/google-emm/enterprises/{enterpriseObjectId}/devices':
    get:
      description: |-
        Lists google EMM enrolled devices.

        #### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterprise_object_id}/devices \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: Devices_ListDevices
      parameters:
        - format: byte
          in: path
          name: enterpriseObjectId
          required: true
          type: string
        - default: '100'
          description: The number of records to return at once. Limited to 100.
          format: int64
          in: query
          name: limit
          required: false
          type: string
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.ListDevicesResponse'
      security:
        - x-api-key: []
      summary: List devices
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseObjectId}/devices?limit=100&skip=0&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseObjectId}/devices"

            querystring = {"limit":"100","skip":"0","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseObjectId}/devices?limit=100&skip=0&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  '/google-emm/enterprises/{enterpriseObjectId}/enrollment-tokens':
    get:
      description: |-
        Lists active, unexpired enrollement tokens for a given enterprise.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterprise_object_id}/enrollment-tokens \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: {API_KEY}"
        ```
      operationId: EnrollmentTokens_ListEnrollmentTokens
      parameters:
        - format: byte
          in: path
          name: enterpriseObjectId
          required: true
          type: string
        - default: '100'
          description: The number of records to return at once. Limited to 100.
          format: int64
          in: query
          name: limit
          required: false
          type: string
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
        - description: |-
            Use space separated sort parameters to sort the collection.
            Default sort is ascending. Prefix with - to sort descending.
          in: query
          name: sort
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.ListEnrollmentTokensResponse'
      security:
        - x-api-key: []
      summary: List enrollment tokens
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
        - mdm.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseObjectId}/enrollment-tokens?limit=100&skip=0&filter=SOME_ARRAY_VALUE&sort=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseObjectId}/enrollment-tokens"

            querystring = {"limit":"100","skip":"0","filter":"SOME_ARRAY_VALUE","sort":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseObjectId}/enrollment-tokens?limit=100&skip=0&filter=SOME_ARRAY_VALUE&sort=SOME_STRING_VALUE' -Method GET -Headers $headers
    post:
      description: |-
        Gets an enrollment token to enroll a device into Google EMM.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/google-emm/enterpries/{enterprise_object_id}/enrollment-tokens \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: EnrollmentTokens_CreateEnterprisesEnrollmentToken
      parameters:
        - format: byte
          in: path
          name: enterpriseObjectId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              allowPersonalUsage:
                $ref: '#/definitions/jumpcloud.google_emm.AllowPersonalUsage'
              createdWhere:
                $ref: '#/definitions/jumpcloud.google_emm.CreatedWhere'
              displayName:
                title: Name as set by admin
                type: string
              duration:
                title: 'duration format as mentioned in https://developers.google.com/android/management/reference/rest/v1/enterprises.enrollmentTokens'
                type: string
              enrollmentType:
                $ref: '#/definitions/jumpcloud.google_emm.EnrollmentType'
              oneTimeOnly:
                title: |-
                  If the flag is set to true, only one device can use generated token for
                  enrollment
                type: boolean
              provisioningExtras:
                $ref: '#/definitions/jumpcloud.google_emm.ProvisioningExtras'
              userObjectId:
                format: byte
                type: string
              zeroTouch:
                type: boolean
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.EnrollmentToken'
      security:
        - x-api-key: []
      summary: Create an enrollment token for a given enterprise
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseObjectId}/enrollment-tokens \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"allowPersonalUsage":"PERSONAL_USAGE_ALLOWED","createdWhere":"API","displayName":"string","duration":"string","enrollmentType":"WORK_PROFILE","oneTimeOnly":true,"provisioningExtras":{"allowOfflineProvisioning":true,"enableSystemApps":true,"keepScreenOn":true,"language":"string","skipEducationScreens":true,"timeZone":"string","useMobileNetworkForProvisioning":true,"wifiHiddenNetwork":true,"wifiPassword":"string","wifiSecurityType":"NONE","wifiSsid":"string"},"userObjectId":"string","zeroTouch":true}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseObjectId}/enrollment-tokens"

            payload = {
                "allowPersonalUsage": "PERSONAL_USAGE_ALLOWED",
                "createdWhere": "API",
                "displayName": "string",
                "duration": "string",
                "enrollmentType": "WORK_PROFILE",
                "oneTimeOnly": True,
                "provisioningExtras": {
                    "allowOfflineProvisioning": True,
                    "enableSystemApps": True,
                    "keepScreenOn": True,
                    "language": "string",
                    "skipEducationScreens": True,
                    "timeZone": "string",
                    "useMobileNetworkForProvisioning": True,
                    "wifiHiddenNetwork": True,
                    "wifiPassword": "string",
                    "wifiSecurityType": "NONE",
                    "wifiSsid": "string"
                },
                "userObjectId": "string",
                "zeroTouch": True
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/enterprises/{enterpriseObjectId}/enrollment-tokens' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"allowPersonalUsage":"PERSONAL_USAGE_ALLOWED","createdWhere":"API","displayName":"string","duration":"string","enrollmentType":"WORK_PROFILE","oneTimeOnly":true,"provisioningExtras":{"allowOfflineProvisioning":true,"enableSystemApps":true,"keepScreenOn":true,"language":"string","skipEducationScreens":true,"timeZone":"string","useMobileNetworkForProvisioning":true,"wifiHiddenNetwork":true,"wifiPassword":"string","wifiSecurityType":"NONE","wifiSsid":"string"},"userObjectId":"string","zeroTouch":true}'
  /google-emm/signup-urls:
    post:
      description: |-
        Creates a Google EMM enterprise signup URL.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/google-emm/signup-urls \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: ${API_KEY}"
        ```
      operationId: SignupURLs_Create
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.SignupURLRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.SignupURL'
      security:
        - x-api-key: []
      summary: Get a Signup URL to enroll Google enterprise
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/google-emm/signup-urls \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/signup-urls"

            payload = {}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/signup-urls' -Method POST -Headers $headers -ContentType 'application/json' -Body '{}'
  /google-emm/web-tokens:
    post:
      description: |-
        Creates a web token to access an embeddable managed Google Play web UI for
        a given Google EMM enterprise.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/google-emm/web-tokens \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "x-api-key: {API_KEY}"
        ```
      operationId: WebTokens_CreateWebToken
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.CreateWebTokenRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.google_emm.WebToken'
      security:
        - x-api-key: []
      summary: Get a web token to render Google Play iFrame
      tags:
        - Google EMM
      x-dynamic-gateway: true
      x-scopes:
        - mdm
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/google-emm/web-tokens \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"enterpriseObjectId":"string","iframeFeature":"SOFTWARE_MANAGEMENT","parentFrameUrl":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/google-emm/web-tokens"

            payload = {
                "enterpriseObjectId": "string",
                "iframeFeature": "SOFTWARE_MANAGEMENT",
                "parentFrameUrl": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/google-emm/web-tokens' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"enterpriseObjectId":"string","iframeFeature":"SOFTWARE_MANAGEMENT","parentFrameUrl":"string"}'
  /groups:
    get:
      description: |-
        This endpoint returns all Groups that exist in your organization.

        #### Available filter fields:
          - `name`
          - `disabled`
          - `type`

        #### Sample Request

        ```
          curl -X GET \
          https://console.jumpcloud.com/api/v2/groups \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: groups_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:listCount:x-unfiltered-total-count'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List All Groups
      tags:
        - Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/groups?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/groups"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/groups?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters: []
    x-functionalities-tags:
      - groups
  /gsuite/activate:
    x-functionalities-tags:
      - gsuites
  '/gsuites/{gsuite_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of this G Suite instance.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example G Suite and Users.


        #### Sample Request
        ```
        curl -X GET 'https://console.jumpcloud.com/api/v2/gsuites/{Gsuite_ID}/associations?targets=user_group \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_gSuiteAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsGSuite:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a G Suite instance
      tags:
        - Graph
        - G Suite
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the G Suite instance.
        in: path
        name: gsuite_id
        required: true
        type: string
    post:
      description: |-
        This endpoint returns the _direct_ associations of this G Suite instance.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example G Suite and Users.


        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/gsuites/{Gsuite_ID}/associations \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "user_group",
            "id": "{Group_ID}"
          }'
        ```
      operationId: graph_gSuiteAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-GSuite'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a G Suite instance
      tags:
        - Graph
        - G Suite
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"user"}'
    x-functionalities-tags:
      - gsuites
  '/gsuites/{gsuite_id}/domains':
    get:
      description: |-
        List the domains configured for a specific Google Workspace directory sync integration instance.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: Gapps_Domains_List
      parameters:
        - description: Id for the specific Google Workspace directory sync integration instance..
          format: byte
          in: path
          name: gsuite_id
          required: true
          type: string
        - default: '100'
          description: The number of records to return at once. Limited to 100.
          format: int64
          in: query
          name: limit
          required: false
          type: string
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jumpcloud.gapps.DomainListResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: List all domains configured for the Google Workspace integration instance
      tags:
        - G Suite
      x-dynamic-gateway: true
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains?limit=100&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains"

            querystring = {"limit":"100","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains?limit=100&skip=0' -Method GET -Headers $headers
    post:
      description: |-
        Add a domain to a specific Google Workspace directory sync integration instance. The domain must be a verified domain in Google Workspace.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{"domain": "{domain name}"}'
        ```
      operationId: Gapps_Domains_Insert
      parameters:
        - description: Id for the specific Google Workspace directory sync integration instance.
          format: byte
          in: path
          name: gsuite_id
          required: true
          type: string
        - in: query
          name: domain
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.gapps.DomainResponse'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/jumpcloud.gapps.DomainResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Add a domain to a Google Workspace integration instance
      tags:
        - G Suite
      x-dynamic-gateway: true
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains?domain=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains"

            querystring = {"domain":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains?domain=SOME_STRING_VALUE' -Method POST -Headers $headers
  '/gsuites/{gsuite_id}/domains/{domainId}':
    delete:
      description: |-
        Delete a domain from a specific Google Workspace directory sync integration instance.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains/{domainId} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: Gapps_Domains_Delete
      parameters:
        - description: Id for the specific Google Workspace directory sync integration instance.
          format: byte
          in: path
          name: gsuite_id
          required: true
          type: string
        - description: Id for the domain.
          format: byte
          in: path
          name: domainId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jumpcloud.gapps.DomainResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Delete a domain from a Google Workspace integration instance
      tags:
        - G Suite
      x-dynamic-gateway: true
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains/{domainId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains/{domainId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/domains/{domainId}' -Method DELETE -Headers $headers
  '/gsuites/{gsuite_id}/import/jumpcloudusers':
    get:
      description: 'Lists available G Suite users for import, translated to the Jumpcloud user schema.'
      operationId: gsuites_listImportJumpcloudUsers
      parameters:
        - $ref: '#/parameters/trait:gsuite:allowEmptyFields'
        - $ref: '#/parameters/trait:gsuite:maxResults'
        - $ref: '#/parameters/trait:gsuite:orderBy'
        - $ref: '#/parameters/trait:gsuite:pageToken'
        - $ref: '#/parameters/trait:gsuite:query'
        - $ref: '#/parameters/trait:gsuite:sortOrder'
      responses:
        '200':
          description: OK
          schema:
            properties:
              nextPageToken:
                type: string
              users:
                items:
                  $ref: '#/definitions/User'
                type: array
            type: object
      security:
        - x-api-key: []
      summary: Get a list of users in Jumpcloud format to import from a Google Workspace account.
      tags:
        - G Suite
        - G Suite Import
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/jumpcloudusers?allowEmptyFields=false&maxResults=SOME_INTEGER_VALUE&orderBy=SOME_STRING_VALUE&pageToken=SOME_STRING_VALUE&query=SOME_STRING_VALUE&sortOrder=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/jumpcloudusers"

            querystring = {"allowEmptyFields":"false","maxResults":"SOME_INTEGER_VALUE","orderBy":"SOME_STRING_VALUE","pageToken":"SOME_STRING_VALUE","query":"SOME_STRING_VALUE","sortOrder":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/jumpcloudusers?allowEmptyFields=false&maxResults=SOME_INTEGER_VALUE&orderBy=SOME_STRING_VALUE&pageToken=SOME_STRING_VALUE&query=SOME_STRING_VALUE&sortOrder=SOME_STRING_VALUE' -Method GET -Headers $headers
    parameters:
      - in: path
        name: gsuite_id
        required: true
        type: string
    x-functionalities-tags:
      - users-import-google
  '/gsuites/{gsuite_id}/import/schedules':
    get:
      description: Endpoint to list scheduled jobs for specified Google Workspace integration.
      operationId: Gapps_Scheduled_Import_List
      parameters:
        - description: ObjectID of the Google Workspace integration
          format: byte
          in: path
          name: gsuite_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jumpcloud.gapps.ListScheduledResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: List Scheduled Jobs
      tags:
        - G Suite
      x-dynamic-gateway: true
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules' -Method GET -Headers $headers
    post:
      description: Endpoint to create a scheduled job for specified Google Workspace integration.
      operationId: Gapps_Scheduled_Import_Create
      parameters:
        - description: ObjectID of the Google Workspace integration
          format: byte
          in: path
          name: gsuite_id
          required: true
          type: string
        - description: SendEmail is a flag to opt-in for an email with results of a scheduled import job
          in: query
          name: sendEmail
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.gapps.CreateScheduledResponse'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/jumpcloud.gapps.CreateScheduledResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Create a Scheduled Job
      tags:
        - G Suite
      x-dynamic-gateway: true
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules?sendEmail=SOME_BOOLEAN_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules"

            querystring = {"sendEmail":"SOME_BOOLEAN_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules?sendEmail=SOME_BOOLEAN_VALUE' -Method POST -Headers $headers
  '/gsuites/{gsuite_id}/import/schedules/{scheduledJobId}':
    delete:
      description: Endpoint to delete the specified scheduled job from gapps and kala.
      operationId: Gapps_Scheduled_Import_Delete
      parameters:
        - description: ObjectID of the Google Workspace integration
          format: byte
          in: path
          name: gsuite_id
          required: true
          type: string
        - description: ObjectID of the Scheduled Job
          format: byte
          in: path
          name: scheduledJobId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
        '204':
          description: No Content
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Delete a Scheduled Job
      tags:
        - G Suite
      x-dynamic-gateway: true
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules/{scheduledJobId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules/{scheduledJobId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules/{scheduledJobId}' -Method DELETE -Headers $headers
    patch:
      description: Endpoint to update the specified scheduled job
      operationId: Gapps_Scheduled_Import_Update
      parameters:
        - description: ObjectID of the Google Workspace integration
          format: byte
          in: path
          name: gsuite_id
          required: true
          type: string
        - description: ObjectID of the Scheduled Job
          format: byte
          in: path
          name: scheduledJobId
          required: true
          type: string
        - description: SendEmail is a flag to opt-in for an email with results of a scheduled import job
          in: query
          name: sendEmail
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jumpcloud.gapps.UpdateScheduledResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Update a Scheduled Job
      tags:
        - G Suite
      x-dynamic-gateway: true
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules/{scheduledJobId}?sendEmail=SOME_BOOLEAN_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules/{scheduledJobId}"

            querystring = {"sendEmail":"SOME_BOOLEAN_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("PATCH", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/schedules/{scheduledJobId}?sendEmail=SOME_BOOLEAN_VALUE' -Method PATCH -Headers $headers
  '/gsuites/{gsuite_id}/import/users':
    get:
      description: Lists G Suite users available for import.
      operationId: gsuites_listImportUsers
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:gsuite:maxResults'
        - $ref: '#/parameters/trait:gsuite:orderBy'
        - $ref: '#/parameters/trait:gsuite:pageToken'
        - $ref: '#/parameters/trait:gsuite:query'
        - $ref: '#/parameters/trait:gsuite:sortOrder'
      responses:
        '200':
          description: OK
          schema:
            properties:
              nextPageToken:
                type: string
              users:
                items:
                  properties:
                    familyName:
                      type: string
                    givenName:
                      type: string
                    id:
                      type: string
                    primaryEmail:
                      type: string
                    thumbnailPhotoUrl:
                      type: string
                  type: object
                type: array
            type: object
      security:
        - x-api-key: []
      summary: Get a list of users to import from a G Suite instance
      tags:
        - G Suite
        - G Suite Import
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/users?limit=10&maxResults=SOME_INTEGER_VALUE&orderBy=SOME_STRING_VALUE&pageToken=SOME_STRING_VALUE&query=SOME_STRING_VALUE&sortOrder=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/users"

            querystring = {"limit":"10","maxResults":"SOME_INTEGER_VALUE","orderBy":"SOME_STRING_VALUE","pageToken":"SOME_STRING_VALUE","query":"SOME_STRING_VALUE","sortOrder":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/import/users?limit=10&maxResults=SOME_INTEGER_VALUE&orderBy=SOME_STRING_VALUE&pageToken=SOME_STRING_VALUE&query=SOME_STRING_VALUE&sortOrder=SOME_STRING_VALUE' -Method GET -Headers $headers
    parameters:
      - in: path
        name: gsuite_id
        required: true
        type: string
  '/gsuites/{gsuite_id}/translationrules':
    get:
      description: |-
        This endpoint returns all graph translation rules for a specific G Suite instance. These rules specify how JumpCloud attributes translate to [G Suite Admin SDK](https://developers.google.com/admin-sdk/directory/) attributes.

        ##### Sample Request

        ```
        curl -X GET  https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: translationRules_gSuiteList
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: ''
          examples:
            application/json:
              - field: g_suite_work_addresses
                id: 5f91c8695e980f0001c44612
                source_type: user
          schema:
            items:
              $ref: '#/definitions/GSuiteTranslationRule'
            type: array
      security:
        - x-api-key: []
      summary: List all the G Suite Translation Rules
      tags:
        - G Suite
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: gsuite_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to create a translation rule for a specific G Suite instance. These rules specify how JumpCloud attributes translate to [G Suite Admin SDK](https://developers.google.com/admin-sdk/directory/) attributes.

        ##### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            {Translation Rule Parameters}
          }'
        ```
      operationId: translationRules_gSuitePost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GSuiteTranslationRuleRequest'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/GSuiteTranslationRule'
      security:
        - x-api-key: []
      summary: Create a new G Suite Translation Rule
      tags:
        - G Suite
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"builtIn":"user_home_addresses","direction":"export"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules"

            payload = {
                "builtIn": "user_home_addresses",
                "direction": "export"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"builtIn":"user_home_addresses","direction":"export"}'
    x-functionalities-tags:
      - gsuites
  '/gsuites/{gsuite_id}/translationrules/{id}':
    delete:
      description: |-
        This endpoint allows you to delete a translation rule for a specific G Suite instance. These rules specify how JumpCloud attributes translate to [G Suite Admin SDK](https://developers.google.com/admin-sdk/directory/) attributes.

        #### Sample Request

        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules/{id} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: translationRules_gSuiteDelete
      responses:
        '204':
          description: ''
      security:
        - x-api-key: []
      summary: Deletes a G Suite translation rule
      tags:
        - G Suite
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns a specific translation rule for a specific G Suite instance. These rules specify how JumpCloud attributes translate to [G Suite Admin SDK](https://developers.google.com/admin-sdk/directory/) attributes.

        ###### Sample Request

        ```
          curl -X GET https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules/{id} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: translationRules_gSuiteGet
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/GSuiteTranslationRule'
      security:
        - x-api-key: []
      summary: Gets a specific G Suite translation rule
      tags:
        - G Suite
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/translationrules/{id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: gsuite_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - gsuites
  '/gsuites/{gsuite_id}/usergroups':
    get:
      description: |-
        This endpoint will return all User Groups bound to an G Suite instance, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this G Suite instance to the corresponding User Group; this array represents all grouping and/or associations that would have to be removed to deprovision the User Group from this G Suite instance.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
          curl -X GET https://console.jumpcloud.com/api/v2/gsuites/{GSuite_ID}/usergroups \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_gSuiteTraverseUserGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Groups bound to a G Suite instance
      tags:
        - Graph
        - G Suite
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/usergroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/usergroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/usergroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the G Suite instance.
        in: path
        name: gsuite_id
        required: true
        type: string
    x-functionalities-tags:
      - gsuites
  '/gsuites/{gsuite_id}/users':
    get:
      description: |-
        This endpoint will return all Users bound to a G Suite instance, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this G Suite instance to the corresponding User; this array represents all grouping and/or associations that would have to be removed to deprovision the User from this G Suite instance.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
          curl -X GET https://console.jumpcloud.com/api/v2/gsuites/{Gsuite_ID}/users \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_gSuiteTraverseUser
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Users bound to a G Suite instance
      tags:
        - Graph
        - G Suite
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/users?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/users"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{gsuite_id}/users?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the G Suite instance.
        in: path
        name: gsuite_id
        required: true
        type: string
    x-functionalities-tags:
      - gsuites
  '/gsuites/{id}':
    get:
      description: |-
        This endpoint returns a specific G Suite.

        ##### Sample Request

        ```
         curl -X GET https://console.jumpcloud.com/api/v2/gsuites/{GSUITE_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: gsuites_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gsuite'
      security:
        - x-api-key: []
      summary: Get G Suite
      tags:
        - G Suite
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/gsuites/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{id}' -Method GET -Headers $headers
    parameters:
      - description: Unique identifier of the GSuite.
        in: path
        name: id
        required: true
        type: string
    patch:
      description: |-
        This endpoint allows updating some attributes of a G Suite.

        ##### Sample Request

        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/gsuites/{GSUITE_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "userLockoutAction": "suspend",
            "userPasswordExpirationAction": "maintain"
          }'
        ```
        Sample Request, set a default domain

        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/gsuites/{GSUITE_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "defaultDomain": {
                "id": "{domainObjectID}"
              }
          }'
        ```

        Sample Request, unset the default domain

        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/gsuites/{GSUITE_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "defaultDomain": {}
          }'
        ```
      operationId: gsuites_patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/gsuite'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gsuite'
      summary: Update existing G Suite
      tags:
        - G Suite
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/gsuites/{id} \
              --header 'content-type: application/json' \
              --data '{"defaultDomain":{"id":"string"},"groupsEnabled":true,"importFilter":"string","name":"string","userLockoutAction":"suspend","userPasswordExpirationAction":"suspend"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/gsuites/{id}"

            payload = {
                "defaultDomain": {"id": "string"},
                "groupsEnabled": True,
                "importFilter": "string",
                "name": "string",
                "userLockoutAction": "suspend",
                "userPasswordExpirationAction": "suspend"
            }
            headers = {"content-type": "application/json"}

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/gsuites/{id}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"defaultDomain":{"id":"string"},"groupsEnabled":true,"importFilter":"string","name":"string","userLockoutAction":"suspend","userPasswordExpirationAction":"suspend"}'
    x-functionalities-tags:
      - gsuites
  '/gsuites/{id}/reactivate':
    parameters:
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - gsuites
  /healthmonitoring/rules:
    get:
      description: This endpoint allows you list health monitoring rules.
      operationId: RulesService_ListRules
      parameters:
        - collectionFormat: multi
          description: |
            A filter to apply to the query.

              **Filter structure**: `<field>:<operator>:<value>`.

              **field** = Populate with a valid field from an endpoint response.

              **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.

              **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.

              **Example** `GET /api/v2/groups?filter=name:eq:Test+Group`
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
        - collectionFormat: multi
          description: The fields on the items listed to return.
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - collectionFormat: multi
          description: |-
            An optional comma separated field names used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          in: query
          items:
            type: string
          name: sort
          required: false
          type: array
        - default: '100'
          description: |-
            The number of rules to return at once.
            If the number of rules returned is less than `limit` there are no more rules to fetch.
            If the number of rules returned is equal to limit there may be more rules to fetch. Increment `skip` by `limit` to get the next set of rules.
          format: int64
          in: query
          name: limit
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.healthmonitoring.ListRulesResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for listing the rules of health monitoring.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.rules
        - healthmonitoring.rules.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/rules"

            querystring = {"filter":"SOME_ARRAY_VALUE","fields":"SOME_ARRAY_VALUE","skip":"0","sort":"SOME_ARRAY_VALUE","limit":"100"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' -Method GET -Headers $headers
    post:
      description: This endpoint allows you to create a health monitoring rule.
      operationId: RulesService_CreateRule
      parameters:
        - description: CreateRuleRequest is the request message used to create a single rule.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.healthmonitoring.CreateRuleRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.healthmonitoring.CreateRuleResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for creating the rules.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.rules
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/healthmonitoring/rules \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"rule":{"category":"RULE_CATEGORY_UNSPECIFIED","conditions":[{"eventType":"string","filters":{},"objectId":"string"}],"conditionsRelation":"LOGICAL_OPERATOR_UNSPECIFIED","description":"string","detectPreExistingAnamolies":true,"eventFilters":[{"eventTypes":["string"],"referenceFields":["string"],"resolutionCondition":"string","violationCondition":"string"}],"eventType":"string","name":"string","notificationChannelObjectIds":["string"],"notifyOnAcknowledgement":true,"notifyOnResolution":true,"notifyOnViolation":true,"osFamily":"RULE_OS_FAMILY_UNSPECIFIED","ruleType":"RULE_TYPE_UNSPECIFIED","severity":"RULE_SEVERITY_UNSPECIFIED","status":"RULE_STATUS_UNSPECIFIED","templateObjectId":"string"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/rules"

            payload = {"rule": {
                    "category": "RULE_CATEGORY_UNSPECIFIED",
                    "conditions": [
                        {
                            "eventType": "string",
                            "filters": {},
                            "objectId": "string"
                        }
                    ],
                    "conditionsRelation": "LOGICAL_OPERATOR_UNSPECIFIED",
                    "description": "string",
                    "detectPreExistingAnamolies": True,
                    "eventFilters": [
                        {
                            "eventTypes": ["string"],
                            "referenceFields": ["string"],
                            "resolutionCondition": "string",
                            "violationCondition": "string"
                        }
                    ],
                    "eventType": "string",
                    "name": "string",
                    "notificationChannelObjectIds": ["string"],
                    "notifyOnAcknowledgement": True,
                    "notifyOnResolution": True,
                    "notifyOnViolation": True,
                    "osFamily": "RULE_OS_FAMILY_UNSPECIFIED",
                    "ruleType": "RULE_TYPE_UNSPECIFIED",
                    "severity": "RULE_SEVERITY_UNSPECIFIED",
                    "status": "RULE_STATUS_UNSPECIFIED",
                    "templateObjectId": "string"
                }}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"rule":{"category":"RULE_CATEGORY_UNSPECIFIED","conditions":[{"eventType":"string","filters":{},"objectId":"string"}],"conditionsRelation":"LOGICAL_OPERATOR_UNSPECIFIED","description":"string","detectPreExistingAnamolies":true,"eventFilters":[{"eventTypes":["string"],"referenceFields":["string"],"resolutionCondition":"string","violationCondition":"string"}],"eventType":"string","name":"string","notificationChannelObjectIds":["string"],"notifyOnAcknowledgement":true,"notifyOnResolution":true,"notifyOnViolation":true,"osFamily":"RULE_OS_FAMILY_UNSPECIFIED","ruleType":"RULE_TYPE_UNSPECIFIED","severity":"RULE_SEVERITY_UNSPECIFIED","status":"RULE_STATUS_UNSPECIFIED","templateObjectId":"string"}}'
  /healthmonitoring/rules-stats:
    get:
      description: This endpoint is used for getting rules stats.
      operationId: RulesService_GetRulesStats
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.healthmonitoring.GetRulesStatsResponse'
      security:
        - x-api-key: []
      summary: This endpoint is getting rules stats.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.rules
        - healthmonitoring.rules.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/healthmonitoring/rules-stats \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/rules-stats"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules-stats' -Method GET -Headers $headers
  '/healthmonitoring/rules/{id}':
    delete:
      description: This endpoint allows you to delete a health monitoring rule.
      operationId: RulesService_DeleteRule
      parameters:
        - description: Unique identifier of the rule to be deleted.
          format: byte
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.healthmonitoring.DeleteRuleResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used to delete health monitoring rules.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.rules
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id}' -Method DELETE -Headers $headers
    get:
      description: This endpoint allows you get a health monitoring rule.
      operationId: RulesService_GetRule
      parameters:
        - description: Unique identifier of the rule to be fetched
          format: byte
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.healthmonitoring.GetRuleResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for getting a health monitoring rule.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.rules
        - healthmonitoring.rules.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id}' -Method GET -Headers $headers
    patch:
      description: This endpoint allows you to update a health monitoring rule.
      operationId: RulesService_UpdateRule
      parameters:
        - description: Unique identifier of the rule to be modified.
          format: byte
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            description: UpdateRuleRequest is the request message used to modify a single rule.
            properties:
              rule:
                $ref: '#/definitions/jumpcloud.healthmonitoring.Rule'
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.healthmonitoring.UpdateRuleResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for updating the rules.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.rules
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"rule":{"category":"RULE_CATEGORY_UNSPECIFIED","conditions":[{"eventType":"string","filters":{},"objectId":"string"}],"conditionsRelation":"LOGICAL_OPERATOR_UNSPECIFIED","description":"string","detectPreExistingAnamolies":true,"eventFilters":[{"eventTypes":["string"],"referenceFields":["string"],"resolutionCondition":"string","violationCondition":"string"}],"eventType":"string","name":"string","notificationChannelObjectIds":["string"],"notifyOnAcknowledgement":true,"notifyOnResolution":true,"notifyOnViolation":true,"osFamily":"RULE_OS_FAMILY_UNSPECIFIED","ruleType":"RULE_TYPE_UNSPECIFIED","severity":"RULE_SEVERITY_UNSPECIFIED","status":"RULE_STATUS_UNSPECIFIED","templateObjectId":"string"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id}"

            payload = {"rule": {
                    "category": "RULE_CATEGORY_UNSPECIFIED",
                    "conditions": [
                        {
                            "eventType": "string",
                            "filters": {},
                            "objectId": "string"
                        }
                    ],
                    "conditionsRelation": "LOGICAL_OPERATOR_UNSPECIFIED",
                    "description": "string",
                    "detectPreExistingAnamolies": True,
                    "eventFilters": [
                        {
                            "eventTypes": ["string"],
                            "referenceFields": ["string"],
                            "resolutionCondition": "string",
                            "violationCondition": "string"
                        }
                    ],
                    "eventType": "string",
                    "name": "string",
                    "notificationChannelObjectIds": ["string"],
                    "notifyOnAcknowledgement": True,
                    "notifyOnResolution": True,
                    "notifyOnViolation": True,
                    "osFamily": "RULE_OS_FAMILY_UNSPECIFIED",
                    "ruleType": "RULE_TYPE_UNSPECIFIED",
                    "severity": "RULE_SEVERITY_UNSPECIFIED",
                    "status": "RULE_STATUS_UNSPECIFIED",
                    "templateObjectId": "string"
                }}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"rule":{"category":"RULE_CATEGORY_UNSPECIFIED","conditions":[{"eventType":"string","filters":{},"objectId":"string"}],"conditionsRelation":"LOGICAL_OPERATOR_UNSPECIFIED","description":"string","detectPreExistingAnamolies":true,"eventFilters":[{"eventTypes":["string"],"referenceFields":["string"],"resolutionCondition":"string","violationCondition":"string"}],"eventType":"string","name":"string","notificationChannelObjectIds":["string"],"notifyOnAcknowledgement":true,"notifyOnResolution":true,"notifyOnViolation":true,"osFamily":"RULE_OS_FAMILY_UNSPECIFIED","ruleType":"RULE_TYPE_UNSPECIFIED","severity":"RULE_SEVERITY_UNSPECIFIED","status":"RULE_STATUS_UNSPECIFIED","templateObjectId":"string"}}'
  '/healthmonitoring/rules/{id}/status':
    patch:
      description: This endpoint allows you to update the status of a health monitoring rule.
      operationId: RulesService_UpdateRuleStatus
      parameters:
        - format: byte
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            description: UpdateRuleStatusRequest is the request message used to update status of a single rule.
            properties:
              status:
                $ref: '#/definitions/jumpcloud.healthmonitoring.RuleStatus'
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.healthmonitoring.UpdateRuleStatusResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for updating the status of a rule.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.rules
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id}/status \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"status":"RULE_STATUS_UNSPECIFIED"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id}/status"

            payload = {"status": "RULE_STATUS_UNSPECIFIED"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{id}/status' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"status":"RULE_STATUS_UNSPECIFIED"}'
  '/healthmonitoring/rules/{rule_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of a Health monitoring Rule.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Rules and Systems.

        #### Sample Request
        ```
        curl -X GET 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/associations?targets=system_group \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_ruleAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsRule:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a Rule
      tags:
        - Graph
        - Rules
      x-scopes:
        - healthmonitoring.rules
        - healthmonitoring.rules.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Rule.
        in: path
        name: rule_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the _direct_ associations of a Health monitoring rule.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Rules and Systems.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/associations/ \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "system_group",
            "id": "{Group_ID}"
          }'
        ```
      operationId: graph_ruleAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-Rule'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
      security:
        - x-api-key: []
      summary: Manage the associations of a Rules
      tags:
        - Graph
        - Rules
      x-scopes:
        - healthmonitoring.rules
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"system"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "system"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"system"}'
    x-functionalities-tags:
      - rule-associations
  '/healthmonitoring/rules/{rule_id}/systemgroups':
    get:
      description: |-
        This endpoint will return all Systems Groups bound to a Health Monitoring Rule, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Policy to the corresponding System Group; this array represents all grouping and/or associations that would have to be removed to deprovision the System Group from this Policy.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET  https://console.jumpcloud.com/api/v2/rules/{rule_id}/systemgroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_ruleTraverseSystemGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the System Groups bound to a Rule
      tags:
        - Graph
        - Rules
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/systemgroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/systemgroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/rules/{rule_id}/systemgroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Rule.
        in: path
        name: rule_id
        required: true
        type: string
    x-functionalities-tags:
      - rule-associations
  /healthmonitoring/ruletemplates:
    get:
      description: This endpoint allows you list health monitoring rule templates.
      operationId: RuleTemplatesService_ListRuleTemplates
      parameters:
        - collectionFormat: multi
          description: "A filter to apply to the query.\n\n\t**Filter structure**: `<field>:<operator>:<value>`.\n\n\t**field** = Populate with a valid field from an endpoint response.\n\n\t**operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.\n\n\t**value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.\n\n\t**Example** `GET /api/v2/groups?filter=name:eq:Test+Group`\n"
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
        - collectionFormat: multi
          description: The fields on the items listed to return.
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - collectionFormat: multi
          description: |-
            An optional comma separated field names used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          in: query
          items:
            type: string
          name: sort
          required: false
          type: array
        - default: '100'
          description: |-
            The number of rule templates to return at once.
            If the number of rule templates returned is less than `limit` there are no more rule templates to fetch.
            If the number of rule templates returned is equal to limit there may be more rule templates to fetch. Increment `skip` by `limit` to get the next set of rule templates.
          format: int64
          in: query
          name: limit
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.healthmonitoring.ListRuleTemplatesResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for listing the rules of health monitoring.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.rules
        - healthmonitoring.rules.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/healthmonitoring/ruletemplates?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/ruletemplates"

            querystring = {"filter":"SOME_ARRAY_VALUE","fields":"SOME_ARRAY_VALUE","skip":"0","sort":"SOME_ARRAY_VALUE","limit":"100"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/ruletemplates?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' -Method GET -Headers $headers
  '/healthmonitoring/ruletemplates/{id}':
    get:
      description: This endpoint allows you get a health monitoring rule template.
      operationId: RuleTemplatesService_GetRuleTemplate
      parameters:
        - format: byte
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.healthmonitoring.GetRuleTemplateResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for getting a health monitoring rule template.
      tags:
        - Monitoring and Alerting
      x-dynamic-gateway: true
      x-scopes:
        - healthmonitoring.rules
        - healthmonitoring.rules.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/healthmonitoring/ruletemplates/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/healthmonitoring/ruletemplates/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/healthmonitoring/ruletemplates/{id}' -Method GET -Headers $headers
  '/identity-provider/policies/{idp_routing_policy_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of a Routing Policy.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example a Routing Policy and Users.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/identity-provider/policies/{IDP_ROUTING_POLICY_ID}/associations?targets=user_group \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_idpRoutingPolicyAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsIDPRoutingPolicy:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a Routing Policy
      tags:
        - Graph
        - Identity Providers
      x-scopes:
        - authn
        - authn.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Routing Policy.
        in: path
        name: idp_routing_policy_id
        required: true
        type: string
    post:
      description: |-
        This endpoint manages the _direct_ associations of a Routing Policy.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example a Routing Policy and Users.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/identity-provider/policies/{IDP_ROUTING_POLICY_ID}/associations?targets=user \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          -d '{"type":"user", "id":"{USER_ID}", "op":"add"}'
        ```
      operationId: graph_idpRoutingPolicyAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-IDPRoutingPolicy'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a routing policy
      tags:
        - Graph
        - Identity Providers
      x-scopes:
        - authn
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"user"}'
    x-functionalities-tags:
      - idproutingpolicy-users
  '/identity-provider/policies/{idp_routing_policy_id}/associations/usergroups':
    get:
      description: |-
        This endpoint will return all Users Groups bound to a routing policy, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this routing policy instance to the corresponding User Group; this array represents all grouping and/or associations that would have to be removed to deprovision the User Group from this routing policy.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/identity-provider/policies/{id}/associations/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_idpRoutingPolicyTraverseUserGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Groups bound to a Routing Policy
      tags:
        - Graph
        - Identity Providers
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations/usergroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations/usergroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations/usergroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Routing Policy.
        in: path
        name: idp_routing_policy_id
        required: true
        type: string
    x-functionalities-tags:
      - idproutingpolicy-users
  '/identity-provider/policies/{idp_routing_policy_id}/associations/users':
    get:
      description: |-
        This endpoint will return all Users bound to a routing policy, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this routing policy to the corresponding User; this array represents all grouping and/or associations that would have to be removed to deprovision the User from this routing policy.

        See `/members` and `/associations` endpoints to manage those collections.


        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/identity-provider/policies/{id}/associations/users \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: graph_idpRoutingPolicyTraverseUser
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Users bound to a Routing Policy
      tags:
        - Graph
        - Identity Providers
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations/users?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations/users"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/identity-provider/policies/{idp_routing_policy_id}/associations/users?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Routing Policy.
        in: path
        name: idp_routing_policy_id
        required: true
        type: string
    x-functionalities-tags:
      - idproutingpolicy-groups
  '/integrations/autotask/{UUID}':
    delete:
      description: Removes a Autotask integration.
      operationId: autotask_deleteConfiguration
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete Autotask Integration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}' -Method DELETE -Headers $headers
    get:
      description: Retrieves configuration for given Autotask integration id. You must be associated to the provider the integration is tied to in order to use this api.
      operationId: autotask_getConfiguration
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/AutotaskIntegration'
          x-examples:
            example-1:
              companyId: c18d01e8-b531-45cb-bf33-cd3962ae0b94
              id: dbcc5f61-9e9d-47fd-9bf1-7f7dc6c13d02
              url: 'https://www.example.com'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Autotask Integration Configuration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    patch:
      description: Update the Autotask integration configuration. A 422 Unprocessable Entity response means the server failed to validate with Autotask.
      operationId: autotask_updateConfiguration
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AutotaskIntegrationPatchReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AutotaskIntegration'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '422':
          description: Unprocessable Entity. The server failed to validate credentials with Autotask.
          schema:
            properties: {}
            type: object
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update Autotask Integration configuration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"secret":"string","username":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}"

            payload = {
                "secret": "string",
                "username": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"secret":"string","username":"string"}'
    x-functionalities-tags:
      - mtp-create-autotask-integration
  '/integrations/autotask/{UUID}/companies':
    get:
      description: Retrieves a list of Autotask companies for the given Autotask id. You must be associated to the same provider as the Autotask integration to use this endpoint.
      operationId: autotask_retrieveCompanies
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AutotaskCompanyResp'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Autotask Companies
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/companies?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/companies"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/companies?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-autotask-integration
  '/integrations/autotask/{UUID}/companytypes':
    get:
      description: Retrieves a list of user defined company types from Autotask for the given Autotask id.
      operationId: autotask_retrieveCompanyTypes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AutotaskCompanyTypeResp'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Autotask Company Types
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/companytypes \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/companytypes"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/companytypes' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-autotask-integration
  '/integrations/autotask/{UUID}/contracts':
    get:
      description: Retrieves a list of Autotask contracts for the given Autotask integration id. You must be associated to the same provider as the Autotask integration to use this endpoint.
      operationId: autotask_retrieveContracts
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: ''
          schema:
            properties:
              results:
                items:
                  $ref: '#/definitions/AutotaskContract'
                type: array
              totalCount:
                type: integer
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Autotask Contracts
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/contracts?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/contracts"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/contracts?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-autotask-integration
  '/integrations/autotask/{UUID}/contracts/fields':
    get:
      description: Retrieves a list of Autotask contract fields for the given Autotask integration id. You must be associated to the same provider as the Autotask integration to use this endpoint.
      operationId: autotask_retrieveContractsFields
      responses:
        '200':
          description: ''
          schema:
            properties:
              results:
                items:
                  $ref: '#/definitions/AutotaskContractField'
                type: array
              totalCount:
                type: integer
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Autotask Contract Fields
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/contracts/fields \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/contracts/fields"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/contracts/fields' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-autotask-integration
  '/integrations/autotask/{UUID}/contracts/services':
    get:
      description: Retrieves a list of Autotask contract services for the given Autotask integration id. You must be associated to the same provider as the Autotask integration to use this endpoint.
      operationId: autotask_retrieveServices
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: ''
          schema:
            properties:
              results:
                items:
                  $ref: '#/definitions/AutotaskService'
                type: array
              totalCount:
                type: integer
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Autotask Contract Services
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/contracts/services?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/contracts/services"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/contracts/services?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-autotask-integration
  '/integrations/autotask/{UUID}/mappings':
    get:
      description: Retrieves the list of mappings for this Autotask integration. You must be associated to the same provider as the Autotask integration to use this api.
      operationId: autotask_retrieveMappings
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            properties:
              records:
                items:
                  $ref: '#/definitions/AutotaskMappingResponse'
                type: array
              totalCount:
                type: number
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Autotask mappings
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/mappings?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/mappings"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/mappings?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    patch:
      description: 'Create, edit, and/or delete mappings between Jumpcloud organizations and Autotask companies/contracts/services. You must be associated to the same provider as the Autotask integration to use this api.'
      operationId: autotask_patchMappings
      parameters:
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/AutotaskMappingRequest'
      responses:
        '204':
          description: No Content
          schema:
            $ref: '#/definitions/AutotaskMappingResponse'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: 'Create, edit, and/or delete Autotask Mappings'
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/mappings \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"data":[{"company":{"id":"string","name":"string"},"contract":{"id":"string","name":"string"},"delete":true,"organization":{"id":"string","name":"string"},"service":{"id":"string","name":"string","nonBillableUsers":0}}]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/mappings"

            payload = {"data": [
                    {
                        "company": {
                            "id": "string",
                            "name": "string"
                        },
                        "contract": {
                            "id": "string",
                            "name": "string"
                        },
                        "delete": True,
                        "organization": {
                            "id": "string",
                            "name": "string"
                        },
                        "service": {
                            "id": "string",
                            "name": "string",
                            "nonBillableUsers": 0
                        }
                    }
                ]}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/mappings' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"data":[{"company":{"id":"string","name":"string"},"contract":{"id":"string","name":"string"},"delete":true,"organization":{"id":"string","name":"string"},"service":{"id":"string","name":"string","nonBillableUsers":0}}]}'
    x-functionalities-tags:
      - mtp-create-autotask-billing-mapping
  '/integrations/autotask/{UUID}/settings':
    get:
      description: Retrieve the Autotask integration settings. You must be associated to the same provider as the Autotask integration to use this endpoint.
      operationId: autotask_retrieveSettings
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AutotaskSettings'
          x-examples:
            example-1:
              automaticTicketing: true
              companyTypeIds:
                - 0
                - 1
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Autotask Integration settings
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/settings \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/settings"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/settings' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    patch:
      description: 'Create, edit, and/or delete Autotask settings. You must be associated to the same provider as the Autotask integration to use this endpoint.'
      operationId: autotask_patchSettings
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AutotaskSettingsPatchReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AutotaskSettings'
          x-examples:
            example-1:
              automaticTicketing: true
              companyTypeIds:
                - 0
                - 1
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: 'Create, edit, and/or delete Autotask Integration settings'
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/settings \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"automaticTicketing":true,"companyTypeIds":[0]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/settings"

            payload = {
                "automaticTicketing": True,
                "companyTypeIds": [0]
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/autotask/{UUID}/settings' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"automaticTicketing":true,"companyTypeIds":[0]}'
    x-functionalities-tags:
      - mtp-create-autotask-integration
  '/integrations/connectwise/{UUID}':
    delete:
      description: Removes a ConnectWise integration.
      operationId: connectwise_deleteConfiguration
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete ConnectWise Integration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}' -Method DELETE -Headers $headers
    get:
      description: Retrieves configuration for given ConnectWise integration id. You must be associated to the provider the integration is tied to in order to use this api.
      operationId: connectwise_getConfiguration
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/ConnectwiseIntegration'
          x-examples:
            example-1:
              companyId: c18d01e8-b531-45cb-bf33-cd3962ae0b94
              id: dbcc5f61-9e9d-47fd-9bf1-7f7dc6c13d02
              url: 'https://www.example.com'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve ConnectWise Integration Configuration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    patch:
      description: Update the ConnectWise integration configuration. A 422 Unprocessable Entity response means the server failed to validate with ConnectWise.
      operationId: connectwise_updateConfiguration
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ConnectwiseIntegrationPatchReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectwiseIntegration'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '422':
          description: Unprocessable Entity. The server failed to validate credentials with ConnectWise.
          schema:
            properties: {}
            type: object
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update ConnectWise Integration configuration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"companyId":"string","privateKey":"string","publicKey":"string","url":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}"

            payload = {
                "companyId": "string",
                "privateKey": "string",
                "publicKey": "string",
                "url": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"companyId":"string","privateKey":"string","publicKey":"string","url":"string"}'
    x-functionalities-tags:
      - mtp-create-connectwise-integration
  '/integrations/connectwise/{UUID}/agreements':
    get:
      description: Retrieves a list of ConnectWise agreements for the given ConnectWise id. You must be associated to the same provider as the ConnectWise integration to use this endpoint.
      operationId: connectwise_retrieveAgreements
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: ''
          schema:
            properties:
              results:
                items:
                  $ref: '#/definitions/ConnectwiseAgreement'
                type: array
              totalCount:
                type: integer
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve ConnectWise Agreements
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/agreements?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/agreements"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/agreements?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-connectwise-integration
  '/integrations/connectwise/{UUID}/agreements/{agreement_ID}/additions':
    get:
      description: Retrieves a list of ConnectWise additions for the given ConnectWise id and Agreement id. You must be associated to the same provider as the ConnectWise integration to use this endpoint.
      operationId: connectwise_retrieveAdditions
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: ''
          schema:
            properties:
              results:
                items:
                  $ref: '#/definitions/ConnectwiseAddition'
                type: array
              totalCount:
                type: integer
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve ConnectWise Additions
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/agreements/{agreement_ID}/additions?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/agreements/{agreement_ID}/additions"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/agreements/{agreement_ID}/additions?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
      - in: path
        name: agreement_ID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-connectwise-integration
  '/integrations/connectwise/{UUID}/companies':
    get:
      description: Retrieves a list of ConnectWise companies for the given ConnectWise id. You must be associated to the same provider as the ConnectWise integration to use this endpoint.
      operationId: connectwise_retrieveCompanies
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectwiseCompanyResp'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve ConnectWise Companies
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/companies?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/companies"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/companies?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-connectwise-integration
  '/integrations/connectwise/{UUID}/companytypes':
    get:
      description: Retrieves a list of user defined company types from ConnectWise for the given ConnectWise id.
      operationId: connectwise_retrieveCompanyTypes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectwiseCompanyTypeResp'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve ConnectWise Company Types
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/companytypes \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/companytypes"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/companytypes' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-connectwise-integration
  '/integrations/connectwise/{UUID}/mappings':
    get:
      description: Retrieves the list of mappings for this ConnectWise integration. You must be associated to the same provider as the ConnectWise integration to use this api.
      operationId: connectwise_retrieveMappings
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            properties:
              records:
                items:
                  $ref: '#/definitions/ConnectWiseMappingResponse'
                type: array
              totalCount:
                type: number
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve ConnectWise mappings
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/mappings?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/mappings"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/mappings?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    patch:
      description: 'Create, edit, and/or delete mappings between Jumpcloud organizations and ConnectWise companies/agreements/additions. You must be associated to the same provider as the ConnectWise integration to use this api.'
      operationId: connectwise_patchMappings
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ConnectWiseMappingRequest'
      responses:
        '204':
          description: No Content
          schema:
            $ref: '#/definitions/ConnectWiseMappingRequest'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: 'Create, edit, and/or delete ConnectWise Mappings'
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/mappings \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"data":[{"addition":{"id":"string","name":"string"},"agreement":{"id":"string","name":"string"},"company":{"id":"string","name":"string"},"delete":true,"organization":{"id":"string","name":"string"}}]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/mappings"

            payload = {"data": [
                    {
                        "addition": {
                            "id": "string",
                            "name": "string"
                        },
                        "agreement": {
                            "id": "string",
                            "name": "string"
                        },
                        "company": {
                            "id": "string",
                            "name": "string"
                        },
                        "delete": True,
                        "organization": {
                            "id": "string",
                            "name": "string"
                        }
                    }
                ]}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/mappings' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"data":[{"addition":{"id":"string","name":"string"},"agreement":{"id":"string","name":"string"},"company":{"id":"string","name":"string"},"delete":true,"organization":{"id":"string","name":"string"}}]}'
    x-functionalities-tags:
      - mtp-create-connectwise-integration
  '/integrations/connectwise/{UUID}/settings':
    get:
      description: Retrieve the ConnectWise integration settings. You must be associated to the same provider as the ConnectWise integration to use this endpoint.
      operationId: connectwise_retrieveSettings
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectWiseSettings'
          x-examples:
            example-1:
              automaticTicketing: true
              companyTypeIds:
                - 0
                - 1
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve ConnectWise Integration settings
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/settings \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/settings"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/settings' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    patch:
      description: 'Create, edit, and/or delete ConnectWiseIntegration settings. You must be associated to the same provider as the ConnectWise integration to use this endpoint.'
      operationId: connectwise_patchSettings
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ConnectWiseSettingsPatchReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectWiseSettings'
          x-examples:
            example-1:
              automaticTicketing: true
              companyTypeIds:
                - 0
                - 1
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: 'Create, edit, and/or delete ConnectWise Integration settings'
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/settings \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"automaticTicketing":true,"companyTypeIds":[0]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/settings"

            payload = {
                "automaticTicketing": True,
                "companyTypeIds": [0]
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/connectwise/{UUID}/settings' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"automaticTicketing":true,"companyTypeIds":[0]}'
    x-functionalities-tags:
      - mtp-create-connectwise-integration
  '/integrations/syncro/{UUID}':
    delete:
      description: Removes a Syncro integration.
      operationId: syncro_deleteConfiguration
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete Syncro Integration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}' -Method DELETE -Headers $headers
    get:
      description: Retrieves configuration for given Syncro integration id. You must be associated to the provider the integration is tied to in order to use this api.
      operationId: syncro_getConfiguration
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/SyncroIntegration'
          x-examples:
            example-1:
              apiToken: c18d01e8-b531-45cb-bf33-cd3962ae0b94
              subdomain: mysyncrodomain
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Syncro Integration Configuration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    patch:
      description: Update the Syncro integration configuration. A 422 Unprocessable Entity response means the server failed to validate with Syncro.
      operationId: syncro_updateConfiguration
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SyncroIntegrationPatchReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyncroIntegration'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '422':
          description: Unprocessable Entity. The server failed to validate credentials with Syncro.
          schema:
            properties: {}
            type: object
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update Syncro Integration configuration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"apiToken":"string","subdomain":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}"

            payload = {
                "apiToken": "string",
                "subdomain": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"apiToken":"string","subdomain":"string"}'
    x-functionalities-tags:
      - mtp-create-syncro-ticketing
  '/integrations/syncro/{UUID}/billing_mapping_configuration_options':
    get:
      description: Retrieves a list of dependencies for Syncro billing mappings.
      operationId: syncro_retrieveBillingMappingConfigurationOptions
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyncroBillingMappingConfigurationOptionsResp'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Syncro billing mappings dependencies
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/billing_mapping_configuration_options?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/billing_mapping_configuration_options"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/billing_mapping_configuration_options?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-syncro-integration
  '/integrations/syncro/{UUID}/companies':
    get:
      description: Retrieves a list of Syncro companies for the given Syncro id. You must be associated to the same provider as the Syncro integration to use this endpoint.
      operationId: syncro_retrieveCompanies
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyncroCompanyResp'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Syncro Companies
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/companies?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/companies"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/companies?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-syncro-integration
  '/integrations/syncro/{UUID}/mappings':
    get:
      description: Retrieves the list of mappings for this Syncro integration. You must be associated to the same provider as the Syncro integration to use this api.
      operationId: syncro_retrieveMappings
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            properties:
              records:
                items:
                  $ref: '#/definitions/SyncroMappingResponse'
                type: array
              totalCount:
                type: number
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Syncro mappings
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/mappings?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/mappings"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/mappings?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    patch:
      description: 'Create, edit, and/or delete mappings between Jumpcloud organizations and Syncro companies. You must be associated to the same provider as the Syncro integration to use this api.'
      operationId: syncro_patchMappings
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SyncroMappingRequest'
      responses:
        '204':
          description: No Content
          schema:
            $ref: '#/definitions/SyncroMappingRequest'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: 'Create, edit, and/or delete Syncro Mappings'
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/mappings \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"data":[{"billingConfigurations":{"fields":{"line_item_id":{"kind":"string","numberValue":0},"line_item_name":{"kind":"string","stringValue":"string"},"schedule_id":{"kind":"string","numberValue":0},"schedule_name":{"kind":"string","stringValue":"string"}}},"company":{"id":"string","name":"string"},"delete":true,"organization":{"id":"string","name":"string"}}]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/mappings"

            payload = {"data": [
                    {
                        "billingConfigurations": {"fields": {
                                "line_item_id": {
                                    "kind": "string",
                                    "numberValue": 0
                                },
                                "line_item_name": {
                                    "kind": "string",
                                    "stringValue": "string"
                                },
                                "schedule_id": {
                                    "kind": "string",
                                    "numberValue": 0
                                },
                                "schedule_name": {
                                    "kind": "string",
                                    "stringValue": "string"
                                }
                            }},
                        "company": {
                            "id": "string",
                            "name": "string"
                        },
                        "delete": True,
                        "organization": {
                            "id": "string",
                            "name": "string"
                        }
                    }
                ]}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/mappings' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"data":[{"billingConfigurations":{"fields":{"line_item_id":{"kind":"string","numberValue":0},"line_item_name":{"kind":"string","stringValue":"string"},"schedule_id":{"kind":"string","numberValue":0},"schedule_name":{"kind":"string","stringValue":"string"}}},"company":{"id":"string","name":"string"},"delete":true,"organization":{"id":"string","name":"string"}}]}'
    x-functionalities-tags:
      - mtp-create-syncro-integration
  '/integrations/syncro/{UUID}/settings':
    get:
      description: Retrieve the Syncro integration settings. You must be associated to the same provider as the Syncro integration to use this endpoint.
      operationId: syncro_retrieveSettings
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyncroSettings'
          x-examples:
            example-1:
              automaticTicketing: true
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Syncro Integration settings
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/settings \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/settings"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/settings' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
    patch:
      description: 'Create, edit, and/or delete SyncroIntegration settings. You must be associated to the same provider as the Syncro integration to use this endpoint.'
      operationId: syncro_patchSettings
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SyncroSettingsPatchReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyncroSettings'
          x-examples:
            example-1:
              automaticTicketing: true
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: 'Create, edit, and/or delete Syncro Integration settings'
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/settings \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"automaticTicketing":true}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/settings"

            payload = {"automaticTicketing": True}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/syncro/{UUID}/settings' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"automaticTicketing":true}'
    x-functionalities-tags:
      - mtp-create-syncro-ticketing
  '/integrations/{integration_type}/{UUID}/errors':
    get:
      description: Retrieves recent sync errors for given integration type and integration id. You must be associated to the provider the integration is tied to in order to use this api.
      operationId: mtpIntegration_retrieveSyncErrors
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IntegrationSyncErrorResp'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Recent Integration Sync Errors
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/integrations/{integration_type}/{UUID}/errors \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/integrations/{integration_type}/{UUID}/errors"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/integrations/{integration_type}/{UUID}/errors' -Method GET -Headers $headers
    parameters:
      - in: path
        name: UUID
        required: true
        type: string
      - in: path
        name: integration_type
        required: true
        type: string
    x-functionalities-tags:
      - mtp-account-overview
  /iplists:
    get:
      description: |-
        Retrieve all IP lists.

        #### Sample Request
        ```
        curl https://console.jumpcloud.com/api/v2/iplists \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: iplists_list
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:listCount:x-total-count'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/IPList'
            type: array
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List IP Lists
      tags:
        - IP Lists
      x-scopes:
        - authn
        - authn.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/iplists?limit=10&skip=0&filter=&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/iplists"

            querystring = {"limit":"10","skip":"0","filter":"","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/iplists?limit=10&skip=0&filter=&sort=' -Method GET -Headers $headers
    post:
      description: |-
        Create an IP list.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/iplists \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "Sample IP List",
            "ips": [
              "192.168.10.12",
              "192.168.10.20 - 192.168.10.30",
              "123.225.10.0/32"
            ]
          }'
        ```
      operationId: iplists_post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/IPListRequest'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/IPList'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Create IP List
      tags:
        - IP Lists
      x-scopes:
        - authn
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/iplists \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"description":"string","ips":["string"],"name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/iplists"

            payload = {
                "description": "string",
                "ips": ["string"],
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/iplists' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"description":"string","ips":["string"],"name":"string"}'
    x-functionalities-tags:
      - ip-lists
  '/iplists/{id}':
    delete:
      description: |-
        Delete a specific IP list.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/iplists/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: iplists_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IPList'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete an IP list
      tags:
        - IP Lists
      x-scopes:
        - authn
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/iplists/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/iplists/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/iplists/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        Return a specific IP list.

        #### Sample Request
        ```
        curl https://console.jumpcloud.com/api/v2/iplists/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: iplists_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IPList'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get an IP list
      tags:
        - IP Lists
      x-scopes:
        - authn
        - authn.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/iplists/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/iplists/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/iplists/{id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: id
        required: true
        type: string
    patch:
      description: |-
        Update a specific IP list.

        #### Sample Request
        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/iplists/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{"name": "New IP List Name"}'
        ```
      operationId: iplists_patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/IPListRequest'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IPList'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update an IP list
      tags:
        - IP Lists
      x-scopes:
        - authn
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/iplists/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"description":"string","ips":["string"],"name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/iplists/{id}"

            payload = {
                "description": "string",
                "ips": ["string"],
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/iplists/{id}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"description":"string","ips":["string"],"name":"string"}'
    put:
      description: |-
        Replace a specific IP list.

        #### Sample Request
        ```
        curl -X PUT https://console.jumpcloud.com/api/v2/iplists/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "Sample IP List",
            "ips": [
              "192.168.10.10"
            ]
          }'
        ```
      operationId: iplists_put
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/IPListRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IPList'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Replace an IP list
      tags:
        - IP Lists
      x-scopes:
        - authn
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/iplists/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"description":"string","ips":["string"],"name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/iplists/{id}"

            payload = {
                "description": "string",
                "ips": ["string"],
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/iplists/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"description":"string","ips":["string"],"name":"string"}'
    x-functionalities-tags:
      - ip-lists
  '/jobs/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - jobs
  '/jobs/{id}/results':
    parameters:
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - jobs
  /knowledge/articles:
    x-functionalities-tags:
      - knowledge-articles
  /ldapservers:
    get:
      description: |-
        This endpoint returns the object IDs of your LDAP servers.


        ##### Sample Request

        ```
          curl -X GET https://console.jumpcloud.com/api/v2/ldapservers/ \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
      operationId: ldapservers_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/ldap-server'
            type: array
      security:
        - x-api-key: []
      summary: List LDAP Servers
      tags:
        - LDAP Servers
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/ldapservers?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    x-functionalities-tags:
      - ldap-management
  '/ldapservers/{id}':
    get:
      description: |-
        This endpoint returns a specific LDAP server.

        ##### Sample Request

        ```
         curl -X GET https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: ldapservers_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ldap-server'
      security:
        - x-api-key: []
      summary: Get LDAP Server
      tags:
        - LDAP Servers
      x-functionalities-tags:
        - ldap-management
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/ldapservers/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{id}' -Method GET -Headers $headers
    parameters:
      - description: Unique identifier of the LDAP server.
        in: path
        name: id
        required: true
        type: string
    patch:
      description: |-
        This endpoint allows updating some attributes of an LDAP server.

        Sample Request

        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "userLockoutAction": "remove",
            "userPasswordExpirationAction": "disable"
          }'
        ```
      operationId: ldapservers_patch
      parameters:
        - in: body
          name: body
          schema:
            properties:
              id:
                type: string
              userLockoutAction:
                $ref: '#/definitions/LdapServerAction'
              userPasswordExpirationAction:
                $ref: '#/definitions/LdapServerAction'
            type: object
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            properties:
              id:
                type: string
              name:
                type: string
              userLockoutAction:
                $ref: '#/definitions/LdapServerAction'
              userPasswordExpirationAction:
                $ref: '#/definitions/LdapServerAction'
            type: object
        '400':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Update existing LDAP server
      tags:
        - LDAP Servers
      x-functionalities-tags:
        - ldap-management
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/ldapservers/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","userLockoutAction":"disable","userPasswordExpirationAction":"disable"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{id}"

            payload = {
                "id": "string",
                "userLockoutAction": "disable",
                "userPasswordExpirationAction": "disable"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{id}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"id":"string","userLockoutAction":"disable","userPasswordExpirationAction":"disable"}'
  '/ldapservers/{ldapserver_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of this LDAP Server.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example LDAP and Users.

        #### Sample Request

        ```
         curl -X GET 'https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/associations?targets=user_group \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_ldapServerAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsLdapServer:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a LDAP Server
      tags:
        - Graph
        - LDAP Servers
      x-functionalities-tags:
        - ldap-management
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the LDAP Server.
        in: path
        name: ldapserver_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the _direct_ associations of a LDAP Server.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example LDAP and Users.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/associations \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "user",
            "id": "{User_ID}"
          }'
        ```
      operationId: graph_ldapServerAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-LdapServer'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a LDAP Server
      tags:
        - Graph
        - LDAP Servers
      x-functionalities-tags:
        - ldap-management
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"user"}'
    x-functionalities-tags:
      - ldap-associations
  '/ldapservers/{ldapserver_id}/sambadomains':
    get:
      description: |-
        This endpoint returns all samba domains for an LDAP server.

        ##### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/sambadomains \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: ldapservers_sambaDomainsList
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/samba-domain'
            type: array
        default:
          description: ''
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List Samba Domains
      tags:
        - Samba Domains
      x-functionalities-tags:
        - ldap-samba
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: Unique identifier of the LDAP server.
        in: path
        name: ldapserver_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to create a samba domain for an LDAP server.

        ##### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/sambadomains \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "sid":"{SID_ID}",
            "name":"{WORKGROUP_NAME}"
          }'
        ```
      operationId: ldapservers_sambaDomainsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/samba-domain'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/samba-domain'
      security:
        - x-api-key: []
      summary: Create Samba Domain
      tags:
        - Samba Domains
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"name":"string","sid":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains"

            payload = {
                "name": "string",
                "sid": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"name":"string","sid":"string"}'
    x-functionalities-tags:
      - ldap-samba
  '/ldapservers/{ldapserver_id}/sambadomains/{id}':
    delete:
      description: |-
        This endpoint allows you to delete a samba domain from an LDAP server.

        ##### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/sambadomains/{SAMBA_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: ldapservers_sambaDomainsDelete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            type: string
        '204':
          description: ''
      security:
        - x-api-key: []
      summary: Delete Samba Domain
      tags:
        - Samba Domains
      x-functionalities-tags:
        - ldap-samba
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns a specific samba domain for an LDAP server.

        ##### Sample Request
        ```
        curl -X GET \
          https://console.jumpcloud.com/api/v2/ldapservers/ldapservers/{LDAP_ID}/sambadomains/{SAMBA_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: ldapservers_sambaDomainsGet
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/samba-domain'
      security:
        - x-api-key: []
      summary: Get Samba Domain
      tags:
        - Samba Domains
      x-functionalities-tags:
        - ldap-samba
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains/{id}' -Method GET -Headers $headers
    parameters:
      - description: Unique identifier of the LDAP server.
        in: path
        name: ldapserver_id
        required: true
        type: string
      - description: Unique identifier of the samba domain.
        in: path
        name: id
        required: true
        type: string
    put:
      description: |-
        This endpoint allows you to update the samba domain information for an LDAP server.

        ##### Sample Request
        ```
        curl -X PUT https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/sambadomains/{SAMBA_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "sid":"{SID_ID}",
            "name":"{WORKGROUP_NAME}"
          }'
        ```
      operationId: ldapservers_sambaDomainsPut
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/samba-domain'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/samba-domain'
      security:
        - x-api-key: []
      summary: Update Samba Domain
      tags:
        - Samba Domains
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"name":"string","sid":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains/{id}"

            payload = {
                "name": "string",
                "sid": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/sambadomains/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"name":"string","sid":"string"}'
    x-functionalities-tags:
      - ldap-samba
  '/ldapservers/{ldapserver_id}/translationrules':
    parameters:
      - in: path
        name: ldapserver_id
        required: true
        type: string
    x-functionalities-tags:
      - ldap-translation
  '/ldapservers/{ldapserver_id}/translationrules/{id}':
    parameters:
      - in: path
        name: ldapserver_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - ldap-translation
  '/ldapservers/{ldapserver_id}/usergroups':
    get:
      description: |-
        This endpoint will return all Users Groups bound to a LDAP Server, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this LDAP server instance to the corresponding User Group; this array represents all grouping and/or associations that would have to be removed to deprovision the User Group from this LDAP server instance.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_ldapServerTraverseUserGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Groups bound to a LDAP Server
      tags:
        - Graph
        - LDAP Servers
      x-functionalities-tags:
        - ldap-associations
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/usergroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/usergroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/usergroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the LDAP Server.
        in: path
        name: ldapserver_id
        required: true
        type: string
    x-functionalities-tags:
      - ldap-management
  '/ldapservers/{ldapserver_id}/users':
    get:
      description: |-
        This endpoint will return all Users bound to an LDAP Server, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this LDAP server instance to the corresponding User; this array represents all grouping and/or associations that would have to be removed to deprovision the User from this LDAP server instance.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/users \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_ldapServerTraverseUser
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Users bound to a LDAP Server
      tags:
        - Graph
        - LDAP Servers
      x-functionalities-tags:
        - ldap-associations
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/users?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/users"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/ldapservers/{ldapserver_id}/users?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the LDAP Server.
        in: path
        name: ldapserver_id
        required: true
        type: string
    x-functionalities-tags:
      - ldap-management
  '/logos/{id}':
    get:
      description: Return the logo image associated with the specified id
      operationId: logos_get
      produces:
        - image/gif
        - image/jpeg
        - image/png
      responses:
        '200':
          description: OK
          schema:
            type: file
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      summary: Get the logo associated with the specified id
      tags:
        - Logos
      x-scopes:
        - anonymous
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/logos/{id}
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/logos/{id}"

            response = requests.request("GET", url)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/logos/{id}'' -Method GET '
    parameters:
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - custom-email
  /microsoft-mdm/configuration-files:
    post:
      description: This endpoint allows you to download the config file.
      operationId: Enrollments_DownloadConfigFiles
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.microsoft_mdm.DownloadConfigFilesRequest'
      produces:
        - application/zip
      responses:
        '200':
          description: OK
          schema:
            format: binary
            type: string
      security:
        - x-api-key: []
      summary: This endpoint provides a zipped configuration file intended for use with Microsoft Configuration Designer to create a Provisioning Package (PPKG) for bulk MDM enrollment.
      tags:
        - Microsoft MDM
      x-dynamic-gateway: true
      x-scopes:
        - organizations
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/microsoft-mdm/configuration-files \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/microsoft-mdm/configuration-files"

            payload = {}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/microsoft-mdm/configuration-files' -Method POST -Headers $headers -ContentType 'application/json' -Body '{}'
  /notifications/channels:
    get:
      description: This endpoint allows you to list notification channels.
      operationId: NotificationsChannelsService_ListChannels
      parameters:
        - collectionFormat: multi
          description: |
            A filter to apply to the query.

              **Filter structure**: `<field>:<operator>:<value>`.

              **field** = Populate with a valid field from an endpoint response.

              **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.

              **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.

              **Example** `GET /api/v2/groups?filter=name:eq:Test+Group`
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
        - collectionFormat: multi
          description: The fields on the items listed to return.
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - collectionFormat: multi
          description: |-
            An optional comma separated field names used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          in: query
          items:
            type: string
          name: sort
          required: false
          type: array
        - default: '100'
          description: |-
            The number of channels to return at once.
            If the number of channels returned is less than `limit` there are no more channels to fetch.
            If the number of channels returned is equal to limit there may be more channels to fetch. Increment `skip` by `limit` to get the next set of channels.
          format: int64
          in: query
          name: limit
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.notifications.ListChannelsResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for listing the notification channels.
      tags:
        - Notifications Channels
      x-dynamic-gateway: true
      x-scopes:
        - notifications.channels
        - notifications.channels.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/notifications/channels?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/notifications/channels"

            querystring = {"filter":"SOME_ARRAY_VALUE","fields":"SOME_ARRAY_VALUE","skip":"0","sort":"SOME_ARRAY_VALUE","limit":"100"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/notifications/channels?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' -Method GET -Headers $headers
    post:
      description: This endpoint allows you to create a notification channel.
      operationId: NotificationsChannelsService_CreateChannel
      parameters:
        - description: CreateChannelRequest represents the request to create a channel.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.notifications.CreateChannelRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.notifications.CreateChannelResponse'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/jumpcloud.notifications.CreateChannelResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for creating the channels.
      tags:
        - Notifications Channels
      x-dynamic-gateway: true
      x-scopes:
        - notifications.channels
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/notifications/channels \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"channel":{"config":{"email":{"role":[{"objectId":"string","roleObjectId":"string"}],"user":[{"address":"string","name":"string","objectId":"string"}]},"slack":{"slackChannel":[{"objectId":"string","slackChannelId":"string","slackTeamId":"string"}]},"webhook":{"authPassword":"string","authToken":"string","authType":"WEBHOOK_AUTH_TYPE_UNSPECIFIED","authUsername":"string","customHeaders":[{"key":"string","masked":true,"objectId":"string","value":"string"}],"maskedUrlPortion":[{"key":"string","objectId":"string","value":"string"}],"objectId":"string","sslVerification":true,"url":"string","urlMasked":true}},"description":"string","enabled":true,"name":"string","type":"CHANNEL_TYPE_UNSPECIFIED"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/notifications/channels"

            payload = {"channel": {
                    "config": {
                        "email": {
                            "role": [
                                {
                                    "objectId": "string",
                                    "roleObjectId": "string"
                                }
                            ],
                            "user": [
                                {
                                    "address": "string",
                                    "name": "string",
                                    "objectId": "string"
                                }
                            ]
                        },
                        "slack": {"slackChannel": [
                                {
                                    "objectId": "string",
                                    "slackChannelId": "string",
                                    "slackTeamId": "string"
                                }
                            ]},
                        "webhook": {
                            "authPassword": "string",
                            "authToken": "string",
                            "authType": "WEBHOOK_AUTH_TYPE_UNSPECIFIED",
                            "authUsername": "string",
                            "customHeaders": [
                                {
                                    "key": "string",
                                    "masked": True,
                                    "objectId": "string",
                                    "value": "string"
                                }
                            ],
                            "maskedUrlPortion": [
                                {
                                    "key": "string",
                                    "objectId": "string",
                                    "value": "string"
                                }
                            ],
                            "objectId": "string",
                            "sslVerification": True,
                            "url": "string",
                            "urlMasked": True
                        }
                    },
                    "description": "string",
                    "enabled": True,
                    "name": "string",
                    "type": "CHANNEL_TYPE_UNSPECIFIED"
                }}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/notifications/channels' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"channel":{"config":{"email":{"role":[{"objectId":"string","roleObjectId":"string"}],"user":[{"address":"string","name":"string","objectId":"string"}]},"slack":{"slackChannel":[{"objectId":"string","slackChannelId":"string","slackTeamId":"string"}]},"webhook":{"authPassword":"string","authToken":"string","authType":"WEBHOOK_AUTH_TYPE_UNSPECIFIED","authUsername":"string","customHeaders":[{"key":"string","masked":true,"objectId":"string","value":"string"}],"maskedUrlPortion":[{"key":"string","objectId":"string","value":"string"}],"objectId":"string","sslVerification":true,"url":"string","urlMasked":true}},"description":"string","enabled":true,"name":"string","type":"CHANNEL_TYPE_UNSPECIFIED"}}'
  '/notifications/channels/{id}':
    delete:
      description: This endpoint allows you to delete a notification channel.
      operationId: NotificationsChannelsService_DeleteChannel
      parameters:
        - format: byte
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
        '204':
          description: No Content
          schema: {}
      security:
        - x-api-key: []
      summary: This endpoint is used to delete notification channels.
      tags:
        - Notifications Channels
      x-dynamic-gateway: true
      x-scopes:
        - notifications.channels
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/notifications/channels/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/notifications/channels/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/notifications/channels/{id}' -Method DELETE -Headers $headers
    get:
      description: This endpoint allows you to get a notification channel.
      operationId: NotificationsChannelsService_GetChannel
      parameters:
        - format: byte
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.notifications.GetChannelResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for getting a notification channel.
      tags:
        - Notifications Channels
      x-dynamic-gateway: true
      x-scopes:
        - notifications.channels
        - notifications.channels.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/notifications/channels/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/notifications/channels/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/notifications/channels/{id}' -Method GET -Headers $headers
    patch:
      description: This endpoint allows you to update a notification channel.
      operationId: NotificationsChannelsService_UpdateChannel
      parameters:
        - format: byte
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            description: UpdateChannelRequest represents the request to update a channel.
            properties:
              channel:
                $ref: '#/definitions/jumpcloud.notifications.Channel'
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.notifications.UpdateChannelResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for updating the channels.
      tags:
        - Notifications Channels
      x-dynamic-gateway: true
      x-scopes:
        - notifications.channels
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/notifications/channels/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"channel":{"config":{"email":{"role":[{"objectId":"string","roleObjectId":"string"}],"user":[{"address":"string","name":"string","objectId":"string"}]},"slack":{"slackChannel":[{"objectId":"string","slackChannelId":"string","slackTeamId":"string"}]},"webhook":{"authPassword":"string","authToken":"string","authType":"WEBHOOK_AUTH_TYPE_UNSPECIFIED","authUsername":"string","customHeaders":[{"key":"string","masked":true,"objectId":"string","value":"string"}],"maskedUrlPortion":[{"key":"string","objectId":"string","value":"string"}],"objectId":"string","sslVerification":true,"url":"string","urlMasked":true}},"description":"string","enabled":true,"name":"string","type":"CHANNEL_TYPE_UNSPECIFIED"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/notifications/channels/{id}"

            payload = {"channel": {
                    "config": {
                        "email": {
                            "role": [
                                {
                                    "objectId": "string",
                                    "roleObjectId": "string"
                                }
                            ],
                            "user": [
                                {
                                    "address": "string",
                                    "name": "string",
                                    "objectId": "string"
                                }
                            ]
                        },
                        "slack": {"slackChannel": [
                                {
                                    "objectId": "string",
                                    "slackChannelId": "string",
                                    "slackTeamId": "string"
                                }
                            ]},
                        "webhook": {
                            "authPassword": "string",
                            "authToken": "string",
                            "authType": "WEBHOOK_AUTH_TYPE_UNSPECIFIED",
                            "authUsername": "string",
                            "customHeaders": [
                                {
                                    "key": "string",
                                    "masked": True,
                                    "objectId": "string",
                                    "value": "string"
                                }
                            ],
                            "maskedUrlPortion": [
                                {
                                    "key": "string",
                                    "objectId": "string",
                                    "value": "string"
                                }
                            ],
                            "objectId": "string",
                            "sslVerification": True,
                            "url": "string",
                            "urlMasked": True
                        }
                    },
                    "description": "string",
                    "enabled": True,
                    "name": "string",
                    "type": "CHANNEL_TYPE_UNSPECIFIED"
                }}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/notifications/channels/{id}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"channel":{"config":{"email":{"role":[{"objectId":"string","roleObjectId":"string"}],"user":[{"address":"string","name":"string","objectId":"string"}]},"slack":{"slackChannel":[{"objectId":"string","slackChannelId":"string","slackTeamId":"string"}]},"webhook":{"authPassword":"string","authToken":"string","authType":"WEBHOOK_AUTH_TYPE_UNSPECIFIED","authUsername":"string","customHeaders":[{"key":"string","masked":true,"objectId":"string","value":"string"}],"maskedUrlPortion":[{"key":"string","objectId":"string","value":"string"}],"objectId":"string","sslVerification":true,"url":"string","urlMasked":true}},"description":"string","enabled":true,"name":"string","type":"CHANNEL_TYPE_UNSPECIFIED"}}'
  /notifications/webhook/channels:
    get:
      description: This endpoint allows you to list webhook notification channels.
      operationId: NotificationsChannelsService_ListWebhookChannels
      parameters:
        - collectionFormat: multi
          description: |
            A filter to apply to the query.

              **Filter structure**: `<field>:<operator>:<value>`.

              **field** = Populate with a valid field from an endpoint response.

              **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.

              **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.

              **Example** `GET /api/v2/groups?filter=name:eq:Test+Group`
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
        - collectionFormat: multi
          description: The fields on the items listed to return.
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - collectionFormat: multi
          description: |-
            An optional comma separated field names used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          in: query
          items:
            type: string
          name: sort
          required: false
          type: array
        - default: '100'
          description: |-
            The number of channels to return at once.
            If the number of channels returned is less than `limit` there are no more channels to fetch.
            If the number of channels returned is equal to limit there may be more channels to fetch. Increment `skip` by `limit` to get the next set of channels.
          format: int64
          in: query
          name: limit
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.notifications.ListWebhookChannelsResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used for listing the webhook notification channels.
      tags:
        - Webhook Notifications Channels
      x-dynamic-gateway: true
      x-scopes:
        - notifications.channels
        - notifications.channels.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/notifications/webhook/channels?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/notifications/webhook/channels"

            querystring = {"filter":"SOME_ARRAY_VALUE","fields":"SOME_ARRAY_VALUE","skip":"0","sort":"SOME_ARRAY_VALUE","limit":"100"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/notifications/webhook/channels?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=0&sort=SOME_ARRAY_VALUE&limit=100' -Method GET -Headers $headers
  /notifications/webhook/test:
    post:
      description: This endpoint allows you to test a webhook.
      operationId: NotificationsChannelsService_TestWebhook
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.notifications.WebhookTestRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.notifications.WebhookTestResponse'
      security:
        - x-api-key: []
      summary: This endpoint is used to test a webhook.
      tags:
        - Webhook Notifications
      x-dynamic-gateway: true
      x-scopes:
        - notifications.channels
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/notifications/webhook/test \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"organizationObjectId":"string","postSave":{"authPassword":"string","authToken":"string","authType":"WEBHOOK_AUTH_TYPE_UNSPECIFIED","authUsername":"string","customHeaders":[{"key":"string","masked":true,"objectId":"string","value":"string"}],"maskedUrlPortion":[{"key":"string","objectId":"string","value":"string"}],"objectId":"string","sslVerification":true,"url":"string","urlMasked":true},"preSave":{"authPassword":"string","authToken":"string","authType":"WEBHOOK_AUTH_TYPE_UNSPECIFIED","authUsername":"string","customHeaders":[{"key":"string","masked":true,"objectId":"string","value":"string"}],"sslVerification":true,"url":"string","urlMasked":true}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/notifications/webhook/test"

            payload = {
                "organizationObjectId": "string",
                "postSave": {
                    "authPassword": "string",
                    "authToken": "string",
                    "authType": "WEBHOOK_AUTH_TYPE_UNSPECIFIED",
                    "authUsername": "string",
                    "customHeaders": [
                        {
                            "key": "string",
                            "masked": True,
                            "objectId": "string",
                            "value": "string"
                        }
                    ],
                    "maskedUrlPortion": [
                        {
                            "key": "string",
                            "objectId": "string",
                            "value": "string"
                        }
                    ],
                    "objectId": "string",
                    "sslVerification": True,
                    "url": "string",
                    "urlMasked": True
                },
                "preSave": {
                    "authPassword": "string",
                    "authToken": "string",
                    "authType": "WEBHOOK_AUTH_TYPE_UNSPECIFIED",
                    "authUsername": "string",
                    "customHeaders": [
                        {
                            "key": "string",
                            "masked": True,
                            "objectId": "string",
                            "value": "string"
                        }
                    ],
                    "sslVerification": True,
                    "url": "string",
                    "urlMasked": True
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/notifications/webhook/test' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"organizationObjectId":"string","postSave":{"authPassword":"string","authToken":"string","authType":"WEBHOOK_AUTH_TYPE_UNSPECIFIED","authUsername":"string","customHeaders":[{"key":"string","masked":true,"objectId":"string","value":"string"}],"maskedUrlPortion":[{"key":"string","objectId":"string","value":"string"}],"objectId":"string","sslVerification":true,"url":"string","urlMasked":true},"preSave":{"authPassword":"string","authToken":"string","authType":"WEBHOOK_AUTH_TYPE_UNSPECIFIED","authUsername":"string","customHeaders":[{"key":"string","masked":true,"objectId":"string","value":"string"}],"sslVerification":true,"url":"string","urlMasked":true}}'
  /object-storage/items:
    get:
      description: "List the current Object Storage Items for an Organization.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/object-storage/items \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:{API_KEY}'\n```\n\n\tNote: The `limit` maximum is 100 ObjectStorageItems in a single response.\n\n\tMSP Note: Currently ObjectStorage can only operate in the context of a single organization."
      operationId: ObjectStorage_ListObjectStorageItemsPublic
      parameters:
        - collectionFormat: multi
          description: "A filter to apply to the query.\n\n\t**Filter structure**: `<field>:<operator>:<value>`.\n\n\t**field** = Populate with a valid field from an endpoint response.\n\n\t**operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.\n\n\t**value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.\n\n\t**Example** `GET /api/v2/groups?filter=name:eq:Test+Group`\n"
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
        - collectionFormat: multi
          description: The fields on the items listed to return.
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - collectionFormat: multi
          description: |-
            An optional comma separated field names used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          in: query
          items:
            type: string
          name: sort
          required: false
          type: array
        - description: |-
            The number of resources to return at once.
            If the number of resources returned is less than `limit` there are no more resources to fetch.
            If the number of resources returned is equal to limit there may be more resources to fetch. Increment `skip` by `limit` to get the next set of resources.
          format: int64
          in: query
          name: limit
          required: false
          type: string
      responses:
        '200':
          description: Success listing Object Storage Items.
          schema:
            items:
              $ref: '#/definitions/devices.ObjectStorageItemPublic'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List the Items stored in Object Storage
      tags:
        - Object Storage
      x-dynamic-gateway: true
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/object-storage/items?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=SOME_STRING_VALUE&sort=SOME_ARRAY_VALUE&limit=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/object-storage/items"

            querystring = {"filter":"SOME_ARRAY_VALUE","fields":"SOME_ARRAY_VALUE","skip":"SOME_STRING_VALUE","sort":"SOME_ARRAY_VALUE","limit":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/object-storage/items?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=SOME_STRING_VALUE&sort=SOME_ARRAY_VALUE&limit=SOME_STRING_VALUE' -Method GET -Headers $headers
  /object-storage/status:
    get:
      description: Get the current status of Object Storage.
      operationId: ObjectStorage_GetStatus
      responses:
        '200':
          description: Success retrieving status of Object Storage.
          schema:
            $ref: '#/definitions/devices.ObjectStorageStatusResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Get the current Object Storage status
      tags:
        - Object Storage
      x-dynamic-gateway: true
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/object-storage/status \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/object-storage/status"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/object-storage/status' -Method GET -Headers $headers
  /office365/activate:
    x-functionalities-tags:
      - m365-activate-deactivate
  '/office365s/{id}/reactivate':
    parameters:
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - m365-activate-deactivate
  '/office365s/{office365_id}':
    get:
      description: |-
        This endpoint returns a specific Office 365 instance.

        #####

        Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: office365s_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/office365'
      security:
        - x-api-key: []
      summary: Get Office 365 instance
      tags:
        - Office 365
      x-functionalities-tags:
        - m365-read
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/office365s/{office365_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Office 365 instance.
        in: path
        name: office365_id
        required: true
        type: string
    patch:
      description: |-
        This endpoint allows updating some attributes of an Office 365 instance.

        #####

        Sample Request

        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "userLockoutAction": "maintain",
            "userPasswordExpirationAction": "suspend",
          }'
        ```

        Sample Request, set a default domain

        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "defaultDomain": {
                "id": "{domainObjectID}"
              }
          }'
        ```

        Sample Request, unset the default domain

        ```
        curl -X PATCH https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "defaultDomain": {}
          }'
        ```
      operationId: office365s_patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/office365'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/office365'
      security:
        - x-api-key: []
      summary: Update existing Office 365 instance.
      tags:
        - Office 365
      x-functionalities-tags:
        - m365-update
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/office365s/{office365_id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"defaultDomain":{"id":"string"},"groupsEnabled":true,"name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}"

            payload = {
                "defaultDomain": {"id": "string"},
                "groupsEnabled": True,
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"defaultDomain":{"id":"string"},"groupsEnabled":true,"name":"string"}'
  '/office365s/{office365_id}/associations':
    get:
      description: |-
        This endpoint returns _direct_ associations of an Office 365 instance.


        A direct association can be a non-homogeneous relationship between 2 different objects, for example Office 365 and Users.

        #### Sample Request
        ```
        curl -X GET 'https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID}/associations?targets=user_group' \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_office365AssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsOffice365:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of an Office 365 instance
      tags:
        - Graph
        - Office 365
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Office 365 instance.
        in: path
        name: office365_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the _direct_ associations of a Office 365 instance.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Office 365 and Users.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID}/associations \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "user_group",
            "id": "{Group_ID}"
          }'
        ```
      operationId: graph_office365AssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-Office365'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of an Office 365 instance
      tags:
        - Graph
        - Office 365
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/office365s/{office365_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"user"}'
    x-functionalities-tags:
      - m365-associations
  '/office365s/{office365_id}/domains':
    get:
      description: |-
        List the domains configured for a specific M365/Azure AD directory sync integration instance.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID}/domains \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: Domains_List
      parameters:
        - description: Id for the specific M365/Azure AD directory sync integration instance.
          format: byte
          in: path
          name: office365_id
          required: true
          type: string
        - default: '100'
          description: The number of records to return at once. Limited to 100.
          format: int64
          in: query
          name: limit
          required: false
          type: string
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/o365.DomainsListResponse'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: List all domains configured for an Office 365 instance
      tags:
        - Office 365
      x-dynamic-gateway: true
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/domains?limit=100&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/domains"

            querystring = {"limit":"100","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/domains?limit=100&skip=0' -Method GET -Headers $headers
    post:
      description: |-
        Add a domain to a specific M365/Azure AD directory sync integration instance. The domain must be a verified domain in M365/Azure AD.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID}/domains \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{"domain": "{domain name}"}'
        ```
      operationId: Domains_Insert
      parameters:
        - description: Id for the specific M365/Azure AD directory sync integration instance.
          format: byte
          in: path
          name: office365_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              domain:
                type: string
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/o365.DomainResponse'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/o365.DomainResponse'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Add a domain to an Office 365 instance
      tags:
        - Office 365
      x-dynamic-gateway: true
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/office365s/{office365_id}/domains \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"domain":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/domains"

            payload = {"domain": "string"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/domains' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"domain":"string"}'
  '/office365s/{office365_id}/domains/{domain_id}':
    delete:
      description: |-
        Delete a domain from a specific M365/Azure AD directory sync integration instance.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID}/domains/{DOMAIN_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: Domains_Delete
      parameters:
        - description: Id for the specific M365/Azure AD directory sync integration instance.
          format: byte
          in: path
          name: office365_id
          required: true
          type: string
        - description: ObjectID of the domain to be deleted.
          format: byte
          in: path
          name: domain_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/o365.DomainResponse'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Delete a domain from an Office 365 instance
      tags:
        - Office 365
      x-dynamic-gateway: true
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/office365s/{office365_id}/domains/{domain_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/domains/{domain_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/domains/{domain_id}' -Method DELETE -Headers $headers
  '/office365s/{office365_id}/import/users':
    get:
      description: Lists Office 365 users available for import.
      operationId: office365s_listImportUsers
      parameters:
        - $ref: '#/parameters/trait:o365:ConsistencyLevel'
        - description: 'Office 365 API maximum number of results per page. See https://docs.microsoft.com/en-us/graph/paging.'
          in: query
          name: top
          type: integer
        - description: 'Office 365 API token used to access the next page of results. See https://docs.microsoft.com/en-us/graph/paging.'
          in: query
          name: skipToken
          type: string
        - description: 'Office 365 API filter parameter. See https://docs.microsoft.com/en-us/graph/api/user-list?view=graph-rest-1.0&tabs=http#optional-query-parameters.'
          in: query
          name: filter
          type: string
        - description: 'Office 365 API search parameter. See https://docs.microsoft.com/en-us/graph/api/user-list?view=graph-rest-1.0&tabs=http#optional-query-parameters.'
          in: query
          name: search
          type: string
        - description: 'Office 365 API orderby parameter. See https://docs.microsoft.com/en-us/graph/api/user-list?view=graph-rest-1.0&tabs=http#optional-query-parameters.'
          in: query
          name: orderby
          type: string
        - description: 'Office 365 API count parameter. See https://docs.microsoft.com/en-us/graph/api/user-list?view=graph-rest-1.0&tabs=http#optional-query-parameters.'
          in: query
          name: count
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            properties:
              skipToken:
                type: string
              top:
                type: integer
              users:
                items:
                  properties:
                    givenName:
                      type: string
                    id:
                      type: string
                    surname:
                      type: string
                    userPrincipalName:
                      type: string
                  type: object
                type: array
            type: object
      security:
        - x-api-key: []
      summary: Get a list of users to import from an Office 365 instance
      tags:
        - Office 365
        - Office 365 Import
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/import/users?top=SOME_INTEGER_VALUE&skipToken=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&search=SOME_STRING_VALUE&orderby=SOME_STRING_VALUE&count=SOME_BOOLEAN_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/import/users"

            querystring = {"top":"SOME_INTEGER_VALUE","skipToken":"SOME_STRING_VALUE","filter":"SOME_STRING_VALUE","search":"SOME_STRING_VALUE","orderby":"SOME_STRING_VALUE","count":"SOME_BOOLEAN_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/import/users?top=SOME_INTEGER_VALUE&skipToken=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&search=SOME_STRING_VALUE&orderby=SOME_STRING_VALUE&count=SOME_BOOLEAN_VALUE' -Method GET -Headers $headers
    parameters:
      - in: path
        name: office365_id
        required: true
        type: string
    x-functionalities-tags:
      - users-import-m365
  '/office365s/{office365_id}/translationrules':
    get:
      description: |-
        This endpoint returns all translation rules for a specific Office 365 instance. These rules specify how JumpCloud attributes translate to [Microsoft Graph](https://developer.microsoft.com/en-us/graph) attributes.

        ##### Sample Request

        ```
         curl -X GET  https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: translationRules_office365List
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: ''
          examples:
            application/json:
              - field: office_365_state
                id: 5f91c8695e980f0001c44616
                source_type: user
          schema:
            items:
              $ref: '#/definitions/Office365TranslationRule'
            type: array
      security:
        - x-api-key: []
      summary: List all the Office 365 Translation Rules
      tags:
        - Office 365
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: office365_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to create a translation rule for a specific Office 365 instance. These rules specify how JumpCloud attributes translate to [Microsoft Graph](https://developer.microsoft.com/en-us/graph) attributes.

        ##### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            {Translation Rule Parameters}
          }'
        ```
      operationId: translationRules_office365Post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Office365TranslationRuleRequest'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Office365TranslationRule'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
      security:
        - x-api-key: []
      summary: Create a new Office 365 Translation Rule
      tags:
        - Office 365
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"builtIn":"user_department","direction":"export"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules"

            payload = {
                "builtIn": "user_department",
                "direction": "export"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"builtIn":"user_department","direction":"export"}'
    x-functionalities-tags:
      - m365-translations
  '/office365s/{office365_id}/translationrules/{id}':
    delete:
      description: |-
        This endpoint allows you to delete a translation rule for a specific Office 365 instance. These rules specify how JumpCloud attributes translate to [Microsoft Graph](https://developer.microsoft.com/en-us/graph) attributes.

        #### Sample Request

        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules/{id} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: translationRules_office365Delete
      responses:
        '204':
          description: ''
      security:
        - x-api-key: []
      summary: Deletes a Office 365 translation rule
      tags:
        - Office 365
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns a specific translation rule for a specific Office 365 instance. These rules specify how JumpCloud attributes translate to [Microsoft Graph](https://developer.microsoft.com/en-us/graph) attributes.

        ###### Sample Request

        ```
          curl -X GET https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules/{id} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: translationRules_office365Get
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Office365TranslationRule'
      security:
        - x-api-key: []
      summary: Gets a specific Office 365 translation rule
      tags:
        - Office 365
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/translationrules/{id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: office365_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - m365-translations
  '/office365s/{office365_id}/usergroups':
    get:
      description: |-
        This endpoint will return all Users Groups bound to an Office 365 instance, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Office 365 instance to the corresponding User Group; this array represents all grouping and/or associations that would have to be removed to deprovision the User Group from this Office 365 instance.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
          curl -X GET https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_office365TraverseUserGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Groups bound to an Office 365 instance
      tags:
        - Graph
        - Office 365
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/usergroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/usergroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/usergroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Office 365 suite.
        in: path
        name: office365_id
        required: true
        type: string
    x-functionalities-tags:
      - m365-read
  '/office365s/{office365_id}/users':
    get:
      description: |-
        This endpoint will return all Users bound to an Office 365 instance, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Office 365 instance to the corresponding User; this array represents all grouping and/or associations that would have to be removed to deprovision the User from this Office 365 instance.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/office365s/{OFFICE365_ID}/users \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_office365TraverseUser
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Users bound to an Office 365 instance
      tags:
        - Graph
        - Office 365
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/users?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/office365s/{office365_id}/users"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/office365s/{office365_id}/users?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Office 365 suite.
        in: path
        name: office365_id
        required: true
        type: string
    x-functionalities-tags:
      - m365-read
  /organizations/cases:
    get:
      description: This endpoint returns the cases (Support/Feature requests) for the organization
      operationId: organizations_orgListCases
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CasesResponse'
      security:
        - x-api-key: []
      summary: Get all cases (Support/Feature requests) for organization
      tags:
        - Organizations
      x-scopes:
        - support
        - support.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/organizations/cases?skip=0&sort=&limit=10&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/organizations/cases"

            querystring = {"skip":"0","sort":"","limit":"10","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/organizations/cases?skip=0&sort=&limit=10&filter=' -Method GET -Headers $headers
    x-functionalities-tags:
      - organizations
      - cases
  '/organizations/invoices/{ID}':
    parameters:
      - in: path
        name: ID
        required: true
        type: string
    x-functionalities-tags:
      - organizations
  '/organizations/{id}/administratorlinks':
    get:
      description: This endpoint returns the association links between an Organization and Administrators.
      operationId: administratorOrganizations_listByOrganization
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/AdministratorOrganizationLink'
            type: array
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List the association links between an Organization and Administrators.
      tags:
        - Administrators
        - Organizations
        - Managed Service Provider
      x-scopes:
        - organizations
        - organizations.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/organizations/{id}/administratorlinks?limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/organizations/{id}/administratorlinks"

            querystring = {"limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/organizations/{id}/administratorlinks?limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - organizations
  '/organizations/{organization_id}/commandTemplates':
    parameters:
      - in: path
        name: organization_id
        required: true
        type: string
    x-functionalities-tags:
      - command-templates
      - organizations
  '/organizations/{organization_id}/commandTemplates/{id}':
    parameters:
      - in: path
        name: organization_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - command-templates
      - organizations
  /partners:
    x-functionalities-tags:
      - partners-cs-discover-page
  '/partners/{id}':
    parameters:
      - description: ObjectID of the Partner
        in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - partners-cs-discover-page
  '/partners/{id}/allow':
    parameters:
      - description: ObjectID of the Partner
        in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - partners-confirm-partner-link-request
  '/partners/{id}/deny':
    parameters:
      - description: ObjectID of the Partner
        in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - partners-deny-partner-link-request
  '/partners/{id}/disconnect':
    parameters:
      - description: ObjectID of the Partner
        in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - partners-disconnect
  /passwordmanager:
    delete:
      description: This will delete the tenant in the Pwm infra
      operationId: CompanyService_DeleteCompany
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Deactivate Password Manager
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/passwordmanager \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager' -Method DELETE -Headers $headers
  /passwordmanager/appversions:
    get:
      description: Returns pwm app versions list with the users count of each version.
      operationId: OverviewService_GetAppVersionsList
      parameters:
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.GetAppVersionsListResponse'
      security:
        - x-api-key: []
      summary: List App Versions
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/appversions?skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/appversions"

            querystring = {"skip":"SOME_INTEGER_VALUE","limit":"SOME_INTEGER_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/appversions?skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  /passwordmanager/backup/keys:
    get:
      description: List Cloud Backup Keys
      operationId: BackupKeyService_ListBackupKeys
      parameters:
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.ListBackupKeysResponse'
      security:
        - x-api-key: []
      summary: List Cloud Backup Keys
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys"

            querystring = {"limit":"SOME_INTEGER_VALUE","skip":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE","fields":"SOME_ARRAY_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
    post:
      description: Create Cloud Backup Keys
      operationId: BackupKeyService_CreateBackupKey
      parameters:
        - in: body
          name: backupKey
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.pwm.BackupKey'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.BackupKey'
      security:
        - x-api-key: []
      summary: Create Cloud Backup Keys
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"active":true,"companyId":"string","createdAt":"string","createdBy":"string","id":"string","name":"string","publicKey":"string","updatedAt":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys"

            payload = {
                "active": True,
                "companyId": "string",
                "createdAt": "string",
                "createdBy": "string",
                "id": "string",
                "name": "string",
                "publicKey": "string",
                "updatedAt": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"active":true,"companyId":"string","createdAt":"string","createdBy":"string","id":"string","name":"string","publicKey":"string","updatedAt":"string"}'
  '/passwordmanager/backup/keys/{UUID}':
    delete:
      description: Delete a Cloud Backup Key
      operationId: BackupKeyService_DeleteBackupKey
      parameters:
        - in: path
          name: UUID
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Delete Cloud Backup Key
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys/{UUID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys/{UUID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys/{UUID}' -Method DELETE -Headers $headers
    get:
      description: Get a Cloud Backup Key
      operationId: BackupKeyService_GetBackupKey
      parameters:
        - in: path
          name: UUID
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.BackupKey'
      security:
        - x-api-key: []
      summary: Get Cloud Backup Key
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys/{UUID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys/{UUID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys/{UUID}' -Method GET -Headers $headers
    put:
      description: Update a Cloud Backup Key
      operationId: BackupKeyService_UpdateBackupKey
      parameters:
        - in: path
          name: UUID
          required: true
          type: string
        - in: query
          name: active
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.BackupKey'
      security:
        - x-api-key: []
      summary: Update Cloud Backup Key
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys/{UUID}?active=SOME_BOOLEAN_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys/{UUID}"

            querystring = {"active":"SOME_BOOLEAN_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("PUT", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/keys/{UUID}?active=SOME_BOOLEAN_VALUE' -Method PUT -Headers $headers
  /passwordmanager/backup/restores:
    get:
      description: List Cloud Backup Restores
      operationId: BackupRestoreService_ListBackupRestores
      parameters:
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.ListBackupRestoresResponse'
      security:
        - x-api-key: []
      summary: List Cloud Backup Restore Requests
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/restores?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/backup/restores"

            querystring = {"limit":"SOME_INTEGER_VALUE","skip":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE","fields":"SOME_ARRAY_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/restores?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  '/passwordmanager/backup/restores/{UUID}':
    put:
      description: Update a Cloud Backup Restore
      operationId: BackupRestoreService_UpdateBackupRestore
      parameters:
        - in: path
          name: UUID
          required: true
          type: string
        - default: STATUS_UNSPECIFIED
          enum:
            - STATUS_UNSPECIFIED
            - REQUESTED
            - APPROVED
            - REJECTED
            - CANCELLED
            - RESTORED
          in: query
          name: status
          required: false
          type: string
        - description: Backup's encryption key encrypted using the Device's publicKey
          in: query
          name: encryptionKey
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.BackupRestore'
      security:
        - x-api-key: []
      summary: Update Cloud Backup Restore Request
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/restores/{UUID}?status=STATUS_UNSPECIFIED&encryptionKey=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/backup/restores/{UUID}"

            querystring = {"status":"STATUS_UNSPECIFIED","encryptionKey":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("PUT", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/backup/restores/{UUID}?status=STATUS_UNSPECIFIED&encryptionKey=SOME_STRING_VALUE' -Method PUT -Headers $headers
  /passwordmanager/backups:
    get:
      description: List Cloud Backups
      operationId: BackupService_ListBackups
      parameters:
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.ListBackupsResponse'
      security:
        - x-api-key: []
      summary: List Cloud Backups
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/backups?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/backups"

            querystring = {"limit":"SOME_INTEGER_VALUE","skip":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE","fields":"SOME_ARRAY_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/backups?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  '/passwordmanager/backups/{UUID}':
    get:
      description: Get a Cloud Backup
      operationId: BackupService_GetBackup
      parameters:
        - in: path
          name: UUID
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.Backup'
      security:
        - x-api-key: []
      summary: Get Cloud Backup
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/backups/{UUID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/backups/{UUID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/backups/{UUID}' -Method GET -Headers $headers
  /passwordmanager/company/policies:
    get:
      description: Get organization policies
      operationId: CompanyService_GetPolicies
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.PoliciesResponse'
      security:
        - x-api-key: []
      summary: Get Organization Policies
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/company/policies \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/company/policies"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/company/policies' -Method GET -Headers $headers
  '/passwordmanager/company/policies/{UUID}':
    put:
      description: Update organization policies
      operationId: CompanyService_UpdatePolicies
      parameters:
        - in: path
          name: UUID
          required: true
          type: string
        - in: query
          name: disableExport
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.PoliciesResponse'
      security:
        - x-api-key: []
      summary: Update Organization Policies
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/company/policies/{UUID}?disableExport=SOME_BOOLEAN_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/company/policies/{UUID}"

            querystring = {"disableExport":"SOME_BOOLEAN_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("PUT", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/company/policies/{UUID}?disableExport=SOME_BOOLEAN_VALUE' -Method PUT -Headers $headers
  /passwordmanager/devices:
    get:
      description: List Devices
      operationId: DeviceService_ListDevices
      parameters:
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.ListDevicesResponse'
      security:
        - x-api-key: []
      summary: List Devices
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/devices?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/devices"

            querystring = {"limit":"SOME_INTEGER_VALUE","skip":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE","fields":"SOME_ARRAY_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/devices?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  '/passwordmanager/devices/{UUID}':
    get:
      description: Get Device
      operationId: DeviceService_GetDevice
      parameters:
        - in: path
          name: UUID
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.Device'
      security:
        - x-api-key: []
      summary: Get Device
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/devices/{UUID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/devices/{UUID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/devices/{UUID}' -Method GET -Headers $headers
  /passwordmanager/items:
    get:
      description: Returns all items metadata
      operationId: ItemMetadataService_GetMetadata
      parameters:
        - in: query
          name: search
          required: false
          type: string
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.GetMetadataResponse'
      security:
        - x-api-key: []
      summary: Get Items Metadata
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/items?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/items"

            querystring = {"search":"SOME_STRING_VALUE","skip":"SOME_INTEGER_VALUE","limit":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/items?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  /passwordmanager/overview:
    get:
      description: Returns pwm overview stats
      operationId: OverviewService_MainOverview
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.MainOverviewResponse'
      security:
        - x-api-key: []
      summary: Get Overview Stats
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/overview \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/overview"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/overview' -Method GET -Headers $headers
  /passwordmanager/policy/sharedfolders:
    get:
      description: Get shared folders policy
      operationId: FoldersPolicyService_GetFoldersPolicy
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.FoldersPolicyResponse'
      security:
        - x-api-key: []
      summary: Get Shared Folders Policy
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders' -Method GET -Headers $headers
  /passwordmanager/policy/sharedfolders/groups:
    get:
      description: List groups with permission to share folders
      operationId: FoldersPolicyService_ListSelectedGroups
      parameters:
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.ListSelectedGroupsResponse'
      security:
        - x-api-key: []
      summary: List Groups with Permission to Share Folders
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders/groups?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders/groups"

            querystring = {"limit":"SOME_INTEGER_VALUE","skip":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE","fields":"SOME_ARRAY_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders/groups?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  /passwordmanager/policy/sharedfolders/users:
    get:
      description: List users with permission to share folders
      operationId: FoldersPolicyService_ListSelectedUsers
      parameters:
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.ListSelectedUsersResponse'
      security:
        - x-api-key: []
      summary: List Users with Permission to Share Folders
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders/users?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders/users"

            querystring = {"limit":"SOME_INTEGER_VALUE","skip":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE","fields":"SOME_ARRAY_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders/users?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  '/passwordmanager/policy/sharedfolders/{UUID}':
    put:
      description: Update shared folders policy
      operationId: FoldersPolicyService_UpdateFoldersPolicy
      parameters:
        - in: path
          name: UUID
          required: true
          type: string
        - default: UNSPECIFIED
          enum:
            - UNSPECIFIED
            - AllUsers
            - Specific
            - AllExcept
          in: query
          name: shareFolders
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.FoldersPolicyResponse'
      security:
        - x-api-key: []
      summary: Update Shared Folders Policy
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders/{UUID}?shareFolders=UNSPECIFIED' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders/{UUID}"

            querystring = {"shareFolders":"UNSPECIFIED"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("PUT", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/policy/sharedfolders/{UUID}?shareFolders=UNSPECIFIED' -Method PUT -Headers $headers
  /passwordmanager/sharedfolders:
    delete:
      description: Deletes shared folder.
      operationId: SharedFolderService_BatchDeleteSharedFolders
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.pwm.BatchDeleteSharedFoldersRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Delete Shared Folder
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"folderIds":["string"]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders"

            payload = {"folderIds": ["string"]}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("DELETE", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders' -Method DELETE -Headers $headers -ContentType 'application/json' -Body '{"folderIds":["string"]}'
    get:
      description: Get All Shared Folders
      operationId: SharedFolderService_GetSharedFolders
      parameters:
        - in: query
          name: search
          required: false
          type: string
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.GetSharedFoldersResponse'
      security:
        - x-api-key: []
      summary: Get Shared Folders
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders"

            querystring = {"search":"SOME_STRING_VALUE","skip":"SOME_INTEGER_VALUE","limit":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE' -Method GET -Headers $headers
    post:
      description: Create Shared Folder
      operationId: SharedFolderService_CreateSharedFolder
      parameters:
        - in: query
          name: name
          required: false
          type: string
        - in: query
          name: description
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.SharedFolder'
      security:
        - x-api-key: []
      summary: Create Shared Folder
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders?name=SOME_STRING_VALUE&description=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders"

            querystring = {"name":"SOME_STRING_VALUE","description":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders?name=SOME_STRING_VALUE&description=SOME_STRING_VALUE' -Method POST -Headers $headers
  /passwordmanager/sharedfolders/accessLevels:
    get:
      description: Returns shared folder access levels
      operationId: SharedFolderService_GetRoles
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.GetRolesResponse'
      security:
        - x-api-key: []
      summary: Get Shared Folder Access Levels
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/accessLevels \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/accessLevels"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/accessLevels' -Method GET -Headers $headers
  '/passwordmanager/sharedfolders/{folderId}':
    get:
      description: Get Shared Folder details
      operationId: SharedFolderService_GetSharedFolder
      parameters:
        - in: path
          name: folderId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.Folder'
      security:
        - x-api-key: []
      summary: Get Shared Folder Details
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}' -Method GET -Headers $headers
    put:
      description: Update Shared Folder
      operationId: SharedFolderService_UpdateSharedFolder
      parameters:
        - in: path
          name: folderId
          required: true
          type: string
        - in: query
          name: name
          required: false
          type: string
        - in: query
          name: description
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Update Shared Folder
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}?name=SOME_STRING_VALUE&description=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}"

            querystring = {"name":"SOME_STRING_VALUE","description":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("PUT", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}?name=SOME_STRING_VALUE&description=SOME_STRING_VALUE' -Method PUT -Headers $headers
  '/passwordmanager/sharedfolders/{folderId}/groups':
    get:
      description: Returns shared folder groups
      operationId: SharedFolderService_GetSharedFolderGroups
      parameters:
        - in: path
          name: folderId
          required: true
          type: string
        - in: query
          name: search
          required: false
          type: string
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.GetSharedFolderGroupsResponse'
      security:
        - x-api-key: []
      summary: Get Shared Folder Groups
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/groups?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/groups"

            querystring = {"search":"SOME_STRING_VALUE","skip":"SOME_INTEGER_VALUE","limit":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/groups?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE' -Method GET -Headers $headers
  '/passwordmanager/sharedfolders/{folderId}/groups/{groupId}':
    delete:
      description: Deletes shared folder group.
      operationId: SharedFolderService_RevokeGroupAccess
      parameters:
        - in: path
          name: folderId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Delete Shared Folder Group
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/groups/{groupId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/groups/{groupId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/groups/{groupId}' -Method DELETE -Headers $headers
    put:
      description: Update Shared Folder group access level
      operationId: SharedFolderService_UpdateGroupPermission
      parameters:
        - in: path
          name: folderId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
        - in: query
          name: accessLevel
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.FolderGroup'
      security:
        - x-api-key: []
      summary: Update Shared Folder Group Access Level
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/groups/{groupId}?accessLevel=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/groups/{groupId}"

            querystring = {"accessLevel":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("PUT", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/groups/{groupId}?accessLevel=SOME_STRING_VALUE' -Method PUT -Headers $headers
  '/passwordmanager/sharedfolders/{folderId}/manage':
    post:
      description: Manage shared folder members and user groups
      operationId: SharedFolderService_ManageSharedFolderPermission
      parameters:
        - in: path
          name: folderId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              userGroups:
                $ref: '#/definitions/jumpcloud.pwm.SharedFolderPermission'
              users:
                $ref: '#/definitions/jumpcloud.pwm.SharedFolderPermission'
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Manage Shared Folder Permission
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/manage \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"userGroups":{"addition":[{"accessLevelId":"string","id":"string"}],"deletion":["string"],"update":[{"accessLevelId":"string","id":"string"}]},"users":{"addition":[{"accessLevelId":"string","id":"string"}],"deletion":["string"],"update":[{"accessLevelId":"string","id":"string"}]}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/manage"

            payload = {
                "userGroups": {
                    "addition": [
                        {
                            "accessLevelId": "string",
                            "id": "string"
                        }
                    ],
                    "deletion": ["string"],
                    "update": [
                        {
                            "accessLevelId": "string",
                            "id": "string"
                        }
                    ]
                },
                "users": {
                    "addition": [
                        {
                            "accessLevelId": "string",
                            "id": "string"
                        }
                    ],
                    "deletion": ["string"],
                    "update": [
                        {
                            "accessLevelId": "string",
                            "id": "string"
                        }
                    ]
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/manage' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"userGroups":{"addition":[{"accessLevelId":"string","id":"string"}],"deletion":["string"],"update":[{"accessLevelId":"string","id":"string"}]},"users":{"addition":[{"accessLevelId":"string","id":"string"}],"deletion":["string"],"update":[{"accessLevelId":"string","id":"string"}]}}'
  '/passwordmanager/sharedfolders/{folderId}/users':
    get:
      description: Get Shared Folder users
      operationId: SharedFolderService_GetSharedFolderUsers
      parameters:
        - in: path
          name: folderId
          required: true
          type: string
        - in: query
          name: search
          required: false
          type: string
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.GetSharedFolderUsersResponse'
      security:
        - x-api-key: []
      summary: Get Shared Folder Users
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/users?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/users"

            querystring = {"search":"SOME_STRING_VALUE","skip":"SOME_INTEGER_VALUE","limit":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/users?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE' -Method GET -Headers $headers
  '/passwordmanager/sharedfolders/{folderId}/users/{userId}':
    delete:
      description: Deletes shared folder user.
      operationId: SharedFolderService_RevokeUserAccess
      parameters:
        - in: path
          name: folderId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Delete Shared Folder User
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/users/{userId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/users/{userId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/users/{userId}' -Method DELETE -Headers $headers
    put:
      description: Update Shared Folder user access level
      operationId: SharedFolderService_UpdateUserPermission
      parameters:
        - in: path
          name: folderId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: accessLevel
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Update Shared Folder User Access Level
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/users/{userId}?accessLevel=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/users/{userId}"

            querystring = {"accessLevel":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("PUT", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/sharedfolders/{folderId}/users/{userId}?accessLevel=SOME_STRING_VALUE' -Method PUT -Headers $headers
  /passwordmanager/users:
    get:
      description: Returns all pwm users
      operationId: UserService_GetAllUsers
      parameters:
        - in: query
          name: search
          required: false
          type: string
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.GetAllUsersResponse'
      security:
        - x-api-key: []
      summary: Get users
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/users?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/users"

            querystring = {"search":"SOME_STRING_VALUE","skip":"SOME_INTEGER_VALUE","limit":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/users?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  /passwordmanager/users/reinvite:
    post:
      description: 'This endpoint will send an email to the specified users that are still pending activation. If a user is not pending activation, an email will not be sent.'
      operationId: UserService_ResendUserInvite
      parameters:
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: userIds
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Resend User Invite
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/users/reinvite?userIds=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/users/reinvite"

            querystring = {"userIds":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/users/reinvite?userIds=SOME_ARRAY_VALUE' -Method POST -Headers $headers
  '/passwordmanager/users/{userId}':
    get:
      description: Get User details
      operationId: UserService_GetUserDetailsById
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.GetUserDetailsByIdResponse'
      security:
        - x-api-key: []
      summary: Get User details
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/passwordmanager/users/{userId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/users/{userId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/users/{userId}' -Method GET -Headers $headers
  '/passwordmanager/users/{userId}/items':
    get:
      description: Returns user items
      operationId: ItemMetadataService_GetMetadataPerUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: search
          required: false
          type: string
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.GetMetadataResponse'
      security:
        - x-api-key: []
      summary: Get User Items
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/users/{userId}/items?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/users/{userId}/items"

            querystring = {"search":"SOME_STRING_VALUE","skip":"SOME_INTEGER_VALUE","limit":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/users/{userId}/items?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  '/passwordmanager/users/{userId}/sharedFolders':
    get:
      description: Get User shared folders
      operationId: SharedFolderService_GetSharedFoldersPerUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: search
          required: false
          type: string
        - format: int32
          in: query
          name: skip
          required: false
          type: integer
        - format: int32
          in: query
          name: limit
          required: false
          type: integer
        - in: query
          name: sort
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.pwm.GetSharedFoldersPerUserResponse'
      security:
        - x-api-key: []
      summary: Get User Shared Folders
      tags:
        - Password Manager
      x-dynamic-gateway: true
      x-scopes:
        - passwordmanager
        - passwordmanager.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanager/users/{userId}/sharedFolders?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanager/users/{userId}/sharedFolders"

            querystring = {"search":"SOME_STRING_VALUE","skip":"SOME_INTEGER_VALUE","limit":"SOME_INTEGER_VALUE","sort":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanager/users/{userId}/sharedFolders?search=SOME_STRING_VALUE&skip=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE' -Method GET -Headers $headers
  '/passwordmanageritems/{passwordmanageritem_id}/associations':
    get:
      description: |-
        This endpoint returns _direct_ associations of a Password Manager Item.


        A direct association can be a non-homogeneous relationship between 2 different objects, for example Password Mangager Item and Users.

        #### Sample Request
        ```
        curl -X GET 'https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/associations?targets=user_group' \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_passwordManagerItemAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsPasswordManagerItem:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of an Password Manager item
      tags:
        - Graph
        - PasswordManagerItem
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Password Manager Item.
        in: path
        name: passwordmanageritem_id
        required: true
        type: string
    post:
      description: |-
        This endpoint manages the _direct_ associations of a Password Manager Item.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example a Password Manager Item and Users.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/associations?targets=user \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          -d '{"type":"user", "id":"{USER_ID}", "op":"add"}'
        ```
      operationId: graph_passwordManagerItemAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-PasswordManagerItem'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a Password Manager Item
      tags:
        - Graph
        - PasswordManagerItem
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"user"}'
  '/passwordmanageritems/{passwordmanageritem_id}/usergroups':
    get:
      description: |-
        This endpoint will return all Users Groups bound to Password Manager Item, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Password Manager Item to the corresponding User Group.

        #### Sample Request
        ```
          curl -X GET https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_passwordManagerItemTraverseUserGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Groups bound to a Password Manager Item
      tags:
        - Graph
        - PasswordManagerItem
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/usergroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/usergroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/usergroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Password Manager item.
        in: path
        name: passwordmanageritem_id
        required: true
        type: string
  '/passwordmanageritems/{passwordmanageritem_id}/users':
    get:
      description: |-
        This endpoint will return all Users bound to a Password Manager Item, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Password Manager Item to the corresponding User.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/users \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_passwordManagerItemTraverseUser
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Users bound to a Password Manager Item
      tags:
        - Graph
        - PasswordManagerItem
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/users?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/users"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordmanageritems/{passwordmanageritem_id}/users?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Password Manager Item.
        in: path
        name: passwordmanageritem_id
        required: true
        type: string
  /passwordpolicies:
    delete:
      description: Delete password policies for an organization.
      operationId: Policy_BatchDelete
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.password.BatchDeleteRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Batch Delete Password Policy
      tags:
        - Password Policy
      x-dynamic-gateway: true
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/passwordpolicies \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"objectIds":["string"],"organizationObjectId":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordpolicies"

            payload = {
                "objectIds": ["string"],
                "organizationObjectId": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("DELETE", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordpolicies' -Method DELETE -Headers $headers -ContentType 'application/json' -Body '{"objectIds":["string"],"organizationObjectId":"string"}'
    post:
      description: Create a new password policy for an organization.
      operationId: Policy_Insert
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.password.InsertRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.password.Response'
      security:
        - x-api-key: []
      summary: Create Password Policy
      tags:
        - Password Policy
      x-dynamic-gateway: true
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/passwordpolicies \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"groupIds":["string"],"organizationObjectId":"string","policy":{"allowUnenrolledMFAPasswordReset":true,"allowUsernameSubstring":true,"daysAfterExpirationToSelfRecover":0,"daysBeforeExpirationToForceReset":0,"default":true,"description":"string","disallowCommonlyUsedPasswords":true,"disallowSequentialOrRepetitiveChars":true,"effectiveDate":"2019-08-24T14:15:22Z","enableDaysAfterExpirationToSelfRecover":true,"enableDaysBeforeExpirationToForceReset":true,"enableLockoutTimeInSeconds":true,"enableMaxHistory":true,"enableMaxLoginAttempts":true,"enableMinChangePeriodInDays":true,"enableMinLength":true,"enablePasswordExpirationInDays":true,"enableRecoveryEmail":true,"enableResetLockoutCounter":true,"lockoutTimeInSeconds":0,"maxHistory":0,"maxLoginAttempts":0,"minChangePeriodInDays":0,"minLength":0,"name":"string","needsLowercase":true,"needsNumeric":true,"needsSymbolic":true,"needsUppercase":true,"passwordExpirationInDays":0,"precedence":0,"resetLockoutCounterMinutes":0}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordpolicies"

            payload = {
                "groupIds": ["string"],
                "organizationObjectId": "string",
                "policy": {
                    "allowUnenrolledMFAPasswordReset": True,
                    "allowUsernameSubstring": True,
                    "daysAfterExpirationToSelfRecover": 0,
                    "daysBeforeExpirationToForceReset": 0,
                    "default": True,
                    "description": "string",
                    "disallowCommonlyUsedPasswords": True,
                    "disallowSequentialOrRepetitiveChars": True,
                    "effectiveDate": "2019-08-24T14:15:22Z",
                    "enableDaysAfterExpirationToSelfRecover": True,
                    "enableDaysBeforeExpirationToForceReset": True,
                    "enableLockoutTimeInSeconds": True,
                    "enableMaxHistory": True,
                    "enableMaxLoginAttempts": True,
                    "enableMinChangePeriodInDays": True,
                    "enableMinLength": True,
                    "enablePasswordExpirationInDays": True,
                    "enableRecoveryEmail": True,
                    "enableResetLockoutCounter": True,
                    "lockoutTimeInSeconds": 0,
                    "maxHistory": 0,
                    "maxLoginAttempts": 0,
                    "minChangePeriodInDays": 0,
                    "minLength": 0,
                    "name": "string",
                    "needsLowercase": True,
                    "needsNumeric": True,
                    "needsSymbolic": True,
                    "needsUppercase": True,
                    "passwordExpirationInDays": 0,
                    "precedence": 0,
                    "resetLockoutCounterMinutes": 0
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordpolicies' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"groupIds":["string"],"organizationObjectId":"string","policy":{"allowUnenrolledMFAPasswordReset":true,"allowUsernameSubstring":true,"daysAfterExpirationToSelfRecover":0,"daysBeforeExpirationToForceReset":0,"default":true,"description":"string","disallowCommonlyUsedPasswords":true,"disallowSequentialOrRepetitiveChars":true,"effectiveDate":"2019-08-24T14:15:22Z","enableDaysAfterExpirationToSelfRecover":true,"enableDaysBeforeExpirationToForceReset":true,"enableLockoutTimeInSeconds":true,"enableMaxHistory":true,"enableMaxLoginAttempts":true,"enableMinChangePeriodInDays":true,"enableMinLength":true,"enablePasswordExpirationInDays":true,"enableRecoveryEmail":true,"enableResetLockoutCounter":true,"lockoutTimeInSeconds":0,"maxHistory":0,"maxLoginAttempts":0,"minChangePeriodInDays":0,"minLength":0,"name":"string","needsLowercase":true,"needsNumeric":true,"needsSymbolic":true,"needsUppercase":true,"passwordExpirationInDays":0,"precedence":0,"resetLockoutCounterMinutes":0}}'
  /passwordpolicies/precedence/set:
    put:
      description: Update the precedence of password policies for an organization.
      operationId: Policy_UpdatePolicyPrecedence
      parameters:
        - in: body
          name: policyPrecedences
          required: true
          schema:
            items:
              $ref: '#/definitions/jumpcloud.password.PolicyPrecedence'
            type: array
        - format: byte
          in: query
          name: organizationObjectId
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Update Password Policy Precedence
      tags:
        - Password Policy
      x-dynamic-gateway: true
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url 'https://console.jumpcloud.com/api/v2/passwordpolicies/precedence/set?organizationObjectId=SOME_STRING_VALUE' \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '[{"objectId":"string","precedence":0}]'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordpolicies/precedence/set"

            querystring = {"organizationObjectId":"SOME_STRING_VALUE"}

            payload = [
                {
                    "objectId": "string",
                    "precedence": 0
                }
            ]
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordpolicies/precedence/set?organizationObjectId=SOME_STRING_VALUE' -Method PUT -Headers $headers -ContentType 'application/json' -Body '[{"objectId":"string","precedence":0}]'
  '/passwordpolicies/user/{systemUserId}':
    get:
      description: Get a password policy by user ID.
      operationId: Policy_Get
      parameters:
        - format: byte
          in: path
          name: systemUserId
          required: true
          type: string
        - format: byte
          in: query
          name: organizationObjectId
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.password.Response'
      security:
        - x-api-key: []
      summary: Get Password Policy by User
      tags:
        - Password Policy
      x-dynamic-gateway: true
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordpolicies/user/{systemUserId}?organizationObjectId=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordpolicies/user/{systemUserId}"

            querystring = {"organizationObjectId":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordpolicies/user/{systemUserId}?organizationObjectId=SOME_STRING_VALUE' -Method GET -Headers $headers
  '/passwordpolicies/usergroup/{userGroupId}':
    get:
      description: Get a password policy by user group ID.
      operationId: Policy_GetByUserGroup
      parameters:
        - format: byte
          in: path
          name: userGroupId
          required: true
          type: string
        - format: byte
          in: query
          name: organizationObjectId
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.password.Response'
      security:
        - x-api-key: []
      summary: Get Password Policy by User Group
      tags:
        - Password Policy
      x-dynamic-gateway: true
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordpolicies/usergroup/{userGroupId}?organizationObjectId=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordpolicies/usergroup/{userGroupId}"

            querystring = {"organizationObjectId":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordpolicies/usergroup/{userGroupId}?organizationObjectId=SOME_STRING_VALUE' -Method GET -Headers $headers
  '/passwordpolicies/{objectId}':
    delete:
      description: Delete a password policy for an organization.
      operationId: Policy_Delete
      parameters:
        - format: byte
          in: path
          name: objectId
          required: true
          type: string
        - format: byte
          in: query
          name: organizationObjectId
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
      security:
        - x-api-key: []
      summary: Delete Password Policy
      tags:
        - Password Policy
      x-dynamic-gateway: true
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url 'https://console.jumpcloud.com/api/v2/passwordpolicies/{objectId}?organizationObjectId=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordpolicies/{objectId}"

            querystring = {"organizationObjectId":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordpolicies/{objectId}?organizationObjectId=SOME_STRING_VALUE' -Method DELETE -Headers $headers
    get:
      description: Get a password policy by its object ID.
      operationId: Policy_GetByID
      parameters:
        - format: byte
          in: path
          name: objectId
          required: true
          type: string
        - format: byte
          in: query
          name: organizationObjectId
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.password.Response'
      security:
        - x-api-key: []
      summary: Get Password Policy by ID
      tags:
        - Password Policy
      x-dynamic-gateway: true
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/passwordpolicies/{objectId}?organizationObjectId=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordpolicies/{objectId}"

            querystring = {"organizationObjectId":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordpolicies/{objectId}?organizationObjectId=SOME_STRING_VALUE' -Method GET -Headers $headers
    put:
      description: Update a password policy for an organization.
      operationId: Policy_Update
      parameters:
        - format: byte
          in: path
          name: objectId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              groupIds:
                items:
                  format: byte
                  type: string
                type: array
              organizationObjectId:
                format: byte
                type: string
              policy:
                $ref: '#/definitions/jumpcloud.password.PasswordPolicy'
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.password.Response'
      security:
        - x-api-key: []
      summary: Update Password Policy
      tags:
        - Password Policy
      x-dynamic-gateway: true
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/passwordpolicies/{objectId} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"groupIds":["string"],"organizationObjectId":"string","policy":{"allowUnenrolledMFAPasswordReset":true,"allowUsernameSubstring":true,"daysAfterExpirationToSelfRecover":0,"daysBeforeExpirationToForceReset":0,"default":true,"description":"string","disallowCommonlyUsedPasswords":true,"disallowSequentialOrRepetitiveChars":true,"effectiveDate":"2019-08-24T14:15:22Z","enableDaysAfterExpirationToSelfRecover":true,"enableDaysBeforeExpirationToForceReset":true,"enableLockoutTimeInSeconds":true,"enableMaxHistory":true,"enableMaxLoginAttempts":true,"enableMinChangePeriodInDays":true,"enableMinLength":true,"enablePasswordExpirationInDays":true,"enableRecoveryEmail":true,"enableResetLockoutCounter":true,"lockoutTimeInSeconds":0,"maxHistory":0,"maxLoginAttempts":0,"minChangePeriodInDays":0,"minLength":0,"name":"string","needsLowercase":true,"needsNumeric":true,"needsSymbolic":true,"needsUppercase":true,"passwordExpirationInDays":0,"precedence":0,"resetLockoutCounterMinutes":0}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/passwordpolicies/{objectId}"

            payload = {
                "groupIds": ["string"],
                "organizationObjectId": "string",
                "policy": {
                    "allowUnenrolledMFAPasswordReset": True,
                    "allowUsernameSubstring": True,
                    "daysAfterExpirationToSelfRecover": 0,
                    "daysBeforeExpirationToForceReset": 0,
                    "default": True,
                    "description": "string",
                    "disallowCommonlyUsedPasswords": True,
                    "disallowSequentialOrRepetitiveChars": True,
                    "effectiveDate": "2019-08-24T14:15:22Z",
                    "enableDaysAfterExpirationToSelfRecover": True,
                    "enableDaysBeforeExpirationToForceReset": True,
                    "enableLockoutTimeInSeconds": True,
                    "enableMaxHistory": True,
                    "enableMaxLoginAttempts": True,
                    "enableMinChangePeriodInDays": True,
                    "enableMinLength": True,
                    "enablePasswordExpirationInDays": True,
                    "enableRecoveryEmail": True,
                    "enableResetLockoutCounter": True,
                    "lockoutTimeInSeconds": 0,
                    "maxHistory": 0,
                    "maxLoginAttempts": 0,
                    "minChangePeriodInDays": 0,
                    "minLength": 0,
                    "name": "string",
                    "needsLowercase": True,
                    "needsNumeric": True,
                    "needsSymbolic": True,
                    "needsUppercase": True,
                    "passwordExpirationInDays": 0,
                    "precedence": 0,
                    "resetLockoutCounterMinutes": 0
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/passwordpolicies/{objectId}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"groupIds":["string"],"organizationObjectId":"string","policy":{"allowUnenrolledMFAPasswordReset":true,"allowUsernameSubstring":true,"daysAfterExpirationToSelfRecover":0,"daysBeforeExpirationToForceReset":0,"default":true,"description":"string","disallowCommonlyUsedPasswords":true,"disallowSequentialOrRepetitiveChars":true,"effectiveDate":"2019-08-24T14:15:22Z","enableDaysAfterExpirationToSelfRecover":true,"enableDaysBeforeExpirationToForceReset":true,"enableLockoutTimeInSeconds":true,"enableMaxHistory":true,"enableMaxLoginAttempts":true,"enableMinChangePeriodInDays":true,"enableMinLength":true,"enablePasswordExpirationInDays":true,"enableRecoveryEmail":true,"enableResetLockoutCounter":true,"lockoutTimeInSeconds":0,"maxHistory":0,"maxLoginAttempts":0,"minChangePeriodInDays":0,"minLength":0,"name":"string","needsLowercase":true,"needsNumeric":true,"needsSymbolic":true,"needsUppercase":true,"passwordExpirationInDays":0,"precedence":0,"resetLockoutCounterMinutes":0}}'
  '/payNow/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - accounts-page-upgrade
  /plan:
    x-functionalities-tags:
      - accounts-page-upgrade
  /plan/features:
    x-functionalities-tags:
      - accounts-page-upgrade
  /plans:
    x-functionalities-tags:
      - accounts-page-upgrade
  /policies:
    get:
      description: |-
        This endpoint returns all policies.

        ##### Sample Request

        ```
         curl -X GET  https://console.jumpcloud.com/api/v2/policies \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: policies_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Policy'
            type: array
        '500':
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Lists all the Policies
      tags:
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policies?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    post:
      description: |-
        This endpoint allows you to create a policy. Given the amount of configurable parameters required to create a Policy, we suggest you use the JumpCloud Admin Console to create new policies.

        ##### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/policies \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            {Policy_Parameters}
          }'
        ```
      operationId: policies_post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PolicyCreateRequest'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PolicyWithDetails'
      security:
        - x-api-key: []
      summary: Create a new Policy
      tags:
        - Policies
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/policies \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"name":"string","notes":"string","template":{"id":"string"},"values":[{"configFieldID":"string","sensitive":true,"value":"string"}]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies"

            payload = {
                "name": "string",
                "notes": "string",
                "template": {"id": "string"},
                "values": [
                    {
                        "configFieldID": "string",
                        "sensitive": True,
                        "value": "string"
                    }
                ]
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"name":"string","notes":"string","template":{"id":"string"},"values":[{"configFieldID":"string","sensitive":true,"value":"string"}]}'
    x-functionalities-tags:
      - devices-windows-policy-crud
      - devices-darwin-policy-crud
      - devices-linux-policy-crud
      - devices-ios-policy-crud
  '/policies/{id}':
    delete:
      description: |-
        This endpoint allows you to delete a policy.

        #### Sample Request

        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/policies/5a837ecd232e110d4291e6b9 \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: policies_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: No Content
      security:
        - x-api-key: []
      summary: Deletes a Policy
      tags:
        - Policies
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/policies/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns a specific policy.

        ###### Sample Request

        ```
          curl -X GET https://console.jumpcloud.com/api/v2/policies/{PolicyID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: policies_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PolicyWithDetails'
      security:
        - x-api-key: []
      summary: Gets a specific Policy.
      tags:
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/policies/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies/{id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy object.
        in: path
        name: id
        required: true
        type: string
    put:
      description: |-
        This endpoint allows you to update a policy. Given the amount of configurable parameters required to update a Policy, we suggest you use the JumpCloud Admin Console to create new policies.


        ##### Sample Request
        ```
        curl -X PUT https://console.jumpcloud.com/api/v2/policies/59fced45c9118022172547ff \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            {Policy_Parameters}
          }'
        ```
      operationId: policies_put
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PolicyUpdateRequest'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Policy'
      security:
        - x-api-key: []
      summary: Update an existing Policy
      tags:
        - Policies
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/policies/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"name":"string","notes":"string","values":[{"configFieldID":"string","sensitive":true,"value":"string"}]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies/{id}"

            payload = {
                "name": "string",
                "notes": "string",
                "values": [
                    {
                        "configFieldID": "string",
                        "sensitive": True,
                        "value": "string"
                    }
                ]
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"name":"string","notes":"string","values":[{"configFieldID":"string","sensitive":true,"value":"string"}]}'
    x-functionalities-tags:
      - devices-windows-policy-crud
      - devices-darwin-policy-crud
      - devices-linux-policy-crud
      - devices-ios-policy-crud
  '/policies/{policy_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of a Policy.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Policies and Systems.

        #### Sample Request
        ```
        curl -X GET 'https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/associations?targets=system_group \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_policyAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsPolicy:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a Policy
      tags:
        - Graph
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies/{policy_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy.
        in: path
        name: policy_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the _direct_ associations of a Policy.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Policies and Systems.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/associations/ \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "system_group",
            "id": "{Group_ID}"
          }'
        ```
      operationId: graph_policyAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-Policy'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
      security:
        - x-api-key: []
      summary: Manage the associations of a Policy
      tags:
        - Graph
        - Policies
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/policies/{policy_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"system"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies/{policy_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "system"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"system"}'
    x-functionalities-tags:
      - policy-associations
  '/policies/{policy_id}/memberof':
    get:
      description: |-
        This endpoint returns all the Policy Groups a Policy is a member of.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/memberof \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_policyMemberOf
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemContextAuth:Date'
        - $ref: '#/parameters/trait:systemContextAuth:Authorization'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the parent Groups of a Policy
      tags:
        - Graph
        - Policies
      x-scopes:
        - groups
        - groups.readonly
        - groups.self
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/memberof?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies/{policy_id}/memberof"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/memberof?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy.
        in: path
        name: policy_id
        required: true
        type: string
    x-functionalities-tags:
      - policy-members
  '/policies/{policy_id}/policyresults':
    get:
      description: |-
        This endpoint returns all policies results for a specific policy.

        ##### Sample Request

        ```
         curl -X GET https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/policyresults \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: policyresults_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/PolicyResult'
            type: array
      security:
        - x-api-key: []
      summary: Lists all the policy results of a policy.
      tags:
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/policyresults?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies/{policy_id}/policyresults"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/policyresults?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: policy_id
        required: true
        type: string
    x-functionalities-tags:
      - policy-results
  '/policies/{policy_id}/policystatuses':
    get:
      description: |-
        This endpoint returns the latest policy results for a specific policy.

        ##### Sample Request

        ```
         curl -X GET https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/policystatuses \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: policystatuses_policiesList
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/PolicyResult'
            type: array
      security:
        - x-api-key: []
      summary: Lists the latest policy results of a policy.
      tags:
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/policystatuses?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies/{policy_id}/policystatuses"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/policystatuses?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: policy_id
        required: true
        type: string
    x-functionalities-tags:
      - policy-results
  '/policies/{policy_id}/systemgroups':
    get:
      description: |-
        This endpoint will return all Systems Groups bound to a Policy, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Policy to the corresponding System Group; this array represents all grouping and/or associations that would have to be removed to deprovision the System Group from this Policy.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET  https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/systemgroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_policyTraverseSystemGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the System Groups bound to a Policy
      tags:
        - Graph
        - Policies
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/systemgroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies/{policy_id}/systemgroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/systemgroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Command.
        in: path
        name: policy_id
        required: true
        type: string
    x-functionalities-tags:
      - devices-windows-policy-crud
      - devices-darwin-policy-crud
      - devices-linux-policy-crud
      - devices-ios-policy-crud
  '/policies/{policy_id}/systems':
    get:
      description: |-
        This endpoint will return all Systems bound to a Policy, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Policy to the corresponding System; this array represents all grouping and/or associations that would have to be removed to deprovision the System from this Policy.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policies/{Policy_ID}/systems \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_policyTraverseSystem
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Systems bound to a Policy
      tags:
        - Graph
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/systems?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policies/{policy_id}/systems"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policies/{policy_id}/systems?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Command.
        in: path
        name: policy_id
        required: true
        type: string
    x-functionalities-tags:
      - devices-windows-policy-crud
      - devices-darwin-policy-crud
      - devices-linux-policy-crud
      - devices-ios-policy-crud
  /policygroups:
    get:
      description: |-
        This endpoint returns all Policy Groups.

        Available filter fields:
          - `name`
          - `disabled`
          - `type`

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policygroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: groups_policy_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/PolicyGroup'
            type: array
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List all Policy Groups
      tags:
        - Policy Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policygroups?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    post:
      description: |-
        This endpoint allows you to create a new Policy Group.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/policygroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "{Group_Name}"
          }'
        ```
      operationId: groups_policy_post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PolicyGroupData'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PolicyGroup'
      security:
        - x-api-key: []
      summary: Create a new Policy Group
      tags:
        - Policy Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/policygroups \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups"

            payload = {"name": "string"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"name":"string"}'
    x-functionalities-tags:
      - policy-groups
  '/policygroups/{group_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of this Policy Group.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Policy Groups and Policies.


        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policygroups/{GroupID}/associations?targets=system \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_policyGroupAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsPolicyGroup:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a Policy Group.
      tags:
        - Graph
        - Policy Group Associations
        - Policy Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups/{group_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy Group.
        in: path
        name: group_id
        required: true
        type: string
    post:
      description: |-
        This endpoint manages the _direct_ associations of this Policy Group.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Policy Groups and Policies.


        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/policygroups/{GroupID}/associations \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "system",
            "id": "{SystemID}"
          }'
        ```
      operationId: graph_policyGroupAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-PolicyGroup'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a Policy Group
      tags:
        - Graph
        - Policy Group Associations
        - Policy Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/policygroups/{group_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"system"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups/{group_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "system"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"system"}'
    x-functionalities-tags:
      - policy-groups
      - policy-associations
  '/policygroups/{group_id}/memberof':
    parameters:
      - description: ObjectID of the Policy Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - policy-groups
      - policy-members
  '/policygroups/{group_id}/members':
    get:
      description: |-
        This endpoint returns the Policy members of a Policy Group.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policygroups/{GroupID}/members \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_policyGroupMembersList
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the members of a Policy Group
      tags:
        - Graph
        - Policy Group Members & Membership
        - Policy Groups
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/members?limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups/{group_id}/members"

            querystring = {"limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/members?limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy Group.
        in: path
        name: group_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the Policy members of a Policy Group.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/policygroups/{GroupID}/members \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "policy",
            "id": "{Policy_ID}"
          }'
        ```
      operationId: graph_policyGroupMembersPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-PolicyGroup-Member'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the members of a Policy Group
      tags:
        - Graph
        - Policy Group Members & Membership
        - Policy Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/policygroups/{group_id}/members \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"policy"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups/{group_id}/members"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "policy"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/members' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"policy"}'
    x-functionalities-tags:
      - policy-groups
      - policy-members
  '/policygroups/{group_id}/membership':
    get:
      description: |-
        This endpoint returns all Policy members that are a member of this Policy Group.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policygroups/{GroupID}/membership \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_policyGroupMembership
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Policy Group's membership
      tags:
        - Graph
        - Policy Group Members & Membership
        - Policy Groups
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/membership?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups/{group_id}/membership"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/membership?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - policy-groups
      - policy-members
  '/policygroups/{group_id}/systemgroups':
    get:
      description: |-
        This endpoint will return all System Groups bound to a Policy Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Policy Group to the corresponding System Group; this array represents all grouping and/or associations that would have to be removed to deprovision the System Group from this Policy Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policygroups/{GroupID}/systemgroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_policyGroupTraverseSystemGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the System Groups bound to Policy Groups
      tags:
        - Graph
        - Policy Group Associations
        - Policy Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/systemgroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups/{group_id}/systemgroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/systemgroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - policy-groups
  '/policygroups/{group_id}/systems':
    get:
      description: |-
        This endpoint will return all Systems bound to a Policy Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Policy Group to the corresponding System; this array represents all grouping and/or associations that would have to be removed to deprovision the System from this Policy Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policygroups/{GroupID}/systems \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_policyGroupTraverseSystem
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Systems bound to a Policy Group
      tags:
        - Graph
        - Policy Group Associations
        - Policy Groups
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/systems?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups/{group_id}/systems"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups/{group_id}/systems?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - policy-groups
  '/policygroups/{id}':
    delete:
      description: |-
        This endpoint allows you to delete a Policy Group.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/policygroups/{GroupID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: groups_policy_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PolicyGroup'
        '204':
          description: No Content
      security:
        - x-api-key: []
      summary: Delete a Policy Group
      tags:
        - Policy Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/policygroups/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns the details of a Policy Group.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policygroups/{GroupID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: groups_policy_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PolicyGroup'
      security:
        - x-api-key: []
      summary: View an individual Policy Group details
      tags:
        - Policy Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/policygroups/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups/{id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy Group.
        in: path
        name: id
        required: true
        type: string
    put:
      description: |-
        This endpoint allows you to do a full update of the Policy Group.

        #### Sample Request
        ```
        curl -X PUT https://console.jumpcloud.com/api/v2/policygroups/{Group_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "group_update"
          }'
        ```
      operationId: groups_policy_put
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PolicyGroupData'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PolicyGroup'
      security:
        - x-api-key: []
      summary: Update a Policy Group
      tags:
        - Policy Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/policygroups/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policygroups/{id}"

            payload = {"name": "string"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policygroups/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"name":"string"}'
    x-functionalities-tags:
      - policy-groups
  /policyresults:
    get:
      description: |-
        This endpoint returns all policy results for an organization.

        ##### Sample Request

        ```
         curl -X GET https://console.jumpcloud.com/api/v2/policyresults \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: policyresults_org_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/PolicyResult'
            type: array
      security:
        - x-api-key: []
      summary: Lists all of the policy results for an organization.
      tags:
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policyresults?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policyresults"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policyresults?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    x-functionalities-tags:
      - policy-results
  '/policyresults/{id}':
    get:
      description: |-
        This endpoint will return the policy results for a specific policy.

        ##### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policyresults/{Policy_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: policyresults_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PolicyResult'
      security:
        - x-api-key: []
      summary: Get a specific Policy Result.
      tags:
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/policyresults/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policyresults/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policyresults/{id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy Result.
        in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - policy-results
  /policytemplates:
    get:
      description: |-
        This endpoint returns all policy templates.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/policytemplates \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: policytemplates_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/PolicyTemplate'
            type: array
        '500':
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Lists all of the Policy Templates
      tags:
        - Policytemplates
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/policytemplates?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policytemplates"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policytemplates?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    x-functionalities-tags:
      - policy-templates
  '/policytemplates/{id}':
    get:
      description: |-
        This endpoint returns a specific policy template.

        #### Sample Request
        ```
         curl -X GET https://console.jumpcloud.com/api/v2/policytemplates/{Policy_Template_ID}\
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: policytemplates_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PolicyTemplateWithDetails'
      security:
        - x-api-key: []
      summary: Get a specific Policy Template
      tags:
        - Policytemplates
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/policytemplates/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/policytemplates/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/policytemplates/{id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Policy Template.
        in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - policy-templates
  /providers:
    get:
      description: This endpoint returns details about your providers
      operationId: providers_getProviders
      parameters:
        - $ref: '#/parameters/trait:listCount:x-total-count'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Provider'
            type: array
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Providers
      tags:
        - Providers
        - Managed Service Provider
      x-scopes:
        - providers
        - providers.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers' -Method GET -Headers $headers
    x-functionalities-tags:
      - mtp-read-org
  '/providers/{provider_id}':
    get:
      description: This endpoint returns details about a provider
      operationId: providers_getProvider
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Provider'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Provider
      tags:
        - Providers
        - Managed Service Provider
      x-scopes:
        - providers.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/providers/{provider_id}?fields=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}"

            querystring = {"fields":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}?fields=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    put:
      description: This endpoint edit settings about a provider
      operationId: providers_putProvider
      parameters:
        - in: body
          name: body
          schema:
            properties:
              settings:
                $ref: '#/definitions/ProviderSettingsPut'
            type: object
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Provider'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve Provider
      tags:
        - Providers
        - Managed Service Provider
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"settings":{"requireAdminMFA":true}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}"

            payload = {"settings": {"requireAdminMFA": True}}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"settings":{"requireAdminMFA":true}}'
    x-functionalities-tags:
      - mtp-read-org
  '/providers/{provider_id}/administrators':
    get:
      description: This endpoint returns a list of the Administrators associated with the Provider. You must be associated with the provider to use this route.
      operationId: providers_listAdministrators
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:sortIgnoreCase:sortIgnoreCase'
      responses:
        '200':
          description: ''
          examples:
            application/json:
              results:
                - _id: 5c3536e9e0a6840001872782
                  email: joe@example.com
                  enableMultiFactor: false
                  firstname: ''
                  lastname: ''
                  organizationAccessTotal: 10
                  registered: true
                  role: 5c3536e9e0a6840001872788
                  roleName: Help Desk
                - _id: 5c35370ae0a6840001872784
                  email: mildred@example.com
                  enableMultiFactor: false
                  firstname: ''
                  lastname: ''
                  organizationAccessTotal: 1
                  registered: true
                  role: 5c3536e9e0a6840001872799
                  roleName: Administrator
              totalCount: 2
          schema:
            properties:
              results:
                items:
                  $ref: '#/definitions/Administrator'
                type: array
              totalCount:
                type: integer
            type: object
        '401':
          description: ''
          examples:
            application/json:
              message: Unauthorized
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: List Provider Administrators
      tags:
        - Providers
        - Managed Service Provider
      x-scopes:
        - commandrunner.legacy
        - providers
        - providers.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/administrators?fields=&filter=&limit=10&skip=0&sort=&sortIgnoreCase=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/administrators"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":"","sortIgnoreCase":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/administrators?fields=&filter=&limit=10&skip=0&sort=&sortIgnoreCase=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    post:
      description: This endpoint allows you to create a provider administrator. You must be associated with the provider to use this route. You must provide either `role` or `roleName`.
      operationId: providers_postAdmins
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProviderAdminReq'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Administrator'
        '401':
          description: ''
          schema:
            properties:
              message:
                type: string
            type: object
      security:
        - x-api-key: []
      summary: Create a new Provider Administrator
      tags:
        - Providers
        - Managed Service Provider
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/administrators \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"bindNoOrgs":false,"email":"joe@example.com","enableMultiFactor":true,"firstname":"Joe","lastname":"Blough","role":"5c3536e9e0a6840001872799","roleName":"Administrator"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/administrators"

            payload = {
                "bindNoOrgs": False,
                "email": "joe@example.com",
                "enableMultiFactor": True,
                "firstname": "Joe",
                "lastname": "Blough",
                "role": "5c3536e9e0a6840001872799",
                "roleName": "Administrator"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/administrators' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"bindNoOrgs":false,"email":"joe@example.com","enableMultiFactor":true,"firstname":"Joe","lastname":"Blough","role":"5c3536e9e0a6840001872799","roleName":"Administrator"}'
    x-functionalities-tags:
      - mtp-account-overview
  '/providers/{provider_id}/administrators/{id}':
    delete:
      description: This endpoint removes an Administrator associated with the Provider. You must be associated with the provider to use this route.
      operationId: providers_removeAdministrator
      parameters: []
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete Provider Administrator
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/administrators/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/administrators/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/administrators/{id}' -Method DELETE -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-account-overview
  '/providers/{provider_id}/applications':
    get:
      description: The endpoint returns all Provider SSO / SAML Applications
      operationId: applications_listProviderApplications
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:search:search'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/application'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List Provider Applications
      tags:
        - Applications
      x-scopes:
        - applications
        - applications.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/applications?filter=&search=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/applications"

            querystring = {"filter":"","search":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/applications?filter=&search=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - format: byte
        in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - applications
  '/providers/{provider_id}/applications/{id}/associations':
    get:
      description: Get the associations of a Provider SSO Application by ID. Returns organization IDs associated with the provider.
      operationId: providerApplications_getAssociations
      responses:
        '200':
          description: Successfully retrieved application associations
          schema:
            properties:
              results:
                description: Array of organization IDs associated with the provider
                example:
                  - org-id-one
                  - org-id-two
                items:
                  description: Organization ID
                  type: string
                type: array
              totalCount:
                description: Total number of associated organizations
                example: 2
                type: integer
            type: object
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Get Provider Application Associations
      tags:
        - Applications
      x-scopes:
        - applications
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/applications/{id}/associations \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/applications/{id}/associations"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/applications/{id}/associations' -Method GET -Headers $headers
    parameters:
      - format: byte
        in: path
        name: provider_id
        required: true
        type: string
      - format: byte
        in: path
        name: id
        required: true
        type: string
    post:
      description: |-
        Associates a Provider's SSO Application with an organization.

        #### Sample Request
        ```
        curl -X POST 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/applications/{application_id}/associations' \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "Organization",
            "id": "{Org_ID}"
          }'
        ```
      operationId: providerApplications_editAssociations
      parameters:
        - description: ObjectID of the Provider
          format: byte
          in: path
          name: provider_id
          required: true
          type: string
        - description: ObjectID of the Provider Application
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ApplicationAssociationRequest'
      responses:
        '204':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Edit associations of a Provider Application
      tags:
        - Applications
        - Providers
      x-scopes:
        - applications
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/applications/{id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/applications/{id}/associations"

            payload = {
                "id": "string",
                "op": "add"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/applications/{id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add"}'
    x-functionalities-tags:
      - applications
  '/providers/{provider_id}/billing/contract':
    get:
      description: Retrieve contract for a Provider
      operationId: Billing_GetContract
      parameters:
        - format: byte
          in: path
          name: provider_id
          required: true
          type: string
      produces:
        - application/pdf
      responses:
        '200':
          description: OK
          schema:
            format: binary
            type: string
        '401':
          description: ''
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: ''
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: ''
          schema:
            $ref: '#/definitions/Error'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Retrieve contract for a Provider
      tags:
        - Providers
      x-dynamic-gateway: true
      x-scopes:
        - administrators
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/billing/contract \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/billing/contract"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/billing/contract' -Method GET -Headers $headers
  '/providers/{provider_id}/billing/details':
    get:
      description: Retrieve billing details for a Provider
      operationId: Billing_GetDetails
      parameters:
        - format: byte
          in: path
          name: provider_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jumpcloud.msp.GetDetailsResponse'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Retrieve billing details for a Provider
      tags:
        - Providers
      x-dynamic-gateway: true
      x-scopes:
        - billing
        - organizations
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/billing/details \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/billing/details"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/billing/details' -Method GET -Headers $headers
  '/providers/{provider_id}/cases':
    get:
      description: This endpoint returns the cases (Support/Feature requests) for the provider
      operationId: providers_providerListCase
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CasesResponse'
      security:
        - x-api-key: []
      summary: Get all cases (Support/Feature requests) for provider
      tags:
        - Providers
        - Managed Service Provider
      x-scopes:
        - support
        - support.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/cases?skip=0&sort=&limit=10&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/cases"

            querystring = {"skip":"0","sort":"","limit":"10","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/cases?skip=0&sort=&limit=10&filter=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - cases
  '/providers/{provider_id}/commandtemplates':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - command-templates
  '/providers/{provider_id}/commandtemplates/{id}':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - command-templates
  '/providers/{provider_id}/configuredpolicytemplates':
    get:
      description: Retrieves a list of Configured Policy Templates for this provider.
      operationId: policyGroupTemplates_listConfiguredPolicyTemplates
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            properties:
              records:
                $ref: '#/definitions/ConfiguredPolicyTemplate'
              totalCount:
                type: integer
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List a provider's configured policy templates.
      tags:
        - Providers
        - Managed Service Provider
        - Policy Group Templates
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/configuredpolicytemplates?skip=0&sort=&limit=10&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/configuredpolicytemplates"

            querystring = {"skip":"0","sort":"","limit":"10","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/configuredpolicytemplates?skip=0&sort=&limit=10&filter=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - policy-group-templates
  '/providers/{provider_id}/configuredpolicytemplates/{id}':
    get:
      description: Retrieves a Configured Policy Templates for this provider and Id.
      operationId: policyGroupTemplates_getConfiguredPolicyTemplate
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConfiguredPolicyTemplate'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve a configured policy template by id.
      tags:
        - Providers
        - Managed Service Provider
        - Policy Group Templates
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/configuredpolicytemplates/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/configuredpolicytemplates/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/configuredpolicytemplates/{id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - policy-group-templates
  '/providers/{provider_id}/integrations':
    get:
      description: Retrieves a list of integrations this provider has configured. You must be associated to the provider to use this endpoint.
      operationId: providers_retrieveIntegrations
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IntegrationsResponse'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:409'
      security:
        - x-api-key: []
      summary: Retrieve Integrations for Provider
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-account-overview
  '/providers/{provider_id}/integrations/autotask':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    post:
      description: Creates a new Autotask integration for the provider. You must be associated with the provider to use this route. A 422 Unprocessable Entity response means the server failed to validate with Autotask.
      operationId: autotask_createConfiguration
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AutotaskIntegrationReq'
      responses:
        '201':
          description: Created
          schema:
            properties:
              integrationId:
                description: The identifier of the created integration
                type: string
            required:
              - integrationId
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '422':
          description: Unprocessable Entity. The server failed to validate credentials with ConnectWise.
          schema:
            properties: {}
            type: object
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Creates a new Autotask integration for the provider
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"secret":"string","username":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask"

            payload = {
                "secret": "string",
                "username": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"secret":"string","username":"string"}'
    x-functionalities-tags:
      - mtp-create-autotask-integration
  '/providers/{provider_id}/integrations/autotask/alerts/configuration':
    get:
      description: Get all Autotask ticketing alert configurations for a provider.
      operationId: autotask_retrieveAllAlertConfigurations
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AutotaskTicketingAlertConfigurationList'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get all Autotask ticketing alert configurations for a provider
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask/alerts/configuration \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask/alerts/configuration"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask/alerts/configuration' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-autotask-ticketing
  '/providers/{provider_id}/integrations/autotask/alerts/configuration/options':
    get:
      description: Get all Autotask ticketing alert configuration options for a provider.
      operationId: autotask_retrieveAllAlertConfigurationOptions
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AutotaskTicketingAlertConfigurationOptions'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get all Autotask ticketing alert configuration options for a provider
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask/alerts/configuration/options \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask/alerts/configuration/options"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask/alerts/configuration/options' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-autotask-ticketing
  '/providers/{provider_id}/integrations/autotask/alerts/{alert_UUID}/configuration':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: alert_UUID
        required: true
        type: string
    put:
      description: Update an Autotask ticketing alert's configuration
      operationId: autotask_updateAlertConfiguration
      parameters:
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/AutotaskTicketingAlertConfigurationRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AutotaskTicketingAlertConfiguration'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update an Autotask ticketing alert's configuration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask/alerts/{alert_UUID}/configuration \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"destination":"queue","dueDays":0,"priority":{"id":0,"name":"string"},"queue":{"id":0,"name":"string"},"resource":{"id":0,"name":"string","role":{"id":0,"name":"string"}},"shouldCreateTickets":true,"source":{"id":0,"name":"string"},"status":{"id":0,"name":"string"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask/alerts/{alert_UUID}/configuration"

            payload = {
                "destination": "queue",
                "dueDays": 0,
                "priority": {
                    "id": 0,
                    "name": "string"
                },
                "queue": {
                    "id": 0,
                    "name": "string"
                },
                "resource": {
                    "id": 0,
                    "name": "string",
                    "role": {
                        "id": 0,
                        "name": "string"
                    }
                },
                "shouldCreateTickets": True,
                "source": {
                    "id": 0,
                    "name": "string"
                },
                "status": {
                    "id": 0,
                    "name": "string"
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/autotask/alerts/{alert_UUID}/configuration' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"destination":"queue","dueDays":0,"priority":{"id":0,"name":"string"},"queue":{"id":0,"name":"string"},"resource":{"id":0,"name":"string","role":{"id":0,"name":"string"}},"shouldCreateTickets":true,"source":{"id":0,"name":"string"},"status":{"id":0,"name":"string"}}'
    x-functionalities-tags:
      - mtp-create-autotask-ticketing
  '/providers/{provider_id}/integrations/connectwise':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    post:
      description: Creates a new ConnectWise integration for the provider. You must be associated with the provider to use this route. A 422 Unprocessable Entity response means the server failed to validate with ConnectWise.
      operationId: connectwise_createConfiguration
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ConnectwiseIntegrationReq'
      responses:
        '201':
          description: Created
          schema:
            properties:
              integrationId:
                description: The identifier of the created integration
                type: string
            required:
              - integrationId
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '422':
          description: Unprocessable Entity. The server failed to validate credentials with ConnectWise.
          schema:
            properties: {}
            type: object
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Creates a new ConnectWise integration for the provider
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"companyId":"string","privateKey":"string","publicKey":"string","url":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise"

            payload = {
                "companyId": "string",
                "privateKey": "string",
                "publicKey": "string",
                "url": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"companyId":"string","privateKey":"string","publicKey":"string","url":"string"}'
    x-functionalities-tags:
      - mtp-create-connectwise-ticketing
  '/providers/{provider_id}/integrations/connectwise/alerts/configuration':
    get:
      description: Get all ConnectWise ticketing alert configurations for a provider.
      operationId: connectwise_retrieveAllAlertConfigurations
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectWiseTicketingAlertConfigurationList'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get all ConnectWise ticketing alert configurations for a provider
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise/alerts/configuration \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise/alerts/configuration"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise/alerts/configuration' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-connectwise-integration
  '/providers/{provider_id}/integrations/connectwise/alerts/configuration/options':
    get:
      description: Get all ConnectWise ticketing alert configuration options for a provider.
      operationId: connectwise_retrieveAllAlertConfigurationOptions
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectWiseTicketingAlertConfigurationOptions'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get all ConnectWise ticketing alert configuration options for a provider
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise/alerts/configuration/options \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise/alerts/configuration/options"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise/alerts/configuration/options' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-connectwise-integration
  '/providers/{provider_id}/integrations/connectwise/alerts/{alert_UUID}/configuration':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: alert_UUID
        required: true
        type: string
    put:
      description: Update a ConnectWise ticketing alert's configuration.
      operationId: connectwise_updateAlertConfiguration
      parameters:
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/ConnectWiseTicketingAlertConfigurationRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConnectWiseTicketingAlertConfiguration'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update a ConnectWise ticketing alert's configuration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise/alerts/{alert_UUID}/configuration \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"dueDays":0,"priority":{"id":0,"name":"string"},"shouldCreateTickets":true,"source":{"id":0,"name":"string"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise/alerts/{alert_UUID}/configuration"

            payload = {
                "dueDays": 0,
                "priority": {
                    "id": 0,
                    "name": "string"
                },
                "shouldCreateTickets": True,
                "source": {
                    "id": 0,
                    "name": "string"
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/connectwise/alerts/{alert_UUID}/configuration' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"dueDays":0,"priority":{"id":0,"name":"string"},"shouldCreateTickets":true,"source":{"id":0,"name":"string"}}'
    x-functionalities-tags:
      - mtp-create-connectwise-integration
  '/providers/{provider_id}/integrations/syncro':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    post:
      description: Creates a new Syncro integration for the provider. You must be associated with the provider to use this route. A 422 Unprocessable Entity response means the server failed to validate with Syncro.
      operationId: syncro_createConfiguration
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SyncroIntegrationReq'
      responses:
        '201':
          description: Created
          schema:
            properties:
              integrationId:
                description: The identifier of the created integration
                type: string
            required:
              - integrationId
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '422':
          description: Unprocessable Entity. The server failed to validate credentials with Syncro.
          schema:
            properties: {}
            type: object
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Creates a new Syncro integration for the provider
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"apiToken":"string","subdomain":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro"

            payload = {
                "apiToken": "string",
                "subdomain": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"apiToken":"string","subdomain":"string"}'
    x-functionalities-tags:
      - mtp-create-syncro-ticketing
  '/providers/{provider_id}/integrations/syncro/alerts/configuration':
    get:
      description: Get all Syncro ticketing alert configurations for a provider.
      operationId: syncro_retrieveAllAlertConfigurations
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyncroTicketingAlertConfigurationList'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get all Syncro ticketing alert configurations for a provider
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro/alerts/configuration \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro/alerts/configuration"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro/alerts/configuration' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
  '/providers/{provider_id}/integrations/syncro/alerts/configuration/options':
    get:
      description: Get all Syncro ticketing alert configuration options for a provider.
      operationId: syncro_retrieveAllAlertConfigurationOptions
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyncroTicketingAlertConfigurationOptions'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get all Syncro ticketing alert configuration options for a provider
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro/alerts/configuration/options \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro/alerts/configuration/options"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro/alerts/configuration/options' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-syncro-ticketing
  '/providers/{provider_id}/integrations/syncro/alerts/{alert_UUID}/configuration':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: alert_UUID
        required: true
        type: string
    put:
      description: Update a Syncro ticketing alert's configuration
      operationId: syncro_updateAlertConfiguration
      parameters:
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/SyncroTicketingAlertConfigurationRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyncroTicketingAlertConfiguration'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update a Syncro ticketing alert's configuration
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro/alerts/{alert_UUID}/configuration \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"dueDays":0,"priority":"string","problemType":"string","shouldCreateTickets":true,"status":"string","userId":0,"username":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro/alerts/{alert_UUID}/configuration"

            payload = {
                "dueDays": 0,
                "priority": "string",
                "problemType": "string",
                "shouldCreateTickets": True,
                "status": "string",
                "userId": 0,
                "username": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/syncro/alerts/{alert_UUID}/configuration' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"dueDays":0,"priority":"string","problemType":"string","shouldCreateTickets":true,"status":"string","userId":0,"username":"string"}'
    x-functionalities-tags:
      - mtp-create-syncro-ticketing
  '/providers/{provider_id}/integrations/ticketing/alerts':
    get:
      description: Get all ticketing alerts available for a provider's ticketing integration.
      operationId: mtpIntegration_retrieveAlerts
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TicketingIntegrationAlertsResp'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get all ticketing alerts available for a provider's ticketing integration.
      tags:
        - Providers
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/ticketing/alerts \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/ticketing/alerts"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/integrations/ticketing/alerts' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-create-autotask-ticketing
  '/providers/{provider_id}/invoices':
    get:
      description: Retrieves a list of invoices for this provider. You must be associated to the provider to use this endpoint.
      operationId: providers_retrieveInvoices
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProviderInvoiceResponse'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List a provider's invoices.
      tags:
        - Providers
        - Managed Service Provider
      x-scopes:
        - providers
        - billing
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/invoices?skip=0&sort=&limit=10&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/invoices"

            querystring = {"skip":"0","sort":"","limit":"10","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/invoices?skip=0&sort=&limit=10&filter=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-billing-information
  '/providers/{provider_id}/invoices/{ID}':
    get:
      description: Retrieves an invoice for this provider. You must be associated to the provider to use this endpoint.
      operationId: providers_retrieveInvoice
      produces:
        - application/pdf
      responses:
        '200':
          description: OK
          schema:
            type: file
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Download a provider's invoice.
      tags:
        - Providers
        - Managed Service Provider
      x-scopes:
        - providers
        - billing
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/invoices/{ID} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/invoices/{ID}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/invoices/{ID}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: ID
        required: true
        type: string
    x-functionalities-tags:
      - mtp-billing-information
  '/providers/{provider_id}/organizations':
    get:
      description: This endpoint returns a list of the Organizations associated with the Provider. You must be associated with the provider to use this route.
      operationId: providers_listOrganizations
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:sortIgnoreCase:sortIgnoreCase'
      responses:
        '200':
          description: ''
          schema:
            properties:
              results:
                items:
                  $ref: '#/definitions/Organization'
                type: array
              totalCount:
                type: integer
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List Provider Organizations
      tags:
        - Providers
        - Managed Service Provider
      x-functionalities-tags:
        - mtp-read-org
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/organizations?fields=&filter=&limit=10&skip=0&sort=&sortIgnoreCase=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/organizations"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":"","sortIgnoreCase":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/organizations?fields=&filter=&limit=10&skip=0&sort=&sortIgnoreCase=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    post:
      description: This endpoint creates a new organization under the provider
      operationId: providerOrganizations_createOrg
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateOrganization'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Organization'
        '400':
          description: |-
            A 'Bad Request' error will be returned in one of the following scenarios:

            * The request payload contains fields that are not allowed (only 'name' and 'maxSystemUsers' are allowed).
            * The user creating the org specifies 'maxSystemUsers' in the request payload but does not have the organizations.billing scope.
            * The required field 'name' is missing from the request payload or is an empty string or a string that only contains whitespaces.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: A 'Forbidden' error will be returned if organization creation is disabled for the provider.
          schema:
            $ref: '#/definitions/Error'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Create Provider Organization
      tags:
        - Providers
        - Managed Service Provider
      x-functionalities-tags:
        - mtp-create-org
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/organizations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"maxSystemUsers":10,"name":"Acme Inc"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/organizations"

            payload = {
                "maxSystemUsers": 10,
                "name": "Acme Inc"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/organizations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"maxSystemUsers":10,"name":"Acme Inc"}'
  '/providers/{provider_id}/organizations/{id}':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    put:
      description: This endpoint updates a provider's organization
      operationId: providerOrganizations_updateOrg
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Organization'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
      security:
        - x-api-key: []
      summary: Update Provider Organization
      tags:
        - Providers
        - Managed Service Provider
      x-scopes:
        - organizations
        - organizations.billing
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/organizations/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"624d9eae6849cf3b3f93dc56","name":"Acme Inc"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/organizations/{id}"

            payload = {
                "id": "624d9eae6849cf3b3f93dc56",
                "name": "Acme Inc"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/organizations/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"id":"624d9eae6849cf3b3f93dc56","name":"Acme Inc"}'
    x-functionalities-tags:
      - mtp-update-org
  '/providers/{provider_id}/paymentdetails':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-billing-information
  '/providers/{provider_id}/paymentparams':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - mtp-billing-information
  '/providers/{provider_id}/policygrouptemplates':
    get:
      description: Retrieves a list of Policy Group Templates for this provider.
      operationId: policyGroupTemplates_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PolicyGroupTemplates'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List a provider's policy group templates.
      tags:
        - Providers
        - Managed Service Provider
        - Policy Group Templates
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates?fields=&skip=0&sort=&limit=10&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates"

            querystring = {"fields":"","skip":"0","sort":"","limit":"10","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates?fields=&skip=0&sort=&limit=10&filter=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    x-functionalities-tags:
      - policy-group-templates
  '/providers/{provider_id}/policygrouptemplates/{id}':
    delete:
      description: Deletes a Policy Group Template.
      operationId: policyGroupTemplates_delete
      responses:
        '201':
          description: NO_CONTENT
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Deletes policy group template.
      tags:
        - Providers
        - Managed Service Provider
        - Policy Group Templates
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates/{id}' -Method DELETE -Headers $headers
    get:
      description: Retrieves a Policy Group Template for this provider.
      operationId: policyGroupTemplates_get
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PolicyGroupTemplate'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Gets a provider's policy group template.
      tags:
        - Providers
        - Managed Service Provider
        - Policy Group Templates
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates/{id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - policy-group-templates
  '/providers/{provider_id}/policygrouptemplates/{id}/members':
    get:
      description: Retrieves a Policy Group Template's Members.
      operationId: policyGroupTemplates_listMembers
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PolicyGroupTemplateMembers'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Gets the list of members from a policy group template.
      tags:
        - Providers
        - Managed Service Provider
        - Policy Group Templates
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates/{id}/members?skip=0&sort=&limit=10&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates/{id}/members"

            querystring = {"skip":"0","sort":"","limit":"10","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/providers/{provider_id}/policygrouptemplates/{id}/members?skip=0&sort=&limit=10&filter=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - policy-group-templates
  /provision/client/verify:
    x-functionalities-tags:
      - mtp-validate-config
  '/provision/{type}/callback':
    parameters:
      - in: path
        name: type
        required: true
        type: string
    x-functionalities-tags:
      - mtp-auth
  '/provision/{type}/config':
    parameters:
      - in: path
        name: type
        required: true
        type: string
    x-functionalities-tags:
      - mtp-auth
  '/push/configs/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - user-login
  '/pushendpoints/verifications/{verificationId}':
    get:
      description: Endpoint for retrieving a verification push notification status
      operationId: PushVerifications_Get
      parameters:
        - in: path
          name: verificationId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jumpcloud.auth.PushVerification'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Get Push Verification status
      tags:
        - Push Verification
      x-dynamic-gateway: true
      x-scopes:
        - protect
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/pushendpoints/verifications/{verificationId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/pushendpoints/verifications/{verificationId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/pushendpoints/verifications/{verificationId}' -Method GET -Headers $headers
  /queuedcommand/workflows:
    get:
      description: |-
        This endpoint will return all queued Commands for an Organization.

        Each element will contain the workflow ID, the command name, the launch type (e.g. manual, triggered, or scheduled), the target OS, the number of assigned devices, and the number of pending devices that have not yet ran the command.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/queuedcommand/workflows \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: commands_getQueuedCommandsByWorkflow
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:limitMax100:limit'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:search:search'
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/QueuedCommandList'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Fetch the queued Commands for an Organization
      tags:
        - Commands
      x-scopes:
        - commands
        - commands.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/queuedcommand/workflows?limit=10&filter=&skip=0&sort=&search=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/queuedcommand/workflows"

            querystring = {"limit":"10","filter":"","skip":"0","sort":"","search":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/queuedcommand/workflows?limit=10&filter=&skip=0&sort=&search=' -Method GET -Headers $headers
    parameters: []
    x-functionalities-tags:
      - queued-commands
  /queuedcommands:
    x-functionalities-tags:
      - queued-commands
  '/radiusservers/{radiusserver_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of a Radius Server.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Radius Servers and Users.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/radiusservers/{RADIUS_ID}/associations?targets=user_group \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_radiusServerAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsRadiusServer:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a RADIUS  Server
      tags:
        - Graph
        - RADIUS Servers
      x-scopes:
        - radius
        - radius.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Radius Server.
        in: path
        name: radiusserver_id
        required: true
        type: string
    post:
      description: "This endpoint allows you to manage the _direct_ associations of a Radius Server.\n\nA direct association can be a non-homogeneous relationship between 2 different objects, for example Radius Servers and Users.\n\n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/radiusservers/{RADIUS_ID}/associations \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\n\"type\":\"user\", \n\"id\":\"{USER_ID}\", \n\"op\":\"add\"\n\t\n}'\n```"
      operationId: graph_radiusServerAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-RadiusServer'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a RADIUS Server
      tags:
        - Graph
        - RADIUS Servers
      x-scopes:
        - radius
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"user"}'
    x-functionalities-tags:
      - radius-associations
  '/radiusservers/{radiusserver_id}/usergroups':
    get:
      description: |-
        This endpoint will return all Users Groups bound to a RADIUS Server, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this RADIUS server instance to the corresponding User Group; this array represents all grouping and/or associations that would have to be removed to deprovision the User Group from this RADIUS server instance.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/radiusservers/{RADIUS_ID}/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_radiusServerTraverseUserGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Groups bound to a RADIUS  Server
      tags:
        - Graph
        - RADIUS Servers
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/usergroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/usergroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/usergroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Radius Server.
        in: path
        name: radiusserver_id
        required: true
        type: string
    x-functionalities-tags:
      - radius-groups
  '/radiusservers/{radiusserver_id}/users':
    get:
      description: |-
        This endpoint will return all Users bound to a RADIUS Server, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this RADIUS server instance to the corresponding User; this array represents all grouping and/or associations that would have to be removed to deprovision the User from this RADIUS server instance.

        See `/members` and `/associations` endpoints to manage those collections.


        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/ldapservers/{LDAP_ID}/users \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: graph_radiusServerTraverseUser
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Users bound to a RADIUS  Server
      tags:
        - Graph
        - RADIUS Servers
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/users?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/users"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/radiusservers/{radiusserver_id}/users?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Radius Server.
        in: path
        name: radiusserver_id
        required: true
        type: string
    x-functionalities-tags:
      - radius-users
  /recommendations:
    x-functionalities-tags:
      - recommendations
  /reports/custom:
    get:
      description: |-
        list Custom Reports.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/reports/custom \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
        ```
      operationId: Reports_ListReportViews
      parameters:
        - default: '100'
          description: The number of records to return at once. Limited to 100.
          format: int64
          in: query
          name: limit
          required: false
          type: string
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - description: Use space separated sort parameters to sort the collection. Default sort is ascending. Prefix with - to sort descending.
          in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          description: The fields on the items listed to return.
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - collectionFormat: multi
          description: "A filter to apply to the query.\n\n\t**Filter structure**: `<field>:<operator>:<value>`.\n\n\t**field** = Populate with a valid field from an endpoint response.\n\n\t**operator** =  Supported operators are: eq, ne, gt, ge, lt, le, search, in.\n\n\t**value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.\n\n\t**Example** `GET /api/v2/groups?filter=name:eq:Test+Group`\n"
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: Success listing Custom Reports.
          schema:
            $ref: '#/definitions/jumpcloud.insights.ListReportViewsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List Custom Reports
      tags:
        - Reports
      x-dynamic-gateway: true
      x-scopes:
        - reports
        - reports.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/reports/custom?limit=100&skip=0&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/reports/custom"

            querystring = {"limit":"100","skip":"0","sort":"SOME_STRING_VALUE","fields":"SOME_ARRAY_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/reports/custom?limit=100&skip=0&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
    post:
      description: |-
        Create a Custom report.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/reports/custom \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
         -d '{ {Report_Parameters} }' \
        ```
      operationId: Reports_CreateReportView
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.insights.CreateReportViewRequest'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/jumpcloud.insights.ReportView'
        '201':
          description: Success creating a Custom Report.
          schema:
            $ref: '#/definitions/jumpcloud.insights.ReportView'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Create a Custom Report
      tags:
        - Reports
      x-dynamic-gateway: true
      x-scopes:
        - reports
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/reports/custom \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"reportView":{"configuration":{"columnSettings":{"fixed":["string"]}},"description":"string","displayName":"string","id":"string","resources":["string"],"searchRequest":{"aggregations":[{"field":["string"],"function":"function_unknown","name":"string"}],"cacheToken":"string","fields":{"exclude":["string"],"include":["string"]},"filters":[{"field":"string","filters":[{}],"operation":"operation_unknown","query":{},"unit":"string","value":null}],"limit":0,"metadata":{"context":[{"key":"string","value":"string"}],"searchPurpose":"unspecified","source":"string"},"pagination":{"offset":0,"pageSize":0},"requestCache":true,"sort":[{"field":"string","order":"asc"}]},"updatedBySource":"unspecified"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/reports/custom"

            payload = {"reportView": {
                    "configuration": {"columnSettings": {"fixed": ["string"]}},
                    "description": "string",
                    "displayName": "string",
                    "id": "string",
                    "resources": ["string"],
                    "searchRequest": {
                        "aggregations": [
                            {
                                "field": ["string"],
                                "function": "function_unknown",
                                "name": "string"
                            }
                        ],
                        "cacheToken": "string",
                        "fields": {
                            "exclude": ["string"],
                            "include": ["string"]
                        },
                        "filters": [
                            {
                                "field": "string",
                                "filters": [{}],
                                "operation": "operation_unknown",
                                "query": {},
                                "unit": "string",
                                "value": None
                            }
                        ],
                        "limit": 0,
                        "metadata": {
                            "context": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ],
                            "searchPurpose": "unspecified",
                            "source": "string"
                        },
                        "pagination": {
                            "offset": 0,
                            "pageSize": 0
                        },
                        "requestCache": True,
                        "sort": [
                            {
                                "field": "string",
                                "order": "asc"
                            }
                        ]
                    },
                    "updatedBySource": "unspecified"
                }}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/reports/custom' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"reportView":{"configuration":{"columnSettings":{"fixed":["string"]}},"description":"string","displayName":"string","id":"string","resources":["string"],"searchRequest":{"aggregations":[{"field":["string"],"function":"function_unknown","name":"string"}],"cacheToken":"string","fields":{"exclude":["string"],"include":["string"]},"filters":[{"field":"string","filters":[{}],"operation":"operation_unknown","query":{},"unit":"string","value":null}],"limit":0,"metadata":{"context":[{"key":"string","value":"string"}],"searchPurpose":"unspecified","source":"string"},"pagination":{"offset":0,"pageSize":0},"requestCache":true,"sort":[{"field":"string","order":"asc"}]},"updatedBySource":"unspecified"}}'
  '/reports/custom/{objectId}':
    delete:
      description: |-
        Delete an existing Custom Report.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/reports/custom/{report_object_id} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
        ```
      operationId: Reports_DeleteReportView
      parameters:
        - format: byte
          in: path
          name: objectId
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
            type: object
        '204':
          description: Success deleting a Custom Report.
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Delete a Custom report
      tags:
        - Reports
      x-dynamic-gateway: true
      x-scopes:
        - reports
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/reports/custom/{objectId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/reports/custom/{objectId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/reports/custom/{objectId}' -Method DELETE -Headers $headers
    get:
      description: |-
        Get a Custom Report.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/reports/custom/{object_id} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
        ```
      operationId: Reports_GetReportView
      parameters:
        - format: byte
          in: path
          name: objectId
          required: true
          type: string
      responses:
        '200':
          description: Success getting a Custom Report.
          schema:
            $ref: '#/definitions/jumpcloud.insights.ReportViewResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Get a Custom Report
      tags:
        - Reports
      x-dynamic-gateway: true
      x-scopes:
        - reports
        - reports.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/reports/custom/{objectId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/reports/custom/{objectId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/reports/custom/{objectId}' -Method GET -Headers $headers
    put:
      description: |-
        Update an existing Custom Report.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/reports/custom/{object_id} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
         -d '{ {Report_Parameters} }' \
        ```
      operationId: Reports_UpdateReportView
      parameters:
        - format: byte
          in: path
          name: objectId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              reportView:
                $ref: '#/definitions/jumpcloud.insights.ReportView'
            type: object
      responses:
        '200':
          description: Success updating a Custom Report.
          schema:
            $ref: '#/definitions/jumpcloud.insights.ReportView'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Update Custom Report
      tags:
        - Reports
      x-dynamic-gateway: true
      x-scopes:
        - reports
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/reports/custom/{objectId} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"reportView":{"configuration":{"columnSettings":{"fixed":["string"]}},"description":"string","displayName":"string","id":"string","resources":["string"],"searchRequest":{"aggregations":[{"field":["string"],"function":"function_unknown","name":"string"}],"cacheToken":"string","fields":{"exclude":["string"],"include":["string"]},"filters":[{"field":"string","filters":[{}],"operation":"operation_unknown","query":{},"unit":"string","value":null}],"limit":0,"metadata":{"context":[{"key":"string","value":"string"}],"searchPurpose":"unspecified","source":"string"},"pagination":{"offset":0,"pageSize":0},"requestCache":true,"sort":[{"field":"string","order":"asc"}]},"updatedBySource":"unspecified"}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/reports/custom/{objectId}"

            payload = {"reportView": {
                    "configuration": {"columnSettings": {"fixed": ["string"]}},
                    "description": "string",
                    "displayName": "string",
                    "id": "string",
                    "resources": ["string"],
                    "searchRequest": {
                        "aggregations": [
                            {
                                "field": ["string"],
                                "function": "function_unknown",
                                "name": "string"
                            }
                        ],
                        "cacheToken": "string",
                        "fields": {
                            "exclude": ["string"],
                            "include": ["string"]
                        },
                        "filters": [
                            {
                                "field": "string",
                                "filters": [{}],
                                "operation": "operation_unknown",
                                "query": {},
                                "unit": "string",
                                "value": None
                            }
                        ],
                        "limit": 0,
                        "metadata": {
                            "context": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ],
                            "searchPurpose": "unspecified",
                            "source": "string"
                        },
                        "pagination": {
                            "offset": 0,
                            "pageSize": 0
                        },
                        "requestCache": True,
                        "sort": [
                            {
                                "field": "string",
                                "order": "asc"
                            }
                        ]
                    },
                    "updatedBySource": "unspecified"
                }}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/reports/custom/{objectId}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"reportView":{"configuration":{"columnSettings":{"fixed":["string"]}},"description":"string","displayName":"string","id":"string","resources":["string"],"searchRequest":{"aggregations":[{"field":["string"],"function":"function_unknown","name":"string"}],"cacheToken":"string","fields":{"exclude":["string"],"include":["string"]},"filters":[{"field":"string","filters":[{}],"operation":"operation_unknown","query":{},"unit":"string","value":null}],"limit":0,"metadata":{"context":[{"key":"string","value":"string"}],"searchPurpose":"unspecified","source":"string"},"pagination":{"offset":0,"pageSize":0},"requestCache":true,"sort":[{"field":"string","order":"asc"}]},"updatedBySource":"unspecified"}}'
  /reports/export:
    post:
      description: |-
        Export a report.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/reports/export \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json \
         -d '{ {Export_Parameters} }' \
        ```
      operationId: Reports_ExportReport
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.insights.ExportReportRequest'
      responses:
        '200':
          description: Success exporting the report.
          schema:
            $ref: '#/definitions/jumpcloud.insights.ExportReportResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Export a report
      tags:
        - Reports
      x-dynamic-gateway: true
      x-scopes:
        - reports
        - reports.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/reports/export \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"exportType":"csv","notifyByEmail":true,"reportName":"string","searchRequest":{"aggregations":[{"field":["string"],"function":"function_unknown","name":"string"}],"cacheToken":"string","fields":{"exclude":["string"],"include":["string"]},"filters":[{"field":"string","filters":[{}],"operation":"operation_unknown","query":{},"unit":"string","value":null}],"limit":0,"metadata":{"context":[{"key":"string","value":"string"}],"searchPurpose":"unspecified","source":"string"},"pagination":{"offset":0,"pageSize":0},"requestCache":true,"sort":[{"field":"string","order":"asc"}]}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/reports/export"

            payload = {
                "exportType": "csv",
                "notifyByEmail": True,
                "reportName": "string",
                "searchRequest": {
                    "aggregations": [
                        {
                            "field": ["string"],
                            "function": "function_unknown",
                            "name": "string"
                        }
                    ],
                    "cacheToken": "string",
                    "fields": {
                        "exclude": ["string"],
                        "include": ["string"]
                    },
                    "filters": [
                        {
                            "field": "string",
                            "filters": [{}],
                            "operation": "operation_unknown",
                            "query": {},
                            "unit": "string",
                            "value": None
                        }
                    ],
                    "limit": 0,
                    "metadata": {
                        "context": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "searchPurpose": "unspecified",
                        "source": "string"
                    },
                    "pagination": {
                        "offset": 0,
                        "pageSize": 0
                    },
                    "requestCache": True,
                    "sort": [
                        {
                            "field": "string",
                            "order": "asc"
                        }
                    ]
                }
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/reports/export' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"exportType":"csv","notifyByEmail":true,"reportName":"string","searchRequest":{"aggregations":[{"field":["string"],"function":"function_unknown","name":"string"}],"cacheToken":"string","fields":{"exclude":["string"],"include":["string"]},"filters":[{"field":"string","filters":[{}],"operation":"operation_unknown","query":{},"unit":"string","value":null}],"limit":0,"metadata":{"context":[{"key":"string","value":"string"}],"searchPurpose":"unspecified","source":"string"},"pagination":{"offset":0,"pageSize":0},"requestCache":true,"sort":[{"field":"string","order":"asc"}]}}'
  /reports/jumpcloud:
    get:
      description: |-
        List Jumpcloud Reports.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/reports/jumpcloud \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
        ```
      operationId: Reports_ListReportTemplates
      parameters:
        - default: '100'
          description: The number of records to return at once. Limited to 100.
          format: int64
          in: query
          name: limit
          required: false
          type: string
        - default: '0'
          description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - description: Use space separated sort parameters to sort the collection. Default sort is ascending. Prefix with - to sort descending.
          in: query
          name: sort
          required: false
          type: string
        - collectionFormat: multi
          description: The fields on the items listed to return.
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - collectionFormat: multi
          description: "A filter to apply to the query.\n\n\t**Filter structure**: `<field>:<operator>:<value>`.\n\n\t**field** = Populate with a valid field from an endpoint response.\n\n\t**operator** =  Supported operators are: eq, ne, gt, ge, lt, le, search, in.\n\n\t**value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.\n\n\t**Example** `GET /api/v2/groups?filter=name:eq:Test+Group`\n"
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
      responses:
        '200':
          description: Success listing Jumpcloud Reports.
          schema:
            $ref: '#/definitions/jumpcloud.insights.ListReportTemplatesResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List Jumpcloud Reports
      tags:
        - Reports
      x-dynamic-gateway: true
      x-scopes:
        - reports
        - reports.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/reports/jumpcloud?limit=100&skip=0&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/reports/jumpcloud"

            querystring = {"limit":"100","skip":"0","sort":"SOME_STRING_VALUE","fields":"SOME_ARRAY_VALUE","filter":"SOME_ARRAY_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/reports/jumpcloud?limit=100&skip=0&sort=SOME_STRING_VALUE&fields=SOME_ARRAY_VALUE&filter=SOME_ARRAY_VALUE' -Method GET -Headers $headers
  '/reports/jumpcloud/{objectId}':
    get:
      description: |-
        Get a Jumpcloud Report.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/reports/jumpcloud/{object_id} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key:{API_KEY}' \
        ```
      operationId: Reports_GetReportTemplate
      parameters:
        - format: byte
          in: path
          name: objectId
          required: true
          type: string
      responses:
        '200':
          description: Success getting a Jumpcloud Report.
          schema:
            $ref: '#/definitions/jumpcloud.insights.ReportTemplateResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Get a Jumpcloud Report
      tags:
        - Reports
      x-dynamic-gateway: true
      x-scopes:
        - reports
        - reports.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/reports/jumpcloud/{objectId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/reports/jumpcloud/{objectId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/reports/jumpcloud/{objectId}' -Method GET -Headers $headers
  /roles:
    get:
      description: Returns a paginated list of all roles.
      operationId: roles_list
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-provider-id'
        - $ref: '#/parameters/trait:listCount:x-total-count'
      responses:
        '200':
          description: Successfully retrieved roles.
          schema:
            $ref: '#/definitions/RoleList'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List all roles.
      tags:
        - Roles
      x-scopes:
        - roles.readonly
        - roles
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/roles?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/roles"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/roles?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    post:
      description: Creates a new role with the specified permissions.
      operationId: roles_create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RoleCreate'
      responses:
        '201':
          description: Role created successfully.
          schema:
            $ref: '#/definitions/Role'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Create a new role.
      tags:
        - Roles
      x-scopes:
        - roles
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/roles \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"description":"string","name":"string","organizationIds":["string"],"providerId":"string","scopes":["string"]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/roles"

            payload = {
                "description": "string",
                "name": "string",
                "organizationIds": ["string"],
                "providerId": "string",
                "scopes": ["string"]
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/roles' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"description":"string","name":"string","organizationIds":["string"],"providerId":"string","scopes":["string"]}'
  '/roles/{role_id}':
    delete:
      description: Deletes a role with the specified ID.
      operationId: roles_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-provider-id'
      responses:
        '204':
          description: Role deleted successfully
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Delete a role.
      tags:
        - Roles
      x-scopes:
        - roles
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/roles/{role_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/roles/{role_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/roles/{role_id}' -Method DELETE -Headers $headers
    get:
      description: Returns a specific role by its ID.
      operationId: roles_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-provider-id'
      responses:
        '200':
          description: Successfully retrieved the role.
          schema:
            $ref: '#/definitions/Role'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Get a specific role.
      tags:
        - Roles
      x-scopes:
        - roles.readonly
        - roles
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/roles/{role_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/roles/{role_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/roles/{role_id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the role.
        in: path
        name: role_id
        required: true
        type: string
    put:
      description: Updates an existing role with the specified ID.
      operationId: roles_update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RoleUpdate'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-provider-id'
      responses:
        '200':
          description: Successfully retrieved the role.
          schema:
            $ref: '#/definitions/Role'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Update a role.
      tags:
        - Roles
      x-scopes:
        - roles
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/roles/{role_id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"description":"string","name":"string","organizationIds":["string"],"providerId":"string","scopes":["string"]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/roles/{role_id}"

            payload = {
                "description": "string",
                "name": "string",
                "organizationIds": ["string"],
                "providerId": "string",
                "scopes": ["string"]
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/roles/{role_id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"description":"string","name":"string","organizationIds":["string"],"providerId":"string","scopes":["string"]}'
  /scope-groups:
    get:
      description: |-
        Retrieve scope groups for custom role creation.

        **Note**: Scope groups are global resources shared across all organizations.
        No organization context (x-org-id) is required or used.

        By default, returns scope groups with displayToUsers: true. Supports
        JumpCloud standard pagination, sorting, and basic filtering.

        **Response Format**: Returns an object with `totalCount` and `results` array.
        The total count is also provided in the `X-Total-Count` response header.

        #### Core Features
        - **Global Resource**: Same scope groups available to all organizations
        - **Pagination**: Standard `limit` and `skip` parameters
        - **Sorting**: Default sort by `groupName` (ascending), user-configurable
        - **Filtering**: `displayToUsers:eq:true|false` (defaults to true)

        #### Sample Requests
        ```
        # Default - displayToUsers: true, sorted by groupName
        curl https://console.jumpcloud.com/api/v2/scope-groups \
          -H 'accept: application/json' \
          -H 'x-api-key: {API_KEY}'

        # With pagination
        curl 'https://console.jumpcloud.com/api/v2/scope-groups?limit=10&skip=20' \
          -H 'x-api-key: {API_KEY}'

        # Custom sorting
        curl 'https://console.jumpcloud.com/api/v2/scope-groups?sort[0][field]=groupName&sort[0][descending]=true' \
          -H 'x-api-key: {API_KEY}'

        # Get internal scope groups (admin use)
        curl 'https://console.jumpcloud.com/api/v2/scope-groups?filter=displayToUsers:eq:false' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: scopegroups_list
      parameters:
        - $ref: '#/parameters/trait:listCount:x-total-count'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            properties:
              results:
                items:
                  $ref: '#/definitions/ScopeGroup'
                type: array
              totalCount:
                description: Total count of scope groups matching the filter criteria
                type: integer
            required:
              - totalCount
              - results
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List Scope Groups
      tags:
        - Scope Groups
      x-scopes:
        - roles
        - roles.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/scope-groups?limit=10&skip=0&filter=&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/scope-groups"

            querystring = {"limit":"10","skip":"0","filter":"","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/scope-groups?limit=10&skip=0&filter=&sort=' -Method GET -Headers $headers
  /service-accounts:
    get:
      description: 'Retrieves a list of service accounts with support for filtering, sorting, and pagination. Auth config is not included in the service accounts'
      operationId: ServiceAccounts_ListServiceAccounts
      parameters:
        - description: pagination - page size (maximum number of results to return)
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: pagination - page offset (number of results to skip)
          format: int32
          in: query
          name: skip
          required: false
          type: integer
        - collectionFormat: multi
          description: search field (currently only supports "name")
          in: query
          items:
            type: string
          name: search.fields
          required: false
          type: array
        - description: 'search term/value (e.g., "John")'
          in: query
          name: search.searchTerm
          required: false
          type: string
        - description: |-
            sort configuration (allowed values: "name", "-name", "expiresAt", "-expiresAt")
            "-" prefix indicates descending order
            if search config is provided, it will override the sort field to "name" and sort order to ascending
          in: query
          name: sort
          required: false
          type: string
        - description: Organization identifier that can be obtained from console settings.
          in: header
          name: x-org-id
          required: false
          type: string
      responses:
        '200':
          description: Service accounts list successfully retrieved.
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.ListServiceAccountsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Fetch all saved service accounts
      tags:
        - Service Accounts
      x-dynamic-gateway: true
      x-scopes:
        - serviceaccounts
        - serviceaccounts.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/service-accounts?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&search.fields=SOME_ARRAY_VALUE&search.searchTerm=SOME_STRING_VALUE&sort=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --header 'x-org-id: SOME_STRING_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/service-accounts"

            querystring = {"limit":"SOME_INTEGER_VALUE","skip":"SOME_INTEGER_VALUE","search.fields":"SOME_ARRAY_VALUE","search.searchTerm":"SOME_STRING_VALUE","sort":"SOME_STRING_VALUE"}

            headers = {
                "x-org-id": "SOME_STRING_VALUE",
                "x-api-key": "REPLACE_KEY_VALUE"
            }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-org-id", "SOME_STRING_VALUE")
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/service-accounts?limit=SOME_INTEGER_VALUE&skip=SOME_INTEGER_VALUE&search.fields=SOME_ARRAY_VALUE&search.searchTerm=SOME_STRING_VALUE&sort=SOME_STRING_VALUE' -Method GET -Headers $headers
    post:
      description: Creates a new service account.
      operationId: ServiceAccounts_CreateServiceAccount
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.CreateServiceAccountRequest'
        - description: Organization identifier that can be obtained from console settings.
          in: header
          name: x-org-id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.CreateServiceAccountResponse'
        '201':
          description: Service account successfully created.
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.CreateServiceAccountResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Create a new service account
      tags:
        - Service Accounts
      x-dynamic-gateway: true
      x-scopes:
        - serviceaccounts
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/service-accounts \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --header 'x-org-id: SOME_STRING_VALUE' \
              --data '{"authConfig":{"authType":"AUTH_TYPE_UNSPECIFIED","clientSecretConfig":{"lifetime":"string"}},"name":"string","roleId":"string","roleName":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/service-accounts"

            payload = {
                "authConfig": {
                    "authType": "AUTH_TYPE_UNSPECIFIED",
                    "clientSecretConfig": {"lifetime": "string"}
                },
                "name": "string",
                "roleId": "string",
                "roleName": "string"
            }
            headers = {
                "x-org-id": "SOME_STRING_VALUE",
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-org-id", "SOME_STRING_VALUE")
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/service-accounts' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"authConfig":{"authType":"AUTH_TYPE_UNSPECIFIED","clientSecretConfig":{"lifetime":"string"}},"name":"string","roleId":"string","roleName":"string"}'
  '/service-accounts/{service_account_id}':
    delete:
      operationId: ServiceAccounts_DeleteServiceAccount
      parameters:
        - description: the service account id
          format: byte
          in: path
          name: service_account_id
          required: true
          type: string
        - description: Organization identifier that can be obtained from console settings.
          in: header
          name: x-org-id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.DeleteServiceAccountResponse'
        '202':
          description: Delete service account request accepted.
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.DeleteServiceAccountResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Delete a service account
      tags:
        - Service Accounts
      x-dynamic-gateway: true
      x-scopes:
        - serviceaccounts
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --header 'x-org-id: SOME_STRING_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id}"

            headers = {
                "x-org-id": "SOME_STRING_VALUE",
                "x-api-key": "REPLACE_KEY_VALUE"
            }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-org-id", "SOME_STRING_VALUE")
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id}' -Method DELETE -Headers $headers
    get:
      description: Get service account
      operationId: ServiceAccounts_GetServiceAccount
      parameters:
        - description: the account's id
          format: byte
          in: path
          name: service_account_id
          required: true
          type: string
        - description: Organization identifier that can be obtained from console settings.
          in: header
          name: x-org-id
          required: false
          type: string
      responses:
        '200':
          description: Service account successfully retrieved.
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.ServiceAccount'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Fetch a service account by ID
      tags:
        - Service Accounts
      x-dynamic-gateway: true
      x-scopes:
        - serviceaccounts
        - serviceaccounts.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --header 'x-org-id: SOME_STRING_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id}"

            headers = {
                "x-org-id": "SOME_STRING_VALUE",
                "x-api-key": "REPLACE_KEY_VALUE"
            }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-org-id", "SOME_STRING_VALUE")
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id}' -Method GET -Headers $headers
  '/service-accounts/{service_account_id}/auth-config':
    post:
      description: Creates a new authentication configuration for a service account.
      operationId: ServiceAccounts_CreateServiceAccountAuthConfig
      parameters:
        - description: the service account id for which the auth config is being created (path parameter)
          format: byte
          in: path
          name: service_account_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              authConfig:
                $ref: '#/definitions/jumpcloud.service_accounts.AuthConfigParameter'
            type: object
        - description: Organization identifier that can be obtained from console settings.
          in: header
          name: x-org-id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.CreateAuthConfigResponse'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.CreateAuthConfigResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Create a new service account authentication config
      tags:
        - Service Accounts
      x-dynamic-gateway: true
      x-scopes:
        - serviceaccounts
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id}/auth-config \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --header 'x-org-id: SOME_STRING_VALUE' \
              --data '{"authConfig":{"authType":"AUTH_TYPE_UNSPECIFIED","clientSecretConfig":{"lifetime":"string"}}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id}/auth-config"

            payload = {"authConfig": {
                    "authType": "AUTH_TYPE_UNSPECIFIED",
                    "clientSecretConfig": {"lifetime": "string"}
                }}
            headers = {
                "x-org-id": "SOME_STRING_VALUE",
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-org-id", "SOME_STRING_VALUE")
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id}/auth-config' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"authConfig":{"authType":"AUTH_TYPE_UNSPECIFIED","clientSecretConfig":{"lifetime":"string"}}}'
  '/service-accounts/{service_account_id}/auth-config/{auth_config_id}':
    delete:
      description: Deletes a specific authentication configuration for a service account.
      operationId: ServiceAccounts_DeleteServiceAccountAuthConfig
      parameters:
        - format: byte
          in: path
          name: service_account_id
          required: true
          type: string
        - format: byte
          in: path
          name: auth_config_id
          required: true
          type: string
        - description: Organization identifier that can be obtained from console settings.
          in: header
          name: x-org-id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.DeleteAuthConfigResponse'
        '202':
          description: Delete auth config for service account request accepted.
          schema:
            $ref: '#/definitions/jumpcloud.service_accounts.DeleteAuthConfigResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Delete a specific auth config for a service account
      tags:
        - Service Accounts
      x-dynamic-gateway: true
      x-scopes:
        - serviceaccounts
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id}/auth-config/{auth_config_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --header 'x-org-id: SOME_STRING_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id}/auth-config/{auth_config_id}"

            headers = {
                "x-org-id": "SOME_STRING_VALUE",
                "x-api-key": "REPLACE_KEY_VALUE"
            }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-org-id", "SOME_STRING_VALUE")
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/service-accounts/{service_account_id}/auth-config/{auth_config_id}' -Method DELETE -Headers $headers
  /software/catalog:
    x-functionalities-tags:
      - devices-windows-software-app-crud
      - devices-darwin-software-app-crud
  /software/catalog/apps:
    get:
      description: "List the current App Catalog Items.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/software/catalog/apps \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:{API_KEY}'\n```\n\n\tNote: The list results can be filtered by `name`, `operating_system`, and `installer_type` while sorting is only allowed on `name`.\tNote: The `limit` maximum is 100 App Catalog Items in a single response."
      operationId: AppCatalog_ListAppCatalogItems
      parameters:
        - collectionFormat: multi
          description: "A filter to apply to the query.\n\n\t**Filter structure**: `<field>:<operator>:<value>`.\n\n\t**field** = Populate with a valid field from an endpoint response.\n\n\t**operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.\n\n\t**value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.\n\n\t**Example** `GET /api/v2/groups?filter=name:eq:Test+Group`\n"
          in: query
          items:
            type: string
          name: filter
          required: false
          type: array
        - collectionFormat: multi
          description: The fields on the items listed to return.
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
        - description: The offset into the records to return.
          format: int64
          in: query
          name: skip
          required: false
          type: string
        - collectionFormat: multi
          description: |-
            An optional comma separated field names used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          in: query
          items:
            type: string
          name: sort
          required: false
          type: array
        - description: |-
            The number of resources to return at once.
            If the number of resources returned is less than `limit` there are no more resources to fetch.
            If the number of resources returned is equal to limit there may be more resources to fetch. Increment `skip` by `limit` to get the next set of resources.
          format: int64
          in: query
          name: limit
          required: false
          type: string
      responses:
        '200':
          description: Success listing App Catalog Items.
          schema:
            items:
              $ref: '#/definitions/devices.AppCatalogItem'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List the App Catalog
      tags:
        - App Catalog
      x-dynamic-gateway: true
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/software/catalog/apps?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=SOME_STRING_VALUE&sort=SOME_ARRAY_VALUE&limit=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/software/catalog/apps"

            querystring = {"filter":"SOME_ARRAY_VALUE","fields":"SOME_ARRAY_VALUE","skip":"SOME_STRING_VALUE","sort":"SOME_ARRAY_VALUE","limit":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/software/catalog/apps?filter=SOME_ARRAY_VALUE&fields=SOME_ARRAY_VALUE&skip=SOME_STRING_VALUE&sort=SOME_ARRAY_VALUE&limit=SOME_STRING_VALUE' -Method GET -Headers $headers
  '/software/catalog/apps/{objectId}':
    get:
      description: |
        Get an App Catalog Item.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/software/catalog/apps/{object_id} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key:{API_KEY}'
        ```
      operationId: AppCatalog_GetAppCatalogItem
      parameters:
        - format: byte
          in: path
          name: objectId
          required: true
          type: string
      responses:
        '200':
          description: Success getting App Catalog Item.
          schema:
            $ref: '#/definitions/devices.AppCatalogItem'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: Get an App Catalog Item
      tags:
        - App Catalog
      x-dynamic-gateway: true
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/software/catalog/apps/{objectId} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/software/catalog/apps/{objectId}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/software/catalog/apps/{objectId}' -Method GET -Headers $headers
  /softwareapps:
    get:
      description: |-
        This endpoint allows you to get all configured Software Applications that will be managed by JumpCloud on associated JumpCloud systems.
        The optional isConfigEnabled and appConfiguration apple_vpp attributes are not included in the response.

        #### Sample Request
        ```
        $ curl -X GET https://console.jumpcloud.com/api/v2/softwareapps \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: {API_KEY}' \
        ```
      operationId: softwareApps_list
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/software-app'
            type: array
      security:
        - x-api-key: []
      summary: Get all configured Software Applications.
      tags:
        - Software Apps
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/softwareapps?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    post:
      description: |-
        This endpoint allows you to create a Software Application that will be managed by JumpCloud on associated JumpCloud systems.
        The optional isConfigEnabled and appConfiguration apple_vpp attributes are not included in the response.

        #### Sample Request
        ```
        $ curl -X POST https://console.jumpcloud.com/api/v2/softwareapps \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: {API_KEY}' \
        -d '{
          "displayName": "Adobe Reader",
          "settings": [{"packageId": "adobereader"}]
        }'
        ```
      operationId: softwareApps_post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/software-app'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/software-app-create'
      security:
        - x-api-key: []
      summary: Create a Software Application that will be managed by JumpCloud.
      tags:
        - Software Apps
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/softwareapps \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"createdAt":"2019-08-24T14:15:22Z","displayName":"string","id":"string","settings":[{"allowUpdateDelay":false,"appCatalogInstallableObjectId":"string","appFileName":"string","appleVpp":{"appConfiguration":"string","assignedLicenses":0,"availableLicenses":0,"details":{},"isConfigEnabled":true,"supportedDeviceFamilies":["IPAD"],"totalLicenses":0},"architectures":["string"],"assetKind":"string","assetSha256Size":0,"assetSha256Strings":["string"],"autoUpdate":false,"bundleId":"string","commandLineArguments":"string","createdAt":"2019-08-24T14:15:22Z","description":"string","desiredState":"string","downloadUrl":"string","enterpriseObjectId":"string","format":"string","googleAndroid":{"androidFeatures":["string"],"appPricing":"string","appVersion":"string","author":"string","autoUpdateMode":"AUTO_UPDATE_DEFAULT","category":"string","contentRating":"string","displayMode":"string","distributionChannel":"string","fullDescription":"string","iconUrl":"string","installType":"AVAILABLE","managedConfigurationTemplateId":"string","managedProperties":true,"minSdkVersion":0,"name":"string","permissionGrants":[{"id":"string","policy":"PROMPT"}],"runtimePermission":"PROMPT","startUrl":"string","type":"APP_TYPE_UNSPECIFIED","updateTime":"string","versionCode":0},"iconUrl":"string","location":"string","locationObjectId":"string","microsoftStore":{"doNotUpdate":true,"nonRemovable":true,"packageFamilyName":"string"},"packageId":"string","packageKind":"string","packageManager":"string","packageSubtitle":"string","packageVersion":"string","packageVersionUpdatedAt":"2019-08-24T14:15:22Z","scope":"string","shortVersion":"string","storedPackage":{"objectId":"string","versions":[{"metadata":{},"name":"string","rejectedReason":"string","sha256sum":"string","size":0,"status":"string","version":0}]},"storedPackageObjectId":"string","teamId":"string","updateTool":"string","updateToolArguments":"string","updatedAt":"2019-08-24T14:15:22Z","versionlessDownloadUrl":true}],"updatedAt":"2019-08-24T14:15:22Z"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps"

            payload = {
                "createdAt": "2019-08-24T14:15:22Z",
                "displayName": "string",
                "id": "string",
                "settings": [
                    {
                        "allowUpdateDelay": False,
                        "appCatalogInstallableObjectId": "string",
                        "appFileName": "string",
                        "appleVpp": {
                            "appConfiguration": "string",
                            "assignedLicenses": 0,
                            "availableLicenses": 0,
                            "details": {},
                            "isConfigEnabled": True,
                            "supportedDeviceFamilies": ["IPAD"],
                            "totalLicenses": 0
                        },
                        "architectures": ["string"],
                        "assetKind": "string",
                        "assetSha256Size": 0,
                        "assetSha256Strings": ["string"],
                        "autoUpdate": False,
                        "bundleId": "string",
                        "commandLineArguments": "string",
                        "createdAt": "2019-08-24T14:15:22Z",
                        "description": "string",
                        "desiredState": "string",
                        "downloadUrl": "string",
                        "enterpriseObjectId": "string",
                        "format": "string",
                        "googleAndroid": {
                            "androidFeatures": ["string"],
                            "appPricing": "string",
                            "appVersion": "string",
                            "author": "string",
                            "autoUpdateMode": "AUTO_UPDATE_DEFAULT",
                            "category": "string",
                            "contentRating": "string",
                            "displayMode": "string",
                            "distributionChannel": "string",
                            "fullDescription": "string",
                            "iconUrl": "string",
                            "installType": "AVAILABLE",
                            "managedConfigurationTemplateId": "string",
                            "managedProperties": True,
                            "minSdkVersion": 0,
                            "name": "string",
                            "permissionGrants": [
                                {
                                    "id": "string",
                                    "policy": "PROMPT"
                                }
                            ],
                            "runtimePermission": "PROMPT",
                            "startUrl": "string",
                            "type": "APP_TYPE_UNSPECIFIED",
                            "updateTime": "string",
                            "versionCode": 0
                        },
                        "iconUrl": "string",
                        "location": "string",
                        "locationObjectId": "string",
                        "microsoftStore": {
                            "doNotUpdate": True,
                            "nonRemovable": True,
                            "packageFamilyName": "string"
                        },
                        "packageId": "string",
                        "packageKind": "string",
                        "packageManager": "string",
                        "packageSubtitle": "string",
                        "packageVersion": "string",
                        "packageVersionUpdatedAt": "2019-08-24T14:15:22Z",
                        "scope": "string",
                        "shortVersion": "string",
                        "storedPackage": {
                            "objectId": "string",
                            "versions": [
                                {
                                    "metadata": {},
                                    "name": "string",
                                    "rejectedReason": "string",
                                    "sha256sum": "string",
                                    "size": 0,
                                    "status": "string",
                                    "version": 0
                                }
                            ]
                        },
                        "storedPackageObjectId": "string",
                        "teamId": "string",
                        "updateTool": "string",
                        "updateToolArguments": "string",
                        "updatedAt": "2019-08-24T14:15:22Z",
                        "versionlessDownloadUrl": True
                    }
                ],
                "updatedAt": "2019-08-24T14:15:22Z"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"createdAt":"2019-08-24T14:15:22Z","displayName":"string","id":"string","settings":[{"allowUpdateDelay":false,"appCatalogInstallableObjectId":"string","appFileName":"string","appleVpp":{"appConfiguration":"string","assignedLicenses":0,"availableLicenses":0,"details":{},"isConfigEnabled":true,"supportedDeviceFamilies":["IPAD"],"totalLicenses":0},"architectures":["string"],"assetKind":"string","assetSha256Size":0,"assetSha256Strings":["string"],"autoUpdate":false,"bundleId":"string","commandLineArguments":"string","createdAt":"2019-08-24T14:15:22Z","description":"string","desiredState":"string","downloadUrl":"string","enterpriseObjectId":"string","format":"string","googleAndroid":{"androidFeatures":["string"],"appPricing":"string","appVersion":"string","author":"string","autoUpdateMode":"AUTO_UPDATE_DEFAULT","category":"string","contentRating":"string","displayMode":"string","distributionChannel":"string","fullDescription":"string","iconUrl":"string","installType":"AVAILABLE","managedConfigurationTemplateId":"string","managedProperties":true,"minSdkVersion":0,"name":"string","permissionGrants":[{"id":"string","policy":"PROMPT"}],"runtimePermission":"PROMPT","startUrl":"string","type":"APP_TYPE_UNSPECIFIED","updateTime":"string","versionCode":0},"iconUrl":"string","location":"string","locationObjectId":"string","microsoftStore":{"doNotUpdate":true,"nonRemovable":true,"packageFamilyName":"string"},"packageId":"string","packageKind":"string","packageManager":"string","packageSubtitle":"string","packageVersion":"string","packageVersionUpdatedAt":"2019-08-24T14:15:22Z","scope":"string","shortVersion":"string","storedPackage":{"objectId":"string","versions":[{"metadata":{},"name":"string","rejectedReason":"string","sha256sum":"string","size":0,"status":"string","version":0}]},"storedPackageObjectId":"string","teamId":"string","updateTool":"string","updateToolArguments":"string","updatedAt":"2019-08-24T14:15:22Z","versionlessDownloadUrl":true}],"updatedAt":"2019-08-24T14:15:22Z"}'
    x-functionalities-tags:
      - devices-windows-software-app-crud
      - devices-darwin-software-app-crud
  /softwareapps/import/jobs:
    x-functionalities-tags:
      - devices-windows-software-app-crud
      - devices-darwin-software-app-crud
  '/softwareapps/{id}':
    delete:
      description: |-
        Removes a Software Application configuration.

        Warning: This is a destructive operation and will unmanage the application on all affected systems.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/softwareapps/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: softwareApps_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete a configured Software Application
      tags:
        - Software Apps
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/softwareapps/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        Retrieves a Software Application.
        The optional isConfigEnabled and appConfiguration apple_vpp attributes are populated in this response.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/softwareapps/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: softwareApps_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software-app'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Retrieve a configured Software Application.
      tags:
        - Software Apps
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/softwareapps/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps/{id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: id
        required: true
        type: string
    put:
      description: |-
        This endpoint updates a specific Software Application configuration for the organization.
        displayName can be changed alone if no settings are provided.
        If a setting is provided, it should include all its information since this endpoint will update all the settings' fields.
        The optional isConfigEnabled and appConfiguration apple_vpp attributes are not included in the response.

        #### Sample Request - displayName only
        ```
         curl -X PUT https://console.jumpcloud.com/api/v2/softwareapps/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "displayName": "My Software App"
          }'
        ```

        #### Sample Request - all attributes
        ```
         curl -X PUT https://console.jumpcloud.com/api/v2/softwareapps/{id} \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "displayName": "My Software App",
            "settings": [
              {
                "packageId": "123456",
                "autoUpdate": false,
                "allowUpdateDelay": false,
                "packageManager": "APPLE_VPP",
                "locationObjectId": "123456789012123456789012",
                "location": "123456",
                "desiredState": "Install",
                "appleVpp": {
                  "appConfiguration": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"><plist version=\"1.0\"><dict><key>MyKey</key><string>My String</string></dict></plist>",
                  "assignedLicenses": 20,
                  "availableLicenses": 10,
                  "details": {},
                  "isConfigEnabled": true,
                  "supportedDeviceFamilies": [
                    "IPAD",
                    "MAC"
                  ],
                  "totalLicenses": 30
                },
                "packageSubtitle": "My package subtitle",
                "packageVersion": "1.2.3",
                "packageKind": "software-package",
                "assetKind": "software",
                "assetSha256Size": 256,
                "assetSha256Strings": [
                  "a123b123c123d123"
                ],
                "description": "My app description"
              }
            ]
          }'
        ```
      operationId: softwareApps_update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/software-app'
          x-examples:
            all-attributes:
              displayName: My Software App
              settings:
                - allowUpdateDelay: false
                  appleVpp:
                    appConfiguration: '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"><plist version="1.0"><dict><key>MyKey</key><string>My String</string></dict></plist>'
                    assignedLicenses: 20
                    availableLicenses: 10
                    details: {}
                    isConfigEnabled: true
                    supportedDeviceFamilies:
                      - IPAD
                      - MAC
                    totalLicenses: 30
                  assetKind: software
                  assetSha256Size: 256
                  assetSha256Strings:
                    - a123b123c123d123
                  autoUpdate: false
                  description: My app description
                  desiredState: Install
                  location: '123456'
                  locationObjectId: '123456789012123456789012'
                  packageId: '123456'
                  packageKind: software-package
                  packageManager: APPLE_VPP
                  packageSubtitle: My package subtitle
                  packageVersion: 1.2.3
            displayName-only:
              displayName: My Software App
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          examples: {}
          schema:
            $ref: '#/definitions/software-app'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update a Software Application Configuration.
      tags:
        - Software Apps
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/softwareapps/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"createdAt":"2019-08-24T14:15:22Z","displayName":"string","id":"string","settings":[{"allowUpdateDelay":false,"appCatalogInstallableObjectId":"string","appFileName":"string","appleVpp":{"appConfiguration":"string","assignedLicenses":0,"availableLicenses":0,"details":{},"isConfigEnabled":true,"supportedDeviceFamilies":["IPAD"],"totalLicenses":0},"architectures":["string"],"assetKind":"string","assetSha256Size":0,"assetSha256Strings":["string"],"autoUpdate":false,"bundleId":"string","commandLineArguments":"string","createdAt":"2019-08-24T14:15:22Z","description":"string","desiredState":"string","downloadUrl":"string","enterpriseObjectId":"string","format":"string","googleAndroid":{"androidFeatures":["string"],"appPricing":"string","appVersion":"string","author":"string","autoUpdateMode":"AUTO_UPDATE_DEFAULT","category":"string","contentRating":"string","displayMode":"string","distributionChannel":"string","fullDescription":"string","iconUrl":"string","installType":"AVAILABLE","managedConfigurationTemplateId":"string","managedProperties":true,"minSdkVersion":0,"name":"string","permissionGrants":[{"id":"string","policy":"PROMPT"}],"runtimePermission":"PROMPT","startUrl":"string","type":"APP_TYPE_UNSPECIFIED","updateTime":"string","versionCode":0},"iconUrl":"string","location":"string","locationObjectId":"string","microsoftStore":{"doNotUpdate":true,"nonRemovable":true,"packageFamilyName":"string"},"packageId":"string","packageKind":"string","packageManager":"string","packageSubtitle":"string","packageVersion":"string","packageVersionUpdatedAt":"2019-08-24T14:15:22Z","scope":"string","shortVersion":"string","storedPackage":{"objectId":"string","versions":[{"metadata":{},"name":"string","rejectedReason":"string","sha256sum":"string","size":0,"status":"string","version":0}]},"storedPackageObjectId":"string","teamId":"string","updateTool":"string","updateToolArguments":"string","updatedAt":"2019-08-24T14:15:22Z","versionlessDownloadUrl":true}],"updatedAt":"2019-08-24T14:15:22Z"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps/{id}"

            payload = {
                "createdAt": "2019-08-24T14:15:22Z",
                "displayName": "string",
                "id": "string",
                "settings": [
                    {
                        "allowUpdateDelay": False,
                        "appCatalogInstallableObjectId": "string",
                        "appFileName": "string",
                        "appleVpp": {
                            "appConfiguration": "string",
                            "assignedLicenses": 0,
                            "availableLicenses": 0,
                            "details": {},
                            "isConfigEnabled": True,
                            "supportedDeviceFamilies": ["IPAD"],
                            "totalLicenses": 0
                        },
                        "architectures": ["string"],
                        "assetKind": "string",
                        "assetSha256Size": 0,
                        "assetSha256Strings": ["string"],
                        "autoUpdate": False,
                        "bundleId": "string",
                        "commandLineArguments": "string",
                        "createdAt": "2019-08-24T14:15:22Z",
                        "description": "string",
                        "desiredState": "string",
                        "downloadUrl": "string",
                        "enterpriseObjectId": "string",
                        "format": "string",
                        "googleAndroid": {
                            "androidFeatures": ["string"],
                            "appPricing": "string",
                            "appVersion": "string",
                            "author": "string",
                            "autoUpdateMode": "AUTO_UPDATE_DEFAULT",
                            "category": "string",
                            "contentRating": "string",
                            "displayMode": "string",
                            "distributionChannel": "string",
                            "fullDescription": "string",
                            "iconUrl": "string",
                            "installType": "AVAILABLE",
                            "managedConfigurationTemplateId": "string",
                            "managedProperties": True,
                            "minSdkVersion": 0,
                            "name": "string",
                            "permissionGrants": [
                                {
                                    "id": "string",
                                    "policy": "PROMPT"
                                }
                            ],
                            "runtimePermission": "PROMPT",
                            "startUrl": "string",
                            "type": "APP_TYPE_UNSPECIFIED",
                            "updateTime": "string",
                            "versionCode": 0
                        },
                        "iconUrl": "string",
                        "location": "string",
                        "locationObjectId": "string",
                        "microsoftStore": {
                            "doNotUpdate": True,
                            "nonRemovable": True,
                            "packageFamilyName": "string"
                        },
                        "packageId": "string",
                        "packageKind": "string",
                        "packageManager": "string",
                        "packageSubtitle": "string",
                        "packageVersion": "string",
                        "packageVersionUpdatedAt": "2019-08-24T14:15:22Z",
                        "scope": "string",
                        "shortVersion": "string",
                        "storedPackage": {
                            "objectId": "string",
                            "versions": [
                                {
                                    "metadata": {},
                                    "name": "string",
                                    "rejectedReason": "string",
                                    "sha256sum": "string",
                                    "size": 0,
                                    "status": "string",
                                    "version": 0
                                }
                            ]
                        },
                        "storedPackageObjectId": "string",
                        "teamId": "string",
                        "updateTool": "string",
                        "updateToolArguments": "string",
                        "updatedAt": "2019-08-24T14:15:22Z",
                        "versionlessDownloadUrl": True
                    }
                ],
                "updatedAt": "2019-08-24T14:15:22Z"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"createdAt":"2019-08-24T14:15:22Z","displayName":"string","id":"string","settings":[{"allowUpdateDelay":false,"appCatalogInstallableObjectId":"string","appFileName":"string","appleVpp":{"appConfiguration":"string","assignedLicenses":0,"availableLicenses":0,"details":{},"isConfigEnabled":true,"supportedDeviceFamilies":["IPAD"],"totalLicenses":0},"architectures":["string"],"assetKind":"string","assetSha256Size":0,"assetSha256Strings":["string"],"autoUpdate":false,"bundleId":"string","commandLineArguments":"string","createdAt":"2019-08-24T14:15:22Z","description":"string","desiredState":"string","downloadUrl":"string","enterpriseObjectId":"string","format":"string","googleAndroid":{"androidFeatures":["string"],"appPricing":"string","appVersion":"string","author":"string","autoUpdateMode":"AUTO_UPDATE_DEFAULT","category":"string","contentRating":"string","displayMode":"string","distributionChannel":"string","fullDescription":"string","iconUrl":"string","installType":"AVAILABLE","managedConfigurationTemplateId":"string","managedProperties":true,"minSdkVersion":0,"name":"string","permissionGrants":[{"id":"string","policy":"PROMPT"}],"runtimePermission":"PROMPT","startUrl":"string","type":"APP_TYPE_UNSPECIFIED","updateTime":"string","versionCode":0},"iconUrl":"string","location":"string","locationObjectId":"string","microsoftStore":{"doNotUpdate":true,"nonRemovable":true,"packageFamilyName":"string"},"packageId":"string","packageKind":"string","packageManager":"string","packageSubtitle":"string","packageVersion":"string","packageVersionUpdatedAt":"2019-08-24T14:15:22Z","scope":"string","shortVersion":"string","storedPackage":{"objectId":"string","versions":[{"metadata":{},"name":"string","rejectedReason":"string","sha256sum":"string","size":0,"status":"string","version":0}]},"storedPackageObjectId":"string","teamId":"string","updateTool":"string","updateToolArguments":"string","updatedAt":"2019-08-24T14:15:22Z","versionlessDownloadUrl":true}],"updatedAt":"2019-08-24T14:15:22Z"}'
    x-functionalities-tags:
      - devices-windows-software-app-crud
      - devices-darwin-software-app-crud
  '/softwareapps/{software_app_id}/associations':
    get:
      description: |-
        This endpoint will return the _direct_ associations of a Software Application. A direct association can be a non-homogeneous relationship between 2 different objects, for example Software Application and System Groups.


        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/associations?targets=system_group \
          -H 'accept: application/json' \
          -H 'content-type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_softwareappsAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsSoftwareApp:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a Software Application
      tags:
        - Graph
        - Software Apps
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Software App.
        in: path
        name: software_app_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to associate or disassociate a software application to a system or system group.

        #### Sample Request
        ```
        $ curl -X POST https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/associations \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: {API_KEY}' \
        -d '{
          "id": "<object_id>",
          "op": "add",
          "type": "system"
         }'
        ```
      operationId: graph_softwareappsAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-SoftwareApp'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
      security:
        - x-api-key: []
      summary: Manage the associations of a software application.
      tags:
        - Graph
        - Software Apps
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"system"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "system"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"system"}'
  '/softwareapps/{software_app_id}/reclaim-licenses':
    parameters:
      - in: path
        name: software_app_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to reclaim the licenses from a software app associated with devices that are deleted.
        #### Sample Request
        ```
        $ curl -X POST https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/reclaim-licenses \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: {API_KEY}' \
        -d '{}'
        ```
      operationId: softwareApps_reclaimLicenses
      responses:
        '200':
          description: Reclaim Licenses Response
          schema:
            $ref: '#/definitions/software-app-reclaim-licenses'
      security:
        - x-api-key: []
      summary: Reclaim Licenses for a Software Application.
      tags:
        - Software Apps
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/reclaim-licenses \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/reclaim-licenses"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/reclaim-licenses' -Method POST -Headers $headers
    x-functionalities-tags:
      - software-associations
  '/softwareapps/{software_app_id}/retry-installation':
    parameters:
      - in: path
        name: software_app_id
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SoftwareAppsRetryInstallationRequest'
    post:
      description: |-
        This endpoints initiates an installation retry of an Apple VPP App for the provided system IDs
        #### Sample Request
        ```
        $ curl -X POST https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/retry-installation \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: {API_KEY}' \
        -d '{"system_ids": ["<system_id_1>", "<system_id_2>", ...]}'
        ```
      operationId: softwareApps_retryInstallation
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/responses/trait:standardErrors:400'
      security:
        - x-api-key: []
      summary: Retry Installation for a Software Application
      tags:
        - Software Apps
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/retry-installation \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/retry-installation"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("POST", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/retry-installation' -Method POST -Headers $headers
  '/softwareapps/{software_app_id}/statuses':
    get:
      description: |-
        This endpoint allows you to get the status of the provided Software Application on associated JumpCloud systems.

        #### Sample Request
        ```
        $ curl -X GET https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/statuses \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: {API_KEY}' \
        ```
      operationId: softwareAppStatuses_list
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/software-app-status'
            type: array
      security:
        - x-api-key: []
      summary: Get the status of the provided Software Application
      tags:
        - Software Apps
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/statuses?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/statuses"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/statuses?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Software App.
        in: path
        name: software_app_id
        required: true
        type: string
    x-functionalities-tags:
      - devices-windows-software-app-crud
      - devices-darwin-software-app-crud
  '/softwareapps/{software_app_id}/systemgroups':
    get:
      description: |-
        This endpoint will return all Systems Groups bound to a Software App, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Software App to the corresponding System Group; this array represents all grouping and/or associations that would have to be removed to deprovision the System Group from this Software App.

        See `/associations` endpoint to manage those collections.

        #### Sample Request
        ```
        curl -X GET  https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/systemgroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_softwareappsTraverseSystemGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the System Groups bound to a Software App.
      tags:
        - Graph
        - Software Apps
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/systemgroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/systemgroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/systemgroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Software App.
        in: path
        name: software_app_id
        required: true
        type: string
    x-functionalities-tags:
      - devices-windows-software-app-crud
      - devices-darwin-software-app-crud
  '/softwareapps/{software_app_id}/systems':
    get:
      description: |-
        This endpoint will return all Systems bound to a Software App, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this Software App to the corresponding System; this array represents all grouping and/or associations that would have to be removed to deprovision the System from this Software App.

        See `/associations` endpoint to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/systems \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_softwareappsTraverseSystem
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Systems bound to a Software App.
      tags:
        - Graph
        - Software Apps
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/systems?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/systems"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/softwareapps/{software_app_id}/systems?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the Software App.
        in: path
        name: software_app_id
        required: true
        type: string
    x-functionalities-tags:
      - devices-windows-software-app-crud
      - devices-darwin-software-app-crud
  /subscriptions:
    get:
      description: |-
        This endpoint returns all pricing & packaging subscriptions.

        ##### Sample Request

        ```
         curl -X GET  https://console.jumpcloud.com/api/v2/subscriptions \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: subscriptions_get
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/subscription'
            type: array
      summary: Lists all the Pricing & Packaging Subscriptions
      tags:
        - Subscriptions
      x-scopes:
        - subscriptions.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/subscriptions
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/subscriptions"

            response = requests.request("GET", url)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/subscriptions'' -Method GET '
    x-functionalities-tags:
      - pricing-page
  '/subscriptions/{product_code}':
    parameters:
      - in: path
        name: product_code
        required: true
        type: string
    x-functionalities-tags:
      - pricing-page
  '/subscriptions/{product_code}/components':
    parameters:
      - in: path
        name: product_code
        required: true
        type: string
    x-functionalities-tags:
      - pricing-page
  /systemgroups:
    get:
      description: |-
        This endpoint returns all System Groups.

        Available filter fields:
          - `name`
          - `disabled`
          - `type`
          - `membershipMethod`

        #### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: groups_system_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          examples:
            application/json:
              - id: 5f91c8695e980f0001c44611
              - type: system_group
              - id: 5f91c8695e980f0001c44615
                name: group1
          schema:
            items:
              $ref: '#/definitions/SystemGroup'
            type: array
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List all System Groups
      tags:
        - System Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systemgroups?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    post:
      description: |-
        This endpoint allows you to create a new System Group.

        See the [Dynamic Group Configuration KB article](https://jumpcloud.com/support/configure-dynamic-device-groups) for more details on maintaining a Dynamic Group.

        #### Sample Request

        ```
        curl -X POST https://console.jumpcloud.com/api/v2/systemgroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "{Group_Name}"
          }'
        ```
      operationId: groups_system_post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SystemGroupPost'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SystemGroup'
      security:
        - x-api-key: []
      summary: Create a new System Group
      tags:
        - System Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/systemgroups \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"attributes":{},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups"

            payload = {
                "attributes": {},
                "description": "string",
                "email": "string",
                "memberQuery": {
                    "queryType": "Filter",
                    "filters": [None]
                },
                "memberQueryExemptions": [
                    {
                        "attributes": {},
                        "id": "string",
                        "type": "string"
                    }
                ],
                "memberSuggestionsNotify": True,
                "membershipMethod": "NOTSET",
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"attributes":{},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
    x-functionalities-tags:
      - systemgroups
  '/systemgroups/{group_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of a System Group.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example System Groups and Users.


        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/associations?targets=user \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_systemGroupAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsSystemGroup:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a System Group
      tags:
        - Graph
        - System Group Associations
        - System Groups
      x-scopes:
        - groups
        - groups.readonly
        - groups.self
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System Group.
        in: path
        name: group_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the _direct_ associations of a System Group.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example System Groups and Users.


        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/associations \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "user",
            "id": "{UserID}"
          }'
        ```
      operationId: graph_systemGroupAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-SystemGroup'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a System Group
      tags:
        - Graph
        - System Group Associations
        - System Groups
      x-scopes:
        - groups
        - groups.self
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"command"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "command"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"command"}'
    x-functionalities-tags:
      - systemgroups
  '/systemgroups/{group_id}/commands':
    get:
      description: |-
        This endpoint will return all Commands bound to a System Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the group's type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this System Group to the corresponding Command; this array represents all grouping and/or associations that would have to be removed to deprovision the Command from this System Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/commands \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_systemGroupTraverseCommand
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:GraphObjectWithPaths:details'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/commandsGraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Commands bound to a System Group
      tags:
        - Graph
        - System Group Associations
      x-scopes:
        - commands
        - commands.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/commands?limit=10&skip=0&filter=&details=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/commands"

            querystring = {"limit":"10","skip":"0","filter":"","details":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/commands?limit=10&skip=0&filter=&details=SOME_STRING_VALUE' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - systemgroups
      - commands
  '/systemgroups/{group_id}/memberof':
    parameters:
      - description: ObjectID of the System Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - systemgroups
  '/systemgroups/{group_id}/members':
    get:
      description: |-
        This endpoint returns the system members of a System Group.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID}/members \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemGroupMembersList
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the members of a System Group
      tags:
        - Graph
        - System Group Members & Membership
        - System Groups
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/members?limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/members"

            querystring = {"limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/members?limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System Group.
        in: path
        name: group_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the system members of a System Group.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID}/members \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "system",
            "id": "{System_ID}"
          }'
        ```
      operationId: graph_systemGroupMembersPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-SystemGroup-Member'
        - $ref: '#/parameters/trait:systemContextAuth:Date'
        - $ref: '#/parameters/trait:systemContextAuth:Authorization'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the members of a System Group
      tags:
        - Graph
        - System Group Members & Membership
        - System Groups
      x-scopes:
        - groups
        - groups.self
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/members \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"system"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/members"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "system"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/members' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"system"}'
    x-functionalities-tags:
      - systemgroups
  '/systemgroups/{group_id}/membership':
    get:
      description: |-
        This endpoint returns all Systems that are a member of this System Group.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID/membership \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemGroupMembership
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the System Group's membership
      tags:
        - Graph
        - System Group Members & Membership
        - System Groups
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/membership?limit=10&skip=0&sort=&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/membership"

            querystring = {"limit":"10","skip":"0","sort":"","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/membership?limit=10&skip=0&sort=&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - systemgroups
  '/systemgroups/{group_id}/policies':
    get:
      description: |-
        This endpoint will return all Policies bound to a System Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this System Group to the corresponding Policy; this array represents all grouping and/or associations that would have to be removed to deprovision the Policy from this System Group.

        See `/members` and `/associations` endpoints to manage those collections.

        This endpoint is not public yet as we haven't finished the code.

        ##### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/policies \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_systemGroupTraversePolicy
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Policies bound to a System Group
      tags:
        - Graph
        - System Group Associations
        - System Groups
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/policies?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/policies"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/policies?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - systemgroups
  '/systemgroups/{group_id}/policygroups':
    get:
      description: |-
        This endpoint will return all Policy Groups bound to a System Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this System Group to the corresponding Policy Group; this array represents all grouping and/or associations that would have to be removed to deprovision the Policy Group from this System Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/policygroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemGroupTraversePolicyGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Policy Groups bound to a System Group
      tags:
        - Graph
        - System Group Associations
        - System Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/policygroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/policygroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/policygroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - systemgroups
  '/systemgroups/{group_id}/suggestions':
    get:
      description: |-
        This endpoint returns available suggestions for a given system group
        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/suggestions \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: groups_system_suggestions_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - description: ID of the group
          in: path
          name: group_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MemberSuggestion'
            type: array
      security:
        - x-api-key: []
      summary: List Suggestions for a System Group
      tags:
        - System Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/suggestions?limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/suggestions"

            querystring = {"limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/suggestions?limit=10&skip=0' -Method GET -Headers $headers
    post:
      description: |-
        This endpoint applies the suggestions for the specified system group.
        #### Sample Request
        ```
        curl -X PUT https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/suggestions \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
                 "object_ids": ["212345678901234567890123",
                              "123456789012345678901234"]
             }'
        ```
      operationId: groups_system_suggestions_post
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - description: ID of the group
          in: path
          name: group_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              object_ids:
                items:
                  type: string
                type: array
            type: object
            x-examples:
              example-1:
                object_ids:
                  - '212345678901234567890123'
                  - '123456789012345678901234'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MemberSuggestionsPostResult'
      security:
        - x-api-key: []
      summary: Apply Suggestions for a System Group
      tags:
        - System Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/suggestions \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"object_ids":["string"]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/suggestions"

            payload = {"object_ids": ["string"]}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/suggestions' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"object_ids":["string"]}'
    x-functionalities-tags:
      - groups
  '/systemgroups/{group_id}/usergroups':
    get:
      description: |-
        This endpoint will return all User Groups bound to a System Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this System Group to the corresponding User Group; this array represents all grouping and/or associations that would have to be removed to deprovision the User Group from this System Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemGroupTraverseUserGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Groups bound to a System Group
      tags:
        - Graph
        - System Group Associations
        - System Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/usergroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/usergroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/usergroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - systemgroups
  '/systemgroups/{group_id}/users':
    get:
      description: |-
        This endpoint will return all Users bound to a System Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this System Group to the corresponding User; this array represents all grouping and/or associations that would have to be removed to deprovision the User from this System Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{GroupID}/users \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_systemGroupTraverseUser
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Users bound to a System Group
      tags:
        - Graph
        - System Group Associations
        - System Groups
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/users?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/users"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{group_id}/users?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - systemgroups
  '/systemgroups/{id}':
    delete:
      description: |-
        This endpoint allows you to delete a System Group.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: groups_system_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SystemGroup'
        '204':
          description: No Content
      security:
        - x-api-key: []
      summary: Delete a System Group
      tags:
        - System Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/systemgroups/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns the details of a System Group.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: groups_system_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          examples:
            application/json:
              id: 5f91c8695e980f0001c44614
              name: group1
              type: system_group
          schema:
            $ref: '#/definitions/SystemGroup'
      security:
        - x-api-key: []
      summary: View an individual System Group details
      tags:
        - System Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/systemgroups/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System Group.
        in: path
        name: id
        required: true
        type: string
    put:
      description: |-
        This endpoint allows you to do a full update of the System Group.

        See the [Dynamic Group Configuration KB article](https://jumpcloud.com/support/configure-dynamic-device-groups) for more details on maintaining a Dynamic Group.

        #### Sample Request
        ```
        curl -X PUT https://console.jumpcloud.com/api/v2/systemgroups/{Group_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "Name_Update"
          }'
        ```
      operationId: groups_system_put
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SystemGroupPut'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          examples:
            application/json:
              id: '00000'
              name: group1
              type: system_group
          schema:
            $ref: '#/definitions/SystemGroup'
      security:
        - x-api-key: []
      summary: Update a System Group
      tags:
        - System Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/systemgroups/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"attributes":{},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systemgroups/{id}"

            payload = {
                "attributes": {},
                "description": "string",
                "email": "string",
                "memberQuery": {
                    "queryType": "Filter",
                    "filters": [None]
                },
                "memberQueryExemptions": [
                    {
                        "attributes": {},
                        "id": "string",
                        "type": "string"
                    }
                ],
                "memberSuggestionsNotify": True,
                "membershipMethod": "NOTSET",
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systemgroups/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"attributes":{},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
    x-functionalities-tags:
      - systemgroups
  /systeminsights/alf:
    get:
      description: Valid filter fields are `system_id` and `global_state`.
      operationId: systeminsights_list_alf
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-alf'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights ALF
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/alf?filter=&skip=0&sort=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/alf"

            querystring = {"filter":"","skip":"0","sort":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/alf?filter=&skip=0&sort=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/alf_exceptions:
    get:
      description: Valid filter fields are `system_id` and `state`.
      operationId: systeminsights_list_alf_exceptions
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-alf-exceptions'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights ALF Exceptions
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/alf_exceptions?filter=&skip=0&sort=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/alf_exceptions"

            querystring = {"filter":"","skip":"0","sort":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/alf_exceptions?filter=&skip=0&sort=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/alf_explicit_auths:
    get:
      description: Valid filter fields are `system_id` and `process`.
      operationId: systeminsights_list_alf_explicit_auths
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-alf-explicit-auths'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights ALF Explicit Authentications
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/alf_explicit_auths?filter=&skip=0&sort=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/alf_explicit_auths"

            querystring = {"filter":"","skip":"0","sort":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/alf_explicit_auths?filter=&skip=0&sort=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/appcompat_shims:
    get:
      description: Valid filter fields are `system_id` and `enabled`.
      operationId: systeminsights_list_appcompat_shims
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-appcompat-shims'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Application Compatibility Shims
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/appcompat_shims?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/appcompat_shims"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/appcompat_shims?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/apps:
    get:
      description: |-
        Lists all apps for macOS devices. For Windows devices, use [List System Insights Programs](#operation/systeminsights_list_programs).

        Valid filter fields are `system_id` and `bundle_name`.
      operationId: systeminsights_list_apps
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-apps'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Apps
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/apps?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/apps"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/apps?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/authorized_keys:
    get:
      description: Valid filter fields are `system_id` and `uid`.
      operationId: systeminsights_list_authorized_keys
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-authorized-keys'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Authorized Keys
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/authorized_keys?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/authorized_keys"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/authorized_keys?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/azure_instance_metadata:
    get:
      description: Valid filter fields are `system_id`.
      operationId: systeminsights_list_azure_instance_metadata
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-azure-instance-metadata'
            type: array
        '400':
          description: ''
          schema:
            type: string
      security: []
      summary: List System Insights Azure Instance Metadata
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/azure_instance_metadata?skip=0&sort=&filter=&limit=10'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/azure_instance_metadata"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            response = requests.request("GET", url, params=querystring)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/systeminsights/azure_instance_metadata?skip=0&sort=&filter=&limit=10'' -Method GET '
    x-functionalities-tags:
      - system-insights
  /systeminsights/azure_instance_tags:
    get:
      description: Valid filter fields are `system_id`.
      operationId: systeminsights_list_azure_instance_tags
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-azure-instance-tags'
            type: array
        '400':
          description: ''
          schema:
            type: string
      security: []
      summary: List System Insights Azure Instance Tags
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/azure_instance_tags?skip=0&sort=&filter=&limit=10'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/azure_instance_tags"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            response = requests.request("GET", url, params=querystring)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/systeminsights/azure_instance_tags?skip=0&sort=&filter=&limit=10'' -Method GET '
    x-functionalities-tags:
      - system-insights
  /systeminsights/battery:
    get:
      description: Valid filter fields are `system_id` and `health`.
      operationId: systeminsights_list_battery
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-battery'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Battery
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/battery?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/battery"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/battery?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/bitlocker_info:
    get:
      description: Valid filter fields are `system_id` and `protection_status`.
      operationId: systeminsights_list_bitlocker_info
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-bitlocker-info'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Bitlocker Info
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/bitlocker_info?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/bitlocker_info"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/bitlocker_info?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/browser_plugins:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_browser_plugins
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-browser-plugins'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Browser Plugins
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/browser_plugins?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/browser_plugins"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/browser_plugins?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/certificates:
    get:
      description: Valid filter fields are `system_id` and `common_name`.
      operationId: systeminsights_list_certificates
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsCertificatesFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-certificates'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Certificates
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/certificates?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/certificates"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/certificates?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/chassis_info:
    get:
      description: Valid filter fields are `system_id`.
      operationId: systeminsights_list_chassis_info
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-chassis-info'
            type: array
        '400':
          description: ''
          schema:
            type: string
      security: []
      summary: List System Insights Chassis Info
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/chassis_info?skip=0&sort=&filter=&limit=10'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/chassis_info"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            response = requests.request("GET", url, params=querystring)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/systeminsights/chassis_info?skip=0&sort=&filter=&limit=10'' -Method GET '
    x-functionalities-tags:
      - system-insights
  /systeminsights/chrome_extensions:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_chrome_extensions
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-chrome-extensions'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Chrome Extensions
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/chrome_extensions?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/chrome_extensions"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/chrome_extensions?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/connectivity:
    get:
      description: The only valid filter field is `system_id`.
      operationId: systeminsights_list_connectivity
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-connectivity'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Connectivity
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/connectivity?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/connectivity"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/connectivity?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/crashes:
    get:
      description: Valid filter fields are `system_id` and `identifier`.
      operationId: systeminsights_list_crashes
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-crashes'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Crashes
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/crashes?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/crashes"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/crashes?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/cups_destinations:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_cups_destinations
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-cups-destinations'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights CUPS Destinations
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/cups_destinations?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/cups_destinations"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/cups_destinations?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/disk_encryption:
    get:
      description: Valid filter fields are `system_id` and `encryption_status`.
      operationId: systeminsights_list_disk_encryption
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-disk-encryption'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Disk Encryption
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/disk_encryption?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/disk_encryption"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/disk_encryption?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/disk_info:
    get:
      description: Valid filter fields are `system_id` and `disk_index`.
      operationId: systeminsights_list_disk_info
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-disk-info'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Disk Info
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/disk_info?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/disk_info"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/disk_info?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/dns_resolvers:
    get:
      description: Valid filter fields are `system_id` and `type`.
      operationId: systeminsights_list_dns_resolvers
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-dns-resolvers'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights DNS Resolvers
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/dns_resolvers?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/dns_resolvers"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/dns_resolvers?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/etc_hosts:
    get:
      description: Valid filter fields are `system_id` and `address`.
      operationId: systeminsights_list_etc_hosts
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-etc-hosts'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Etc Hosts
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/etc_hosts?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/etc_hosts"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/etc_hosts?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/firefox_addons:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_firefox_addons
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-firefox-addons'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Firefox Addons
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/firefox_addons?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/firefox_addons"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/firefox_addons?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/groups:
    get:
      description: Valid filter fields are `system_id` and `groupname`.
      operationId: systeminsights_list_groups
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-groups'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Groups
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/groups?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/groups"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/groups?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/ie_extensions:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_ie_extensions
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-ie-extensions'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights IE Extensions
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/ie_extensions?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/ie_extensions"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/ie_extensions?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/interface_addresses:
    get:
      description: Valid filter fields are `system_id` and `address`.
      operationId: systeminsights_list_interface_addresses
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-interface-addresses'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Interface Addresses
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/interface_addresses?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/interface_addresses"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/interface_addresses?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/interface_details:
    get:
      description: Valid filter fields are `system_id` and `interface`.
      operationId: systeminsights_list_interface_details
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-interface-details'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Interface Details
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/interface_details?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/interface_details"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/interface_details?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/kernel_info:
    get:
      description: Valid filter fields are `system_id` and `version`.
      operationId: systeminsights_list_kernel_info
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-kernel-info'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Kernel Info
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/kernel_info?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/kernel_info"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/kernel_info?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/launchd:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_launchd
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-launchd'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Launchd
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/launchd?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/launchd"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/launchd?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/linux_packages:
    get:
      description: |-
        Lists all programs for Linux devices. For macOS devices, use [List System Insights System Apps](#operation/systeminsights_list_apps). For windows devices, use [List System Insights System Apps](#operation/systeminsights_list_programs).

        Valid filter fields are `name` and `package_format`.
      operationId: systeminsights_list_linux_packages
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-linux-packages'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Linux Packages
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/linux_packages?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/linux_packages"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/linux_packages?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    parameters: []
    x-functionalities-tags:
      - system-insights
  /systeminsights/logged_in_users:
    get:
      description: Valid filter fields are `system_id` and `user`.
      operationId: systeminsights_list_logged_in_users
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-logged-in-users'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Logged-In Users
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/logged_in_users?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/logged_in_users"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/logged_in_users?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/logical_drives:
    get:
      description: Valid filter fields are `system_id` and `device_id`.
      operationId: systeminsights_list_logical_drives
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-logical-drives'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Logical Drives
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/logical_drives?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/logical_drives"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/logical_drives?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/managed_policies:
    get:
      description: Valid filter fields are `system_id` and `domain`.
      operationId: systeminsights_list_managed_policies
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-managed-policies'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Managed Policies
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/managed_policies?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/managed_policies"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/managed_policies?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/mounts:
    get:
      description: Valid filter fields are `system_id` and `path`.
      operationId: systeminsights_list_mounts
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-mounts'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Mounts
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/mounts?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/mounts"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/mounts?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/os_version:
    get:
      description: Valid filter fields are `system_id` and `version`.
      operationId: systeminsights_list_os_version
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-os-version'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights OS Version
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/os_version?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/os_version"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/os_version?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/patches:
    get:
      description: Valid filter fields are `system_id` and `hotfix_id`.
      operationId: systeminsights_list_patches
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-patches'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Patches
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/patches?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/patches"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/patches?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/programs:
    get:
      description: |-
        Lists all programs for Windows devices. For macOS devices, use [List System Insights Apps](#operation/systeminsights_list_apps).

        Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_programs
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-programs'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Programs
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/programs?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/programs"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/programs?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/python_packages:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_python_packages
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-python-packages'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Python Packages
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/python_packages?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/python_packages"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/python_packages?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/safari_extensions:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_safari_extensions
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-safari-extensions'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Safari Extensions
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/safari_extensions?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/safari_extensions"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/safari_extensions?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/scheduled_tasks:
    get:
      description: Valid filter fields are `system_id` and `enabled`.
      operationId: systeminsights_list_scheduled_tasks
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-scheduled-tasks'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Scheduled Tasks
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/scheduled_tasks?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/scheduled_tasks"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/scheduled_tasks?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/secureboot:
    get:
      description: Valid filter fields are `system_id`.
      operationId: systeminsights_list_secureboot
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-secureboot'
            type: array
        '400':
          description: ''
          schema:
            type: string
      security: []
      summary: List System Insights Secure Boot
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/secureboot?skip=0&sort=&filter=&limit=10'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/secureboot"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            response = requests.request("GET", url, params=querystring)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/systeminsights/secureboot?skip=0&sort=&filter=&limit=10'' -Method GET '
    x-functionalities-tags:
      - system-insights
  /systeminsights/services:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_services
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-services'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Services
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/services?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/services"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/services?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/shadow:
    get:
      description: Valid filter fields are `system_id` and `username`.
      operationId: systeminsights_list_shadow
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-shadow'
            type: array
      security:
        - x-api-key: []
      summary: LIst System Insights Shadow
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/shadow?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/shadow"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/shadow?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/shared_folders:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_shared_folders
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-shared-folders'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Shared Folders
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/shared_folders?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/shared_folders"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/shared_folders?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/shared_resources:
    get:
      description: Valid filter fields are `system_id` and `type`.
      operationId: systeminsights_list_shared_resources
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-shared-resources'
            type: array
      summary: List System Insights Shared Resources
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/shared_resources?skip=0&sort=&filter=&limit=10'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/shared_resources"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            response = requests.request("GET", url, params=querystring)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/systeminsights/shared_resources?skip=0&sort=&filter=&limit=10'' -Method GET '
  /systeminsights/sharing_preferences:
    get:
      description: Only valid filed field is `system_id`.
      operationId: systeminsights_list_sharing_preferences
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-sharing-preferences'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Sharing Preferences
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/sharing_preferences?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/sharing_preferences"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/sharing_preferences?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/sip_config:
    get:
      description: Valid filter fields are `system_id` and `enabled`.
      operationId: systeminsights_list_sip_config
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-sip-config'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights SIP Config
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/sip_config?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/sip_config"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/sip_config?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/startup_items:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_startup_items
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-startup-items'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Startup Items
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/startup_items?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/startup_items"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/startup_items?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/system_controls:
    get:
      description: Valid filter fields are `system_id` and `name`.
      operationId: systeminsights_list_system_controls
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsControlsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-system-controls'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights System Control
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/system_controls?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/system_controls"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/system_controls?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/system_info:
    get:
      description: Valid filter fields are `system_id` and `cpu_subtype`.
      operationId: systeminsights_list_system_info
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-system-info'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights System Info
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/system_info?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/system_info"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/system_info?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/tpm_info:
    get:
      description: Valid filter fields are `system_id`.
      operationId: systeminsights_list_tpm_info
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      produces:
        - text/html
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-tpm-info'
            type: array
        '400':
          description: ''
          schema:
            type: string
      security: []
      summary: List System Insights TPM Info
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/tpm_info?skip=0&sort=&filter=&limit=10'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/tpm_info"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            response = requests.request("GET", url, params=querystring)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/systeminsights/tpm_info?skip=0&sort=&filter=&limit=10'' -Method GET '
    x-functionalities-tags:
      - system-insights
  /systeminsights/uptime:
    get:
      description: Valid filter fields are `system_id` and `days`.
      operationId: systeminsights_list_uptime
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilterUptime:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-uptime'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Uptime
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/uptime?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/uptime"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/uptime?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/usb_devices:
    get:
      description: Valid filter fields are `system_id` and `model`.
      operationId: systeminsights_list_usb_devices
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-usb-devices'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights USB Devices
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/usb_devices?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/usb_devices"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/usb_devices?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/user_groups:
    get:
      description: Only valid filter field is `system_id`.
      operationId: systeminsights_list_user_groups
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-user-groups'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights User Groups
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/user_groups?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/user_groups"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/user_groups?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/user_ssh_keys:
    get:
      description: Valid filter fields are `system_id` and `uid`.
      operationId: systeminsights_list_user_ssh_keys
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-user-ssh-keys'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights User SSH Keys
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/user_ssh_keys?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/user_ssh_keys"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/user_ssh_keys?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/userassist:
    get:
      description: Valid filter fields are `system_id`.
      operationId: systeminsights_list_userassist
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-userassist'
            type: array
        '400':
          description: ''
          schema:
            type: string
      security: []
      summary: List System Insights User Assist
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/userassist?skip=0&sort=&filter=&limit=10'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/userassist"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            response = requests.request("GET", url, params=querystring)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/systeminsights/userassist?skip=0&sort=&filter=&limit=10'' -Method GET '
    x-functionalities-tags:
      - system-insights
  /systeminsights/users:
    get:
      description: Valid filter fields are `system_id` and `username`.
      operationId: systeminsights_list_users
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-users'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Users
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/users?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/users"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/users?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/wifi_networks:
    get:
      description: Valid filter fields are `system_id` and `security_type`.
      operationId: systeminsights_list_wifi_networks
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-wifi-networks'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights WiFi Networks
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/wifi_networks?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/wifi_networks"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/wifi_networks?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/wifi_status:
    get:
      description: Valid filter fields are `system_id` and `security_type`.
      operationId: systeminsights_list_wifi_status
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-wifi-status'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights WiFi Status
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/wifi_status?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/wifi_status"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/wifi_status?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  /systeminsights/windows_crashes:
    x-functionalities-tags:
      - system-insights
  /systeminsights/windows_security_center:
    get:
      description: Valid filter fields are `system_id`.
      operationId: systeminsights_list_windows_security_center
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-windows-security-center'
            type: array
        '400':
          description: ''
          schema:
            type: string
      security: []
      summary: List System Insights Windows Security Center
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/windows_security_center?skip=0&sort=&filter=&limit=10'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/windows_security_center"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            response = requests.request("GET", url, params=querystring)

            print(response.text)
        - lang: Powershell
          source: '$response = Invoke-RestMethod -Uri ''https://console.jumpcloud.com/api/v2/systeminsights/windows_security_center?skip=0&sort=&filter=&limit=10'' -Method GET '
    x-functionalities-tags:
      - system-insights
  /systeminsights/windows_security_products:
    get:
      description: Valid filter fields are `system_id` and `state`.
      operationId: systeminsights_list_windows_security_products
      parameters:
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemInsightsSort:sort'
        - $ref: '#/parameters/trait:systemInsightsFilter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:systemInsightsLimit:limit'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/system-insights-windows-security-products'
            type: array
      security:
        - x-api-key: []
      summary: List System Insights Windows Security Products
      tags:
        - System Insights
      x-scopes:
        - systeminsights.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systeminsights/windows_security_products?skip=0&sort=&filter=&limit=10' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systeminsights/windows_security_products"

            querystring = {"skip":"0","sort":"","filter":"","limit":"10"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systeminsights/windows_security_products?skip=0&sort=&filter=&limit=10' -Method GET -Headers $headers
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/apps':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/bitlocker_info':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/browser_plugins':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/chrome_extensions':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/disk_encryption':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/disk_info':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/etc_hosts':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/firefox_addons':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/groups':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/interface_addresses':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/kernel_info':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/linux_packages':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/logical_drives':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/mounts':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/os_version':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/patches':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/programs':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/safari_extensions':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/system_controls':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/system_info':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/uptime':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  '/systeminsights/{system_id}/users':
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - system-insights
  /systems/views:
    get:
      description: "List the saved views for an Organization.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/systems/views \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:{API_KEY}'\n```\n\n\tNote: The `limit` maximum is 1000 Saved Views in a single response."
      operationId: SavedViews_List
      parameters:
        - format: byte
          in: query
          name: organizationObjectId
          required: false
          type: string
        - format: byte
          in: query
          name: userObjectId
          required: false
          type: string
      responses:
        '200':
          description: Success listing Saved Views.
          schema:
            items:
              $ref: '#/definitions/devices.SavedView'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List the Items stored in SavedViews
      tags:
        - Saved Views
      x-dynamic-gateway: true
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/views?organizationObjectId=SOME_STRING_VALUE&userObjectId=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/views"

            querystring = {"organizationObjectId":"SOME_STRING_VALUE","userObjectId":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/views?organizationObjectId=SOME_STRING_VALUE&userObjectId=SOME_STRING_VALUE' -Method GET -Headers $headers
    post:
      description: |-
        Creates the saved view for an organization.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/systems/views \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
        ```
      operationId: SavedViews_Create
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/devices.SavedViewCreateRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/devices.SavedView'
      security:
        - x-api-key: []
      summary: Creates a saved view for an organization
      tags:
        - Saved Views
      x-dynamic-gateway: true
      x-scopes:
        - systems
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/systems/views \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"columns":["string"],"filters":[{"field":"string","values":["string"]}],"isDefault":true,"name":"string","objectId":"string","shared":true,"sortConfig":"string","userObjectId":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/views"

            payload = {
                "columns": ["string"],
                "filters": [
                    {
                        "field": "string",
                        "values": ["string"]
                    }
                ],
                "isDefault": True,
                "name": "string",
                "objectId": "string",
                "shared": True,
                "sortConfig": "string",
                "userObjectId": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/views' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"columns":["string"],"filters":[{"field":"string","values":["string"]}],"isDefault":true,"name":"string","objectId":"string","shared":true,"sortConfig":"string","userObjectId":"string"}'
  '/systems/{systemObjectId}/aggregated-policy-stats':
    get:
      description: |-
        Gets the aggregated policy stats for a system.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systems/{system_object_id}/aggregated-policy-stats \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key:{API_KEY}'
        ```
      operationId: AggregatedPolicyResults_Get
      parameters:
        - format: byte
          in: path
          name: systemObjectId
          required: true
          type: string
        - format: byte
          in: query
          name: organizationObjectId
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/devices.AggregatedPolicyResultResponse'
      security:
        - x-api-key: []
      summary: Get the Aggregated Policy Stats for a System
      tags:
        - Aggregated Policy Stats
      x-dynamic-gateway: true
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/{systemObjectId}/aggregated-policy-stats?organizationObjectId=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{systemObjectId}/aggregated-policy-stats"

            querystring = {"organizationObjectId":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{systemObjectId}/aggregated-policy-stats?organizationObjectId=SOME_STRING_VALUE' -Method GET -Headers $headers
  '/systems/{system_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of a System.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Systems and Users.


        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/associations?targets=user \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsSystem:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemContextAuth:Date'
        - $ref: '#/parameters/trait:systemContextAuth:Authorization'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a System
      tags:
        - Graph
        - Systems
      x-scopes:
        - systems
        - systems.readonly
        - systems.self
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/{system_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System.
        in: path
        name: system_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the _direct_ associations of a System.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Systems and Users.


        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/systems/{System_ID}/associations \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "attributes": {
              "sudo": {
                "enabled": true,
                "withoutPassword": false
              }
            },
            "op": "add",
            "type": "user",
            "id": "UserID"
          }'
        ```
      operationId: graph_systemAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-System'
        - $ref: '#/parameters/trait:systemContextAuth:Date'
        - $ref: '#/parameters/trait:systemContextAuth:Authorization'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage associations of a System
      tags:
        - Graph
        - Systems
      x-scopes:
        - systems
        - systems.self
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/systems/{system_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{"sudo":{"enabled":true,"withoutPassword":true}},"type":"command"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {"sudo": {
                        "enabled": True,
                        "withoutPassword": True
                    }},
                "type": "command"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{"sudo":{"enabled":true,"withoutPassword":true}},"type":"command"}'
    x-functionalities-tags:
      - systems
  '/systems/{system_id}/commands':
    get:
      description: |-
        This endpoint will return all Commands bound to a System, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this System to the corresponding Command; this array represents all grouping and/or associations that would have to be removed to deprovision the Command from this System.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/commands \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemTraverseCommand
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:GraphObjectWithPaths:details'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/commandsGraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Commands bound to a System
      tags:
        - Graph
        - Systems
      x-scopes:
        - commands
        - commands.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/{system_id}/commands?limit=10&skip=0&filter=&details=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/commands"

            querystring = {"limit":"10","skip":"0","filter":"","details":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/commands?limit=10&skip=0&filter=&details=SOME_STRING_VALUE' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System.
        in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - systems
      - commmands
  '/systems/{system_id}/fdekey':
    get:
      description: This endpoint will return the current (latest) fde key saved for a system.
      operationId: systems_getFDEKey
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          examples:
            application/json:
              key: cupidatat consequat occaecat proident
          schema:
            $ref: '#/definitions/systemfdekey'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get System FDE Key
      tags:
        - Systems
        - fde
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/systems/{system_id}/fdekey \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/fdekey"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/fdekey' -Method GET -Headers $headers
    parameters:
      - in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - systems
  '/systems/{system_id}/memberof':
    get:
      description: |-
        This endpoint returns all the System Groups a System is a member of.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/memberof \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemMemberOf
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemContextAuth:Date'
        - $ref: '#/parameters/trait:systemContextAuth:Authorization'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the parent Groups of a System
      tags:
        - Graph
        - Systems
      x-scopes:
        - groups
        - groups.readonly
        - groups.self
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/{system_id}/memberof?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/memberof"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/memberof?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System.
        in: path
        name: system_id
        required: true
        type: string
  '/systems/{system_id}/policies':
    get:
      description: |-
        This endpoint will return all Policies bound to a System, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this System to the corresponding Policy; this array represents all grouping and/or associations that would have to be removed to deprovision the Policy from this System.

        See `/members` and `/associations` endpoints to manage those collections.

        This endpoint is not yet public as we have finish the code.

        ##### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/{System_ID}/policies \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemTraversePolicy
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Policies bound to a System
      tags:
        - Graph
        - Systems
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/{system_id}/policies?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/policies"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/policies?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System.
        in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - systems
      - policies
  '/systems/{system_id}/policygroups':
    get:
      description: |-
        This endpoint will return all Policy Groups bound to a System, either directly or indirectly essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this System to the corresponding Policy Group; this array represents all grouping and/or associations that would have to be removed to deprovision the Policy Group from this System.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/policygroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemTraversePolicyGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemContextAuth:Date'
        - $ref: '#/parameters/trait:systemContextAuth:Authorization'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Policy Groups bound to a System
      tags:
        - Graph
        - Systems
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/{system_id}/policygroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/policygroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/policygroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System.
        in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - systems
      - policy-groups
  '/systems/{system_id}/policystatuses':
    get:
      description: |-
        This endpoint returns the policy results for a particular system.

        ##### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/policystatuses \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: policystatuses_systemsList
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/PolicyResult'
            type: array
      security:
        - x-api-key: []
      summary: List the policy statuses for a system
      tags:
        - Graph
        - Policies
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/{system_id}/policystatuses?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/policystatuses"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/policystatuses?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System.
        in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - systems
      - policies
  '/systems/{system_id}/softwareappstatuses':
    get:
      description: |-
        This endpoint returns all the statuses of the associated Software Applications from the provided JumpCloud system ID.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systems/{system_id}/softwareappstatuses \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: systems_ListSoftwareAppsWithStatuses
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/software-app-with-status'
            type: array
      security:
        - x-api-key: []
      summary: List the associated Software Application Statuses of a System
      tags:
        - Systems
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/{system_id}/softwareappstatuses?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/softwareappstatuses"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/softwareappstatuses?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System.
        in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - systems
  '/systems/{system_id}/usergroups':
    get:
      description: |-
        This endpoint will return all User Groups bound to a System, either directly or indirectly essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this System to the corresponding User Group; this array represents all grouping and/or associations that would have to be removed to deprovision the User Group from this System.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemTraverseUserGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemContextAuth:Date'
        - $ref: '#/parameters/trait:systemContextAuth:Authorization'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Groups bound to a System
      tags:
        - Graph
        - Systems
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/{system_id}/usergroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/usergroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/usergroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System.
        in: path
        name: system_id
        required: true
        type: string
    x-functionalities-tags:
      - systems
      - groups
  '/systems/{system_id}/users':
    get:
      description: |-
        This endpoint will return all Users bound to a System, either directly or indirectly essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this System to the corresponding User; this array represents all grouping and/or associations that would have to be removed to deprovision the User from this System.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/systems/{System_ID}/users \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_systemTraverseUser
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:systemContextAuth:Date'
        - $ref: '#/parameters/trait:systemContextAuth:Authorization'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Users bound to a System
      tags:
        - Graph
        - Systems
      x-scopes:
        - users
        - users.readonly
        - users.self
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/systems/{system_id}/users?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/systems/{system_id}/users"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/systems/{system_id}/users?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the System.
        in: path
        name: system_id
        required: true
        type: string
  /trial-features/recaps:
    x-functionalities-tags:
      - settings-feature-trial
  /userapprovalrequest:
    post:
      description: Endpoint for user approval
      operationId: WorkflowAccessRequestApi_UserApprovalRequest
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/jumpcloud.ingresso.UserApprovalRequestRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/jumpcloud.ingresso.UserApprovalRequestResponse'
      security:
        - x-api-key: []
      summary: User Approval Access Request
      tags:
        - Access Requests
      x-dynamic-gateway: true
      x-scopes:
        - accessmanagement
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/userapprovalrequest \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","organizationObjectId":"string","remarks":"string","status":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/userapprovalrequest"

            payload = {
                "id": "string",
                "organizationObjectId": "string",
                "remarks": "string",
                "status": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/userapprovalrequest' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","organizationObjectId":"string","remarks":"string","status":"string"}'
  /usergroups:
    get:
      description: |-
        This endpoint returns all User Groups.

        Available filter fields:
          - `name`
          - `disabled`
          - `type`
          - `membershipMethod`
          - `suggestionCounts.add`
          - `suggestionCounts.remove`
          - `suggestionCounts.total`
          - `attributes.sudo.enabled`
          - `attributes.sudo.withoutPassword`

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: groups_user_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserGroup'
            type: array
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List all User Groups
      tags:
        - User Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    post:
      description: |-
        This endpoint allows you to create a new User Group.

        See the [Dynamic Group Configuration KB article](https://jumpcloud.com/support/configure-dynamic-device-groups) for more details on maintaining a Dynamic Group.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "{Group_Name}"
          }'
        ```
      operationId: groups_user_post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UserGroupPost'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserGroup'
      security:
        - x-api-key: []
      summary: Create a new User Group
      tags:
        - User Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/usergroups \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"attributes":{"sudo":{"enabled":true,"withoutPassword":true},"ldapGroups":[{"name":"string"}],"posixGroups":[{"id":0,"name":"string"}],"radius":{"reply":[{"name":"string","value":"string"}]},"sambaEnabled":true},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups"

            payload = {
                "attributes": {
                    "sudo": {
                        "enabled": True,
                        "withoutPassword": True
                    },
                    "ldapGroups": [{"name": "string"}],
                    "posixGroups": [
                        {
                            "id": 0,
                            "name": "string"
                        }
                    ],
                    "radius": {"reply": [
                            {
                                "name": "string",
                                "value": "string"
                            }
                        ]},
                    "sambaEnabled": True
                },
                "description": "string",
                "email": "string",
                "memberQuery": {
                    "queryType": "Filter",
                    "filters": [None]
                },
                "memberQueryExemptions": [
                    {
                        "attributes": {},
                        "id": "string",
                        "type": "string"
                    }
                ],
                "memberSuggestionsNotify": True,
                "membershipMethod": "NOTSET",
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"attributes":{"sudo":{"enabled":true,"withoutPassword":true},"ldapGroups":[{"name":"string"}],"posixGroups":[{"id":0,"name":"string"}],"radius":{"reply":[{"name":"string","value":"string"}]},"sambaEnabled":true},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
    x-functionalities-tags:
      - systems
  '/usergroups/{group_id}/activedirectories':
    get:
      description: |-
        This endpoint will return all Active Directory Instances bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding Active Directory; this array represents all grouping and/or associations that would have to be removed to deprovision the Active Directory from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/activedirectories \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupTraverseActiveDirectory
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Active Directories bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/activedirectories?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/activedirectories"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/activedirectories?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - active-directory
  '/usergroups/{group_id}/applications':
    get:
      description: |-
        This endpoint will return all Applications bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding Application; this array represents all grouping and/or associations that would have to be removed to deprovision the Application from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/applications \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupTraverseApplication
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Applications bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - applications
        - applications.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/applications?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/applications"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/applications?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
  '/usergroups/{group_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of this User Group.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example User Groups and Users.


        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/associations?targets=system \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsUserGroup:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a User Group.
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    post:
      description: |-
        This endpoint manages the _direct_ associations of this User Group.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example User Groups and Users.


        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/associations \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "system",
            "id": "{SystemID}"
          }'
        ```
      operationId: graph_userGroupAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-UserGroup'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/usergroups/{group_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"active_directory"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "active_directory"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"active_directory"}'
    x-functionalities-tags:
      - groups
      - applications
  '/usergroups/{group_id}/directories':
    get:
      description: |-
        This endpoint will return all Directories bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding Directory; this array represents all grouping and/or associations that would have to be removed to deprovision the Directories from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/directories \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_userGroupTraverseDirectory
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Directories bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/directories?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/directories"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/directories?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - directory
  '/usergroups/{group_id}/gsuites':
    get:
      description: |-
        This endpoint will return all G Suite Instances bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding G Suite instance; this array represents all grouping and/or associations that would have to be removed to deprovision the G Suite instance from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID/gsuites \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_userGroupTraverseGSuite
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the G Suite instances bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/gsuites?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/gsuites"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/gsuites?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - google-read
  '/usergroups/{group_id}/ldapservers':
    get:
      description: |-
        This endpoint will return all LDAP Servers bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding LDAP Server; this array represents all grouping and/or associations that would have to be removed to deprovision the LDAP Server from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/ldapservers \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupTraverseLdapServer
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the LDAP Servers bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/ldapservers?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/ldapservers"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/ldapservers?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - ldap-management
  '/usergroups/{group_id}/memberof':
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
  '/usergroups/{group_id}/members':
    get:
      description: |-
        This endpoint returns the user members of a User Group.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/members \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupMembersList
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the members of a User Group
      tags:
        - Graph
        - User Group Members & Membership
        - User Groups
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/members?limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/members"

            querystring = {"limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/members?limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the user members of a User Group.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/members \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "user",
            "id": "{User_ID}"
          }'
        ```
      operationId: graph_userGroupMembersPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-UserGroup-Member'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the members of a User Group
      tags:
        - Graph
        - User Group Members & Membership
        - User Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/usergroups/{group_id}/members \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/members"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/members' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"user"}'
    x-functionalities-tags:
      - groups
  '/usergroups/{group_id}/membership':
    get:
      description: |-
        This endpoint returns all users members that are a member of this User Group.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/membership \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupMembership
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Group's membership
      tags:
        - Graph
        - User Group Members & Membership
        - User Groups
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/membership?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/membership"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/membership?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
  '/usergroups/{group_id}/office365s':
    get:
      description: |-
        This endpoint will return all Office 365 instances bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding Office 365 instance; this array represents all grouping and/or associations that would have to be removed to deprovision the Office 365 instance from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/office365s \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupTraverseOffice365
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Office 365 instances bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/office365s?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/office365s"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/office365s?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - m365-read
  '/usergroups/{group_id}/radiusservers':
    get:
      description: |-
        This endpoint will return all RADIUS servers bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding RADIUS Server; this array represents all grouping and/or associations that would have to be removed to deprovision the RADIUS Server from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/radiusservers \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_userGroupTraverseRadiusServer
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the RADIUS Servers bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - radius
        - radius.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/radiusservers?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/radiusservers"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/radiusservers?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - radius-read
  '/usergroups/{group_id}/suggestions':
    get:
      description: |-
        This endpoint returns available suggestions for a given group
        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/suggestions \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: groups_user_suggestions_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - description: ID of the group
          in: path
          name: group_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MemberSuggestion'
            type: array
      security:
        - x-api-key: []
      summary: List Suggestions for a User Group
      tags:
        - User Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/suggestions?limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/suggestions"

            querystring = {"limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/suggestions?limit=10&skip=0' -Method GET -Headers $headers
    post:
      description: |-
        This endpoint applies the suggestions for the specified user group.
        #### Sample Request
        ```
        curl -X PUT https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/suggestions \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
                 "user_ids": ["212345678901234567890123",
                              "123456789012345678901234"]
             }'
        ```
      operationId: groups_user_suggestions_post
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - description: ID of the group
          in: path
          name: group_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              user_ids:
                items:
                  type: string
                type: array
            type: object
            x-examples:
              example-1:
                user_ids:
                  - '212345678901234567890123'
                  - '123456789012345678901234'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/MemberSuggestionsPostResult'
      security:
        - x-api-key: []
      summary: Apply Suggestions for a User Group
      tags:
        - User Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/usergroups/{group_id}/suggestions \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"user_ids":["string"]}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/suggestions"

            payload = {"user_ids": ["string"]}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/suggestions' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"user_ids":["string"]}'
    x-functionalities-tags:
      - groups
  '/usergroups/{group_id}/systemgroups':
    get:
      description: |-
        This endpoint will return all System Groups bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding System Group; this array represents all grouping and/or associations that would have to be removed to deprovision the System Group from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/systemgroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupTraverseSystemGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the System Groups bound to User Groups
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/systemgroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/systemgroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/systemgroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - systems
  '/usergroups/{group_id}/systems':
    get:
      description: |-
        This endpoint will return all Systems bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding System; this array represents all grouping and/or associations that would have to be removed to deprovision the System from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID}/systems \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupTraverseSystem
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Systems bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/systems?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{group_id}/systems"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{group_id}/systems?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - systems
  '/usergroups/{id}':
    delete:
      description: |-
        This endpoint allows you to delete a User Group.

        #### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/usergroups/{GroupID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: groups_user_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroup'
        '204':
          description: No Content
      security:
        - x-api-key: []
      summary: Delete a User Group
      tags:
        - User Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/usergroups/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns the details of a User Group.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/usergroups/{GroupID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: groups_user_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroup'
      security:
        - x-api-key: []
      summary: View an individual User Group details
      tags:
        - User Groups
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/usergroups/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: id
        required: true
        type: string
    put:
      description: |-
        This endpoint allows you to do a full update of the User Group.

        See the [Dynamic Group Configuration KB article](https://jumpcloud.com/support/configure-dynamic-device-groups) for more details on maintaining a Dynamic Group.

        #### Sample Request
        ```
        curl -X PUT https://console.jumpcloud.com/api/v2/usergroups/{Group_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "group_update"
          }'
        ```
      operationId: groups_user_put
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UserGroupPut'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroup'
      security:
        - x-api-key: []
      summary: Update a User Group
      tags:
        - User Groups
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/usergroups/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"attributes":{"sudo":{"enabled":true,"withoutPassword":true},"ldapGroups":[{"name":"string"}],"posixGroups":[{"id":0,"name":"string"}],"radius":{"reply":[{"name":"string","value":"string"}]},"sambaEnabled":true},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/usergroups/{id}"

            payload = {
                "attributes": {
                    "sudo": {
                        "enabled": True,
                        "withoutPassword": True
                    },
                    "ldapGroups": [{"name": "string"}],
                    "posixGroups": [
                        {
                            "id": 0,
                            "name": "string"
                        }
                    ],
                    "radius": {"reply": [
                            {
                                "name": "string",
                                "value": "string"
                            }
                        ]},
                    "sambaEnabled": True
                },
                "description": "string",
                "email": "string",
                "memberQuery": {
                    "queryType": "Filter",
                    "filters": [None]
                },
                "memberQueryExemptions": [
                    {
                        "attributes": {},
                        "id": "string",
                        "type": "string"
                    }
                ],
                "memberSuggestionsNotify": True,
                "membershipMethod": "NOTSET",
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/usergroups/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"attributes":{"sudo":{"enabled":true,"withoutPassword":true},"ldapGroups":[{"name":"string"}],"posixGroups":[{"id":0,"name":"string"}],"radius":{"reply":[{"name":"string","value":"string"}]},"sambaEnabled":true},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
    x-functionalities-tags:
      - groups
  '/users/{userId}/pushendpoints/{pushEndpointId}/verify':
    post:
      description: Endpoint for sending a verification push notification
      operationId: PushVerifications_Start
      parameters:
        - format: byte
          in: path
          name: userId
          required: true
          type: string
        - format: byte
          in: path
          name: pushEndpointId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            properties:
              message:
                type: string
            title: SendVerificationPushRequest-Represents-A-Create-Request
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jumpcloud.auth.PushVerification'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      security:
        - x-api-key: []
      summary: Send Push Verification message
      tags:
        - Push Verification
      x-dynamic-gateway: true
      x-scopes:
        - protect
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/users/{userId}/pushendpoints/{pushEndpointId}/verify \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"message":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{userId}/pushendpoints/{pushEndpointId}/verify"

            payload = {"message": "string"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{userId}/pushendpoints/{pushEndpointId}/verify' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"message":"string"}'
  '/users/{user_id}/activedirectories':
    get:
      description: |-
        This endpoint will return all Active Directory Instances bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding Active Directory instance; this array represents all grouping and/or associations that would have to be removed to deprovision the Active Directory instance from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/activedirectories \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseActiveDirectory
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Active Directory instances bound to a User
      tags:
        - Graph
        - Users
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/activedirectories?filter=&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/activedirectories"

            querystring = {"filter":"","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/activedirectories?filter=&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - active-directory
  '/users/{user_id}/applications':
    get:
      description: |-
        This endpoint will return all Applications bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding Application; this array represents all grouping and/or associations that would have to be removed to deprovision the Application from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/applications \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseApplication
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Applications bound to a User
      tags:
        - Graph
        - Users
      x-scopes:
        - applications
        - applications.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/applications?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/applications"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/applications?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - applications
  '/users/{user_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of a User.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Users and Systems.


        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/associations?targets=system_group \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_userAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsUser:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a User
      tags:
        - Graph
        - Users
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the _direct_ associations of a User.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example Users and Systems.


        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/users/{UserID}/associations \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "attributes": {
              "sudo": {
              "enabled": true,
                "withoutPassword": false
              }
            },
            "op": "add",
            "type": "system_group",
            "id": "{GroupID}"
          }'
        ```
      operationId: graph_userAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-User'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a User
      tags:
        - Graph
        - Users
      x-scopes:
        - users
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/users/{user_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{"sudo":{"enabled":true,"withoutPassword":true}},"type":"active_directory"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {"sudo": {
                        "enabled": True,
                        "withoutPassword": True
                    }},
                "type": "active_directory"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{"sudo":{"enabled":true,"withoutPassword":true}},"type":"active_directory"}'
    x-functionalities-tags:
      - users-associations
  '/users/{user_id}/directories':
    get:
      description: |-
        This endpoint will return all Directories bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding Directory; this array represents all grouping and/or associations that would have to be removed to deprovision the Directory from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/directories \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseDirectory
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Directories bound to a User
      tags:
        - Graph
        - Users
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/directories?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/directories"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/directories?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
  '/users/{user_id}/emails':
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - directory
  '/users/{user_id}/gsuites':
    get:
      description: |-
        This endpoint will return all G-Suite Instances bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding G Suite instance; this array represents all grouping and/or associations that would have to be removed to deprovision the G Suite instance from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/gsuites \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseGSuite
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the G Suite instances bound to a User
      tags:
        - Graph
        - Users
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/gsuites?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/gsuites"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/gsuites?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - google-read
  '/users/{user_id}/ldapservers':
    get:
      description: |-
        This endpoint will return all LDAP Servers bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding LDAP Server; this array represents all grouping and/or associations that would have to be removed to deprovision the LDAP Server from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/ldapservers \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseLdapServer
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the LDAP servers bound to a User
      tags:
        - Graph
        - Users
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/ldapservers?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/ldapservers"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/ldapservers?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - ldap-management
  '/users/{user_id}/memberof':
    get:
      description: |-
        This endpoint returns all the User Groups a User is a member of.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/memberof \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userMemberOf
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the parent Groups of a User
      tags:
        - Graph
        - Users
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/memberof?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/memberof"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/memberof?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - admin
  '/users/{user_id}/office365s':
    get:
      description: |-
        This endpoint will return all Office 365 Instances bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding Office 365 instance; this array represents all grouping and/or associations that would have to be removed to deprovision the Office 365 instance from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/office365s \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseOffice365
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Office 365 instances bound to a User
      tags:
        - Graph
        - Users
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/office365s?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/office365s"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/office365s?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
  '/users/{user_id}/pushendpoints':
    get:
      description: |-
        This endpoint returns the list of push endpoints associated with a user.

        #### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/pushendpoints \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: ${API_KEY}'
        ```
      operationId: pushEndpoints_list
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/PushEndpointResponse'
            type: array
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List Push Endpoints associated with a User
      tags:
        - Users
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints' -Method GET -Headers $headers
    parameters:
      - in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - m365-read
  '/users/{user_id}/pushendpoints/{push_endpoint_id}':
    delete:
      description: This endpoint will delete a push endpoint associated with a user.
      operationId: pushEndpoints_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PushEndpointResponse'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Delete a Push Endpoint associated with a User
      tags:
        - Users
      x-restrict-linked-identity:
        bypassScopes:
          - administrators
        model: SystemUser
        pathParamName: user_id
      x-scopes:
        - users
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints/{push_endpoint_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints/{push_endpoint_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints/{push_endpoint_id}' -Method DELETE -Headers $headers
    get:
      description: This endpoint will retrieve a push endpoint associated with a user.
      operationId: pushEndpoints_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PushEndpointResponse'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Get a push endpoint associated with a User
      tags:
        - Users
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints/{push_endpoint_id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints/{push_endpoint_id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints/{push_endpoint_id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: user_id
        required: true
        type: string
      - in: path
        name: push_endpoint_id
        required: true
        type: string
    patch:
      description: This endpoint will update a push endpoint associated with a user.
      operationId: pushEndpoints_patch
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - in: body
          name: body
          schema:
            additionalProperties: false
            properties:
              name:
                type: string
              state:
                enum:
                  - active
                  - inactive
                type: string
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PushEndpointResponse'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '409':
          $ref: '#/responses/trait:standardErrors:409'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Update a push endpoint associated with a User
      tags:
        - Users
      x-restrict-linked-identity:
        bypassScopes:
          - administrators
        model: SystemUser
        pathParamName: user_id
      x-scopes:
        - users
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints/{push_endpoint_id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"name":"string","state":"active"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints/{push_endpoint_id}"

            payload = {
                "name": "string",
                "state": "active"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/pushendpoints/{push_endpoint_id}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"name":"string","state":"active"}'
  '/users/{user_id}/radiusservers':
    get:
      description: |-
        This endpoint will return all RADIUS Servers bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding RADIUS Server; this array represents all grouping and/or associations that would have to be removed to deprovision the RADIUS Server from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/radiusservers \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseRadiusServer
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the RADIUS Servers bound to a User
      tags:
        - Graph
        - Users
      x-scopes:
        - radius
        - radius.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/radiusservers?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/radiusservers"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/radiusservers?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - radius-users
  '/users/{user_id}/systemgroups':
    get:
      description: |-
        This endpoint will return all System Groups bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding System Group; this array represents all grouping and/or associations that would have to be removed to deprovision the System Group from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/systemgroups\
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseSystemGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the System Groups bound to a User
      tags:
        - Graph
        - Users
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/systemgroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/systemgroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/systemgroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
  '/users/{user_id}/systems':
    get:
      description: |-
        This endpoint will return all Systems bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding System; this array represents all grouping and/or associations that would have to be removed to deprovision the System from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/users/{UserID}/systems\
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseSystem
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Systems bound to a User
      tags:
        - Graph
        - Users
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/users/{user_id}/systems?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/users/{user_id}/systems"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/users/{user_id}/systems?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - users-read
      - systems
  '/users/{user_id}/webauthn-credential/enroll':
    parameters:
      - in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - user-login
  '/users/{user_id}/webauthn-credentials':
    parameters:
      - in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - user-login
  '/users/{user_id}/webauthn-credentials/{webauthn_credential_id}':
    parameters:
      - in: path
        name: user_id
        required: true
        type: string
      - in: path
        name: webauthn_credential_id
        required: true
        type: string
    x-functionalities-tags:
      - user-login
  /validatedomain:
    parameters:
      - description: send a domain as query parameter . It accepts only one domain per API request.
        in: query
        name: domain
        required: true
        type: string
    x-functionalities-tags:
      - user-login
  /webauthn/configs:
    parameters: []
    x-functionalities-tags:
      - user-login
  '/webauthn/configs/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - user-login
  /workdays:
    get:
      description: |-
        This endpoint will return  all the available information about all your instances of Workday.

        ##### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/workdays/ \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: workdays_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/workday-output'
            type: array
      security:
        - x-api-key: []
      summary: List Workdays
      tags:
        - Workday Import
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/workdays?fields=&limit=10&skip=0&sort=&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/workdays"

            querystring = {"fields":"","limit":"10","skip":"0","sort":"","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/workdays?fields=&limit=10&skip=0&sort=&filter=' -Method GET -Headers $headers
    post:
      description: |-
        This endpoint allows you to create a new workday instance.

        You must supply a username and password for `Basic Authentication` that is the same as your WorkDay Integrator System User.  Failure to provide these credentials  will result in the request being rejected.

        Currently `O-Auth` isn't a supported authentication protocol for WorkDay, but will be in the future.

        Currently, only one instance is allowed and it must be `Workday Import`.

        #### Sample Request
        ```
        curl -X POST https://console.jumpcloud.com/api/v2/workdays/ \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "Workday2",
            "reportUrl":"https://workday.com/ccx/service/customreport2/gms/user/reportname?format=json",
            "auth": {
              "basic": {
                "username": "someDeveloper",
                "password": "notTheRealPassword"
              }
            }
          }'
        ```
      operationId: workdays_post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/workday-input'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/workday-output'
      security:
        - x-api-key: []
      summary: Create new Workday
      tags:
        - Workday Import
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/workdays \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"auth":{"basic":{"password":"in tempor ipsum quis","username":"mollit ex"},"oauth":{"code":"non laborum dolore"}},"name":"dolore tempor","reportUrl":"est sit laboris"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/workdays"

            payload = {
                "auth": {
                    "basic": {
                        "password": "in tempor ipsum quis",
                        "username": "mollit ex"
                    },
                    "oauth": {"code": "non laborum dolore"}
                },
                "name": "dolore tempor",
                "reportUrl": "est sit laboris"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/workdays' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"auth":{"basic":{"password":"in tempor ipsum quis","username":"mollit ex"},"oauth":{"code":"non laborum dolore"}},"name":"dolore tempor","reportUrl":"est sit laboris"}'
    x-functionalities-tags:
      - workday
  '/workdays/{id}':
    get:
      description: |-
        This endpoint will return  all the available information about an instance of Workday.

        #### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/workdays/ \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
          ```
      operationId: workdays_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/workday-output'
      security:
        - x-api-key: []
      summary: Get Workday
      tags:
        - Workday Import
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.jumpcloud.com/api/v2/workdays/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/workdays/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/workdays/{id}' -Method GET -Headers $headers
    parameters:
      - in: path
        name: id
        required: true
        type: string
    put:
      description: "This endpoint allows you to update the name and Custom Report URL for a Workday Instance.\n\nCurrently, the name can not be changed from the default of `Workday Import`.\n\n##### Sample Request\n```\ncurl -X PUT https://console.jumpcloud.com/api/v2/workdays/{WorkdayID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"reportUrl\":\"{Report_URL}\",\n\t\"name\":\"{Name}\"\n}\t'\n```"
      operationId: workdays_put
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/workday-fields'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/workday-output'
      security:
        - x-api-key: []
      summary: Update Workday
      tags:
        - Workday Import
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.jumpcloud.com/api/v2/workdays/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"name":"string","reportUrl":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/workdays/{id}"

            payload = {
                "name": "string",
                "reportUrl": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/workdays/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"name":"string","reportUrl":"string"}'
    x-functionalities-tags:
      - workday
  '/workdays/{id}/import/{job_id}/results':
    get:
      description: |-
        This endpoint provides a list of job results from the workday import and will contain all imported data from Workday.

        #### Sample Request
        ```
        curl -X GET https://console.jumpcloud.com/api/v2/workdays/{WorkdayID}/import/{ImportJobID}/results \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: workdays_importresults
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/job-workresult'
            type: array
      security:
        - x-api-key: []
      summary: List Import Results
      tags:
        - Workday Import
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/workdays/{id}/import/{job_id}/results?limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/workdays/{id}/import/{job_id}/results"

            querystring = {"limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/workdays/{id}/import/{job_id}/results?limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - in: path
        name: id
        required: true
        type: string
      - in: path
        name: job_id
        required: true
        type: string
    x-functionalities-tags:
      - workday
  '/workdays/{workday_id}/auth':
    delete:
      description: |-
        Removes any and all authorization methods from the workday instance

        ##### Sample Request
        ```
        curl -X DELETE https://console.jumpcloud.com/api/v2/workdays/{WorkDayID}/auth \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: workdays_deauthorize
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
      security:
        - x-api-key: []
      summary: Deauthorize Workday
      tags:
        - Workday Import
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.jumpcloud.com/api/v2/workdays/{workday_id}/auth \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/workdays/{workday_id}/auth"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/workdays/{workday_id}/auth' -Method DELETE -Headers $headers
    parameters:
      - in: path
        name: workday_id
        required: true
        type: string
    post:
      description: "This endpoint adds an authorization method to a workday instance.\n\nYou must supply a username and password for `Basic Authentication` that is the same as your WorkDay Integrator System User.  Failure to provide these credentials  will result in the request being rejected.\n\nCurrently `O-Auth` isn't a supported authentication protocol for WorkDay, but will be in the future.\n\n#### Sample Request\n\n```\ncurl -X POST https://console.jumpcloud.com/api/v2/workdays/{WorkDayID}/auth \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"auth\":{\n\t  \"basic\": {\n\t\t\"username\": \"someDeveloper\",\t  \n\t\t\"password\": \"notTheRealPassword\"\n\n\t  }\n\t}\n}'\n\n```"
      operationId: workdays_authorize
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/auth-input-object'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: ''
      security:
        - x-api-key: []
      summary: Authorize Workday
      tags:
        - Workday Import
      x-scopes:
        - directories
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/workdays/{workday_id}/auth \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"auth":{"basic":{"password":"mollit cillum","username":"veniam dolore"},"oauth":{"code":"minim ad ea dolor"}}}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/workdays/{workday_id}/auth"

            payload = {"auth": {
                    "basic": {
                        "password": "mollit cillum",
                        "username": "veniam dolore"
                    },
                    "oauth": {"code": "minim ad ea dolor"}
                }}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/workdays/{workday_id}/auth' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"auth":{"basic":{"password":"mollit cillum","username":"veniam dolore"},"oauth":{"code":"minim ad ea dolor"}}}'
    x-functionalities-tags:
      - workday
  '/workdays/{workday_id}/import':
    parameters:
      - in: path
        name: workday_id
        required: true
        type: string
    post:
      description: "The endpoint allows you to create a Workday Import request.\n\n#### Sample Request \n```\ncurl -X POST https://console.jumpcloud.com/api/v2/workdays/{WorkdayID}/import \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '[\n\t{\n\t\t\"email\":\"{email}\",\n\t\t\"firstname\":\"{firstname}\",\n\t\t\"lastname\":\"{firstname}\",\n\t\t\"username\":\"{username}\",\n\t\t\"attributes\":[\n\t\t\t{\"name\":\"EmployeeID\",\"value\":\"0000\"},\n\t\t\t{\"name\":\"WorkdayID\",\"value\":\"name.name\"}\n\t\t\t]\n\t\t\n\t}\n]\n```"
      operationId: workdays_import
      parameters:
        - in: body
          name: body
          schema:
            items:
              $ref: '#/definitions/bulk-user-create'
            type: array
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/job-id'
      security:
        - x-api-key: []
      summary: Workday Import
      tags:
        - Workday Import
      x-scopes:
        - users
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.jumpcloud.com/api/v2/workdays/{workday_id}/import \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '[{"attributes":[{}],"email":"string","firstname":"string","lastname":"string","username":"string"}]'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/workdays/{workday_id}/import"

            payload = [
                {
                    "attributes": [{}],
                    "email": "string",
                    "firstname": "string",
                    "lastname": "string",
                    "username": "string"
                }
            ]
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/workdays/{workday_id}/import' -Method POST -Headers $headers -ContentType 'application/json' -Body '[{"attributes":[{}],"email":"string","firstname":"string","lastname":"string","username":"string"}]'
    x-functionalities-tags:
      - workday
  '/workdays/{workday_id}/workers':
    get:
      description: |-
        This endpoint will return all of the data in your WorkDay Custom Report that has been associated with your WorkDay Instance in JumpCloud.

        ##### Sample Request

        ```
        curl -X GET https://console.jumpcloud.com/api/v2/workdays/{WorkDayID}/workers \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'


        ```
      operationId: workdays_workers
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: ''
          examples:
            application/json:
              - lastName: sint dolore Excepteur ad
              - attributes: {}
                email: nostrud tempor anim ips
                firstName: et ad
                username: Excepteur culpa nulla aliqua
              - attributes: {}
                email: veniam ullamco
              - {}
              - lastName: do
          schema:
            items:
              $ref: '#/definitions/workday-worker'
            type: array
      security:
        - x-api-key: []
      summary: List Workday Workers
      tags:
        - Workday Import
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.jumpcloud.com/api/v2/workdays/{workday_id}/workers?limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.jumpcloud.com/api/v2/workdays/{workday_id}/workers"

            querystring = {"limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.jumpcloud.com/api/v2/workdays/{workday_id}/workers?limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: workday_id
        required: true
        type: string
    x-functionalities-tags:
      - workday
produces:
  - application/json
responses:
  'trait:standardErrors:400':
    description: Bad Request
    schema:
      $ref: '#/definitions/ErrorDetails'
  'trait:standardErrors:401':
    description: Unauthenticated
    schema:
      $ref: '#/definitions/Error'
  'trait:standardErrors:403':
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  'trait:standardErrors:404':
    description: Not Found
    schema:
      $ref: '#/definitions/Error'
  'trait:standardErrors:409':
    description: Conflict
    schema:
      $ref: '#/definitions/Error'
  'trait:standardErrors:410':
    description: Gone
    schema:
      $ref: '#/definitions/Error'
  'trait:standardErrors:500':
    description: Internal Server Error
    schema:
      $ref: '#/definitions/Error'
schemes:
  - https
securityDefinitions:
  x-api-key:
    in: header
    name: x-api-key
    type: apiKey
swagger: '2.0'
tags:
  - name: Access Requests
  - name: AccountManagerCalendar
  - name: Active Directory
  - name: AddOn
  - name: Admin Settings
  - name: Administrators
  - name: Aggregated Policy Stats
  - name: App Catalog
  - name: Apple MDM
  - name: Apple VPP
  - name: Applications
  - name: Assets
  - name: Authentication Policies
  - name: Bulk Job Requests
  - name: Command Templates
  - name: Commands
  - name: Countries
  - name: Custom Emails
  - name: Devices
  - name: Directories
  - name: Directory Insights
  - name: Duo
  - name: Durt
  - name: FeatureTrials
  - name: FulltextSearch
  - name: G Suite
  - name: G Suite Import
  - name: Go
  - name: Google EMM
  - name: Graph
  - name: Groups
  - name: IP Lists
  - name: Identity Providers
  - name: Image
  - name: Knowledge
  - name: LDAP Servers
  - name: Logos
  - name: Managed Service Provider
  - name: Microsoft MDM
  - name: Monitoring and Alerting
  - name: Nli
  - name: Notifications Channels
  - name: OAuthPermissions
  - name: Object Storage
  - name: Office 365
  - name: Office 365 Import
  - name: Organization Certificate
  - name: Organization Feature Settings
  - name: Organizations
  - name: Partners
  - name: Password Manager
  - name: Password Policy
  - name: PasswordManagerItem
  - name: PayNow
  - name: Plan
  - name: Plan Feature
  - name: Policies
  - name: Policy Group Associations
  - name: Policy Group Members & Membership
  - name: Policy Group Templates
  - name: Policy Groups
  - name: Policytemplates
  - name: Providers
  - name: Push
  - name: Push Verification
  - name: RADIUS Servers
  - name: Recommendations
  - name: Remote Assist
  - name: Reports
  - name: Roles
  - name: SCIM Import
  - name: SSO
  - name: SaaS App Management
  - name: SaaS License Management
  - name: Samba Domains
  - name: Saved Views
  - name: Scope Groups
  - name: Search
  - name: Service Accounts
  - name: Software Apps
  - name: Software Catalog
  - name: SubscriptionComponent
  - name: SubscriptionData
  - name: Subscriptions
  - name: System Group Associations
  - name: System Group Members & Membership
  - name: System Groups
  - name: System Insights
  - name: Systems
  - name: Systems Organization Settings
  - name: TokenManagement
  - name: Translation Rules
  - name: Trial Feature Insights
  - name: User Group Associations
  - name: User Group Members & Membership
  - name: User Groups
  - name: Users
  - name: WebAuthn
  - name: Webhook Notifications
  - name: Webhook Notifications Channels
  - name: Workday Import
  - name: fde
  - name: mdm
x-scopes:
  - administrators
  - administrators.readonly
  - anonymous
  - applications
  - applications.readonly
  - assets
  - assets.readonly
  - authn
  - authn.readonly
  - billing
  - commandrunner.legacy
  - commands
  - commands.readonly
  - directories
  - directories.readonly
  - groups
  - groups.readonly
  - groups.self
  - healthmonitoring.alerts
  - healthmonitoring.alerts.readonly
  - healthmonitoring.rules
  - healthmonitoring.rules.readonly
  - mdm
  - mdm.readonly
  - mfa
  - mfa.readonly
  - notifications.channels
  - notifications.channels.readonly
  - organizations
  - organizations.billing
  - organizations.readonly
  - passwordmanager
  - passwordmanager.readonly
  - providers
  - providers.readonly
  - protect
  - radius
  - radius.readonly
  - roles
  - roles.readonly
  - subscriptions.readonly
  - support
  - support.readonly
  - systeminsights.readonly
  - systems
  - systems.readonly
  - systems.self
  - users
  - users.readonly
  - users.self
  - users.create
  - users.properties
  - users.properties.update
  - users.password
  - users.password.expire
  - users.state
  - users.state.readonly
  - users.state.delete
  - users.state.update
  - users.state.unlock
  - accessrequest
  - accessrequest.readonly
  - reports
  - reports.readonly
  - accessmanagement
  - serviceaccounts
  - serviceaccounts.readonly
x-tagGroups:
  - name: Organization
    tags:
      - Access Requests
      - Admin Settings
      - Aggregated Policy Stats
      - App Catalog
      - Applications
      - Assets
      - Directories
      - Durt
      - FulltextSearch
      - G Suite
      - Go
      - Google EMM
      - Identity Providers
      - Microsoft MDM
      - Monitoring and Alerting
      - Nli
      - Notifications Channels
      - OAuthPermissions
      - Object Storage
      - Office 365
      - Organization Certificate
      - Organization Feature Settings
      - Partners
      - Password Manager
      - Password Policy
      - PasswordManagerItem
      - Policy Group Templates
      - Providers
      - Push Verification
      - RADIUS Servers
      - Remote Assist
      - Reports
      - Roles
      - SaaS App Management
      - SaaS License Management
      - Saved Views
      - Scope Groups
      - Search
      - Service Accounts
      - Software Apps
      - Systems
      - Systems Organization Settings
      - TokenManagement
      - Translation Rules
      - Webhook Notifications
      - Webhook Notifications Channels
      - mdm
  - name: endpoints
    tags:
      - Access Requests
      - Active Directory
      - Administrators
      - Aggregated Policy Stats
      - App Catalog
      - Apple MDM
      - Applications
      - Authentication Policies
      - Bulk Job Requests
      - Commands
      - Custom Emails
      - Directories
      - Duo
      - FeatureTrials
      - G Suite
      - G Suite Import
      - Google EMM
      - Graph
      - Groups
      - IP Lists
      - Identity Providers
      - Image
      - LDAP Servers
      - Logos
      - Managed Service Provider
      - Microsoft MDM
      - Monitoring and Alerting
      - Notifications Channels
      - Object Storage
      - Office 365
      - Office 365 Import
      - Organizations
      - Password Manager
      - PasswordManagerItem
      - Password Policy
      - Policies
      - Policy Group Associations
      - Policy Group Members & Membership
      - Policy Group Templates
      - Policy Groups
      - Policytemplates
      - Providers
      - Push Verification
      - RADIUS Servers
      - Reports
      - Roles
      - Rules
      - SCIM Import
      - Samba Domains
      - Saved Views
      - Software Apps
      - Subscriptions
      - System Group Associations
      - System Group Members & Membership
      - System Groups
      - System Insights
      - Systems
      - Systems Organization Settings
      - User Group Associations
      - User Group Members & Membership
      - User Groups
      - Users
      - Workday Import
      - fde
      - mdm
